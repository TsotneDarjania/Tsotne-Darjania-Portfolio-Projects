/*! For license information please see portfolioBundle.js.LICENSE.txt */
(()=>{var t={42:function(t){t.exports=function(t){function e(i){if(n[i])return n[i].exports;var a=n[i]={exports:{},id:i,loaded:!1};return t[i].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var n={};return e.m=t,e.c=n,e.p="dist/",e(0)}([function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}var a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=(i(n(1)),n(6)),o=i(r),s=i(n(7)),l=i(n(8)),d=i(n(9)),c=i(n(10)),u=i(n(11)),h=i(n(14)),p=[],f=!1,m={offset:120,delay:0,easing:"ease",duration:400,disable:!1,once:!1,startEvent:"DOMContentLoaded",throttleDelay:99,debounceDelay:50,disableMutationObserver:!1},g=function(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&(f=!0),f)return p=(0,u.default)(p,m),(0,c.default)(p,m.once),p},v=function(){p=(0,h.default)(),g()};t.exports={init:function(t){m=a(m,t),p=(0,h.default)();var e=document.all&&!window.atob;return function(t){return!0===t||"mobile"===t&&d.default.mobile()||"phone"===t&&d.default.phone()||"tablet"===t&&d.default.tablet()||"function"==typeof t&&!0===t()}(m.disable)||e?void p.forEach((function(t,e){t.node.removeAttribute("data-aos"),t.node.removeAttribute("data-aos-easing"),t.node.removeAttribute("data-aos-duration"),t.node.removeAttribute("data-aos-delay")})):(m.disableMutationObserver||l.default.isSupported()||(console.info('\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call "refreshHard()" by yourself.\n    '),m.disableMutationObserver=!0),document.querySelector("body").setAttribute("data-aos-easing",m.easing),document.querySelector("body").setAttribute("data-aos-duration",m.duration),document.querySelector("body").setAttribute("data-aos-delay",m.delay),"DOMContentLoaded"===m.startEvent&&["complete","interactive"].indexOf(document.readyState)>-1?g(!0):"load"===m.startEvent?window.addEventListener(m.startEvent,(function(){g(!0)})):document.addEventListener(m.startEvent,(function(){g(!0)})),window.addEventListener("resize",(0,s.default)(g,m.debounceDelay,!0)),window.addEventListener("orientationchange",(0,s.default)(g,m.debounceDelay,!0)),window.addEventListener("scroll",(0,o.default)((function(){(0,c.default)(p,m.once)}),m.throttleDelay)),m.disableMutationObserver||l.default.ready("[data-aos]",v),p)},refresh:g,refreshHard:v}},function(t,e){},,,,,function(t,e){(function(e){"use strict";function n(t,e,n){function a(e){var n=u,i=h;return u=h=void 0,v=e,f=t.apply(i,n)}function o(t){var n=t-g;return void 0===g||n>=e||n<0||M&&t-v>=p}function l(){var t=b();return o(t)?d(t):void(m=setTimeout(l,function(t){var n=e-(t-g);return M?x(n,p-(t-v)):n}(t)))}function d(t){return m=void 0,S&&u?a(t):(u=h=void 0,f)}function c(){var t=b(),n=o(t);if(u=arguments,h=this,g=t,n){if(void 0===m)return function(t){return v=t,m=setTimeout(l,e),_?a(t):f}(g);if(M)return m=setTimeout(l,e),a(g)}return void 0===m&&(m=setTimeout(l,e)),f}var u,h,p,f,m,g,v=0,_=!1,M=!1,S=!0;if("function"!=typeof t)throw new TypeError(s);return e=r(e)||0,i(n)&&(_=!!n.leading,p=(M="maxWait"in n)?y(r(n.maxWait)||0,e):p,S="trailing"in n?!!n.trailing:S),c.cancel=function(){void 0!==m&&clearTimeout(m),v=0,u=g=h=m=void 0},c.flush=function(){return void 0===m?f:d(b())},c}function i(t){var e=void 0===t?"undefined":o(t);return!!t&&("object"==e||"function"==e)}function a(t){return"symbol"==(void 0===t?"undefined":o(t))||function(t){return!!t&&"object"==(void 0===t?"undefined":o(t))}(t)&&_.call(t)==d}function r(t){if("number"==typeof t)return t;if(a(t))return l;if(i(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=i(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(c,"");var n=h.test(t);return n||p.test(t)?f(t.slice(2),n?2:8):u.test(t)?l:+t}var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s="Expected a function",l=NaN,d="[object Symbol]",c=/^\s+|\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,h=/^0b[01]+$/i,p=/^0o[0-7]+$/i,f=parseInt,m="object"==(void 0===e?"undefined":o(e))&&e&&e.Object===Object&&e,g="object"==("undefined"==typeof self?"undefined":o(self))&&self&&self.Object===Object&&self,v=m||g||Function("return this")(),_=Object.prototype.toString,y=Math.max,x=Math.min,b=function(){return v.Date.now()};t.exports=function(t,e,a){var r=!0,o=!0;if("function"!=typeof t)throw new TypeError(s);return i(a)&&(r="leading"in a?!!a.leading:r,o="trailing"in a?!!a.trailing:o),n(t,e,{leading:r,maxWait:e,trailing:o})}}).call(e,function(){return this}())},function(t,e){(function(e){"use strict";function n(t){var e=void 0===t?"undefined":r(t);return!!t&&("object"==e||"function"==e)}function i(t){return"symbol"==(void 0===t?"undefined":r(t))||function(t){return!!t&&"object"==(void 0===t?"undefined":r(t))}(t)&&v.call(t)==l}function a(t){if("number"==typeof t)return t;if(i(t))return s;if(n(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=n(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(d,"");var a=u.test(t);return a||h.test(t)?p(t.slice(2),a?2:8):c.test(t)?s:+t}var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o="Expected a function",s=NaN,l="[object Symbol]",d=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,u=/^0b[01]+$/i,h=/^0o[0-7]+$/i,p=parseInt,f="object"==(void 0===e?"undefined":r(e))&&e&&e.Object===Object&&e,m="object"==("undefined"==typeof self?"undefined":r(self))&&self&&self.Object===Object&&self,g=f||m||Function("return this")(),v=Object.prototype.toString,_=Math.max,y=Math.min,x=function(){return g.Date.now()};t.exports=function(t,e,i){function r(e){var n=u,i=h;return u=h=void 0,v=e,f=t.apply(i,n)}function s(t){var n=t-g;return void 0===g||n>=e||n<0||M&&t-v>=p}function l(){var t=x();return s(t)?d(t):void(m=setTimeout(l,function(t){var n=e-(t-g);return M?y(n,p-(t-v)):n}(t)))}function d(t){return m=void 0,S&&u?r(t):(u=h=void 0,f)}function c(){var t=x(),n=s(t);if(u=arguments,h=this,g=t,n){if(void 0===m)return function(t){return v=t,m=setTimeout(l,e),b?r(t):f}(g);if(M)return m=setTimeout(l,e),r(g)}return void 0===m&&(m=setTimeout(l,e)),f}var u,h,p,f,m,g,v=0,b=!1,M=!1,S=!0;if("function"!=typeof t)throw new TypeError(o);return e=a(e)||0,n(i)&&(b=!!i.leading,p=(M="maxWait"in i)?_(a(i.maxWait)||0,e):p,S="trailing"in i?!!i.trailing:S),c.cancel=function(){void 0!==m&&clearTimeout(m),v=0,u=g=h=m=void 0},c.flush=function(){return void 0===m?f:d(x())},c}}).call(e,function(){return this}())},function(t,e){"use strict";function n(t){var e=void 0,i=void 0;for(e=0;e<t.length;e+=1){if((i=t[e]).dataset&&i.dataset.aos)return!0;if(i.children&&n(i.children))return!0}return!1}function i(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}function a(t){t&&t.forEach((function(t){var e=Array.prototype.slice.call(t.addedNodes),i=Array.prototype.slice.call(t.removedNodes);if(n(e.concat(i)))return r()}))}Object.defineProperty(e,"__esModule",{value:!0});var r=function(){};e.default={isSupported:function(){return!!i()},ready:function(t,e){var n=window.document,o=new(i())(a);r=e,o.observe(n.documentElement,{childList:!0,subtree:!0,removedNodes:!0})}}},function(t,e){"use strict";function n(){return navigator.userAgent||navigator.vendor||window.opera||""}Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),a=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,r=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,o=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,s=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,l=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}return i(t,[{key:"phone",value:function(){var t=n();return!(!a.test(t)&&!r.test(t.substr(0,4)))}},{key:"mobile",value:function(){var t=n();return!(!o.test(t)&&!s.test(t.substr(0,4)))}},{key:"tablet",value:function(){return this.mobile()&&!this.phone()}}]),t}();e.default=new l},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=function(t,e){var n=window.pageYOffset,i=window.innerHeight;t.forEach((function(t,a){!function(t,e,n){var i=t.node.getAttribute("data-aos-once");e>t.position?t.node.classList.add("aos-animate"):void 0!==i&&("false"===i||!n&&"true"!==i)&&t.node.classList.remove("aos-animate")}(t,i+n,e)}))}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){return t&&t.__esModule?t:{default:t}}(n(12));e.default=function(t,e){return t.forEach((function(t,n){t.node.classList.add("aos-init"),t.position=(0,i.default)(t.node,e.offset)})),t}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){return t&&t.__esModule?t:{default:t}}(n(13));e.default=function(t,e){var n=0,a=0,r=window.innerHeight,o={offset:t.getAttribute("data-aos-offset"),anchor:t.getAttribute("data-aos-anchor"),anchorPlacement:t.getAttribute("data-aos-anchor-placement")};switch(o.offset&&!isNaN(o.offset)&&(a=parseInt(o.offset)),o.anchor&&document.querySelectorAll(o.anchor)&&(t=document.querySelectorAll(o.anchor)[0]),n=(0,i.default)(t).top,o.anchorPlacement){case"top-bottom":break;case"center-bottom":n+=t.offsetHeight/2;break;case"bottom-bottom":n+=t.offsetHeight;break;case"top-center":n+=r/2;break;case"bottom-center":n+=r/2+t.offsetHeight;break;case"center-center":n+=r/2+t.offsetHeight/2;break;case"top-top":n+=r;break;case"bottom-top":n+=t.offsetHeight+r;break;case"center-top":n+=t.offsetHeight/2+r}return o.anchorPlacement||o.offset||isNaN(e)||(a=e),n+a}},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=function(t){for(var e=0,n=0;t&&!isNaN(t.offsetLeft)&&!isNaN(t.offsetTop);)e+=t.offsetLeft-("BODY"!=t.tagName?t.scrollLeft:0),n+=t.offsetTop-("BODY"!=t.tagName?t.scrollTop:0),t=t.offsetParent;return{top:n,left:e}}},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=function(t){return t=t||document.querySelectorAll("[data-aos]"),Array.prototype.map.call(t,(function(t){return{node:t}}))}}])},441:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,'[data-aos][data-aos][data-aos-duration="50"],body[data-aos-duration="50"] [data-aos]{transition-duration:50ms}[data-aos][data-aos][data-aos-delay="50"],body[data-aos-delay="50"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="50"].aos-animate,body[data-aos-delay="50"] [data-aos].aos-animate{transition-delay:50ms}[data-aos][data-aos][data-aos-duration="100"],body[data-aos-duration="100"] [data-aos]{transition-duration:.1s}[data-aos][data-aos][data-aos-delay="100"],body[data-aos-delay="100"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="100"].aos-animate,body[data-aos-delay="100"] [data-aos].aos-animate{transition-delay:.1s}[data-aos][data-aos][data-aos-duration="150"],body[data-aos-duration="150"] [data-aos]{transition-duration:.15s}[data-aos][data-aos][data-aos-delay="150"],body[data-aos-delay="150"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="150"].aos-animate,body[data-aos-delay="150"] [data-aos].aos-animate{transition-delay:.15s}[data-aos][data-aos][data-aos-duration="200"],body[data-aos-duration="200"] [data-aos]{transition-duration:.2s}[data-aos][data-aos][data-aos-delay="200"],body[data-aos-delay="200"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="200"].aos-animate,body[data-aos-delay="200"] [data-aos].aos-animate{transition-delay:.2s}[data-aos][data-aos][data-aos-duration="250"],body[data-aos-duration="250"] [data-aos]{transition-duration:.25s}[data-aos][data-aos][data-aos-delay="250"],body[data-aos-delay="250"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="250"].aos-animate,body[data-aos-delay="250"] [data-aos].aos-animate{transition-delay:.25s}[data-aos][data-aos][data-aos-duration="300"],body[data-aos-duration="300"] [data-aos]{transition-duration:.3s}[data-aos][data-aos][data-aos-delay="300"],body[data-aos-delay="300"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="300"].aos-animate,body[data-aos-delay="300"] [data-aos].aos-animate{transition-delay:.3s}[data-aos][data-aos][data-aos-duration="350"],body[data-aos-duration="350"] [data-aos]{transition-duration:.35s}[data-aos][data-aos][data-aos-delay="350"],body[data-aos-delay="350"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="350"].aos-animate,body[data-aos-delay="350"] [data-aos].aos-animate{transition-delay:.35s}[data-aos][data-aos][data-aos-duration="400"],body[data-aos-duration="400"] [data-aos]{transition-duration:.4s}[data-aos][data-aos][data-aos-delay="400"],body[data-aos-delay="400"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="400"].aos-animate,body[data-aos-delay="400"] [data-aos].aos-animate{transition-delay:.4s}[data-aos][data-aos][data-aos-duration="450"],body[data-aos-duration="450"] [data-aos]{transition-duration:.45s}[data-aos][data-aos][data-aos-delay="450"],body[data-aos-delay="450"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="450"].aos-animate,body[data-aos-delay="450"] [data-aos].aos-animate{transition-delay:.45s}[data-aos][data-aos][data-aos-duration="500"],body[data-aos-duration="500"] [data-aos]{transition-duration:.5s}[data-aos][data-aos][data-aos-delay="500"],body[data-aos-delay="500"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="500"].aos-animate,body[data-aos-delay="500"] [data-aos].aos-animate{transition-delay:.5s}[data-aos][data-aos][data-aos-duration="550"],body[data-aos-duration="550"] [data-aos]{transition-duration:.55s}[data-aos][data-aos][data-aos-delay="550"],body[data-aos-delay="550"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="550"].aos-animate,body[data-aos-delay="550"] [data-aos].aos-animate{transition-delay:.55s}[data-aos][data-aos][data-aos-duration="600"],body[data-aos-duration="600"] [data-aos]{transition-duration:.6s}[data-aos][data-aos][data-aos-delay="600"],body[data-aos-delay="600"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="600"].aos-animate,body[data-aos-delay="600"] [data-aos].aos-animate{transition-delay:.6s}[data-aos][data-aos][data-aos-duration="650"],body[data-aos-duration="650"] [data-aos]{transition-duration:.65s}[data-aos][data-aos][data-aos-delay="650"],body[data-aos-delay="650"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="650"].aos-animate,body[data-aos-delay="650"] [data-aos].aos-animate{transition-delay:.65s}[data-aos][data-aos][data-aos-duration="700"],body[data-aos-duration="700"] [data-aos]{transition-duration:.7s}[data-aos][data-aos][data-aos-delay="700"],body[data-aos-delay="700"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="700"].aos-animate,body[data-aos-delay="700"] [data-aos].aos-animate{transition-delay:.7s}[data-aos][data-aos][data-aos-duration="750"],body[data-aos-duration="750"] [data-aos]{transition-duration:.75s}[data-aos][data-aos][data-aos-delay="750"],body[data-aos-delay="750"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="750"].aos-animate,body[data-aos-delay="750"] [data-aos].aos-animate{transition-delay:.75s}[data-aos][data-aos][data-aos-duration="800"],body[data-aos-duration="800"] [data-aos]{transition-duration:.8s}[data-aos][data-aos][data-aos-delay="800"],body[data-aos-delay="800"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="800"].aos-animate,body[data-aos-delay="800"] [data-aos].aos-animate{transition-delay:.8s}[data-aos][data-aos][data-aos-duration="850"],body[data-aos-duration="850"] [data-aos]{transition-duration:.85s}[data-aos][data-aos][data-aos-delay="850"],body[data-aos-delay="850"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="850"].aos-animate,body[data-aos-delay="850"] [data-aos].aos-animate{transition-delay:.85s}[data-aos][data-aos][data-aos-duration="900"],body[data-aos-duration="900"] [data-aos]{transition-duration:.9s}[data-aos][data-aos][data-aos-delay="900"],body[data-aos-delay="900"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="900"].aos-animate,body[data-aos-delay="900"] [data-aos].aos-animate{transition-delay:.9s}[data-aos][data-aos][data-aos-duration="950"],body[data-aos-duration="950"] [data-aos]{transition-duration:.95s}[data-aos][data-aos][data-aos-delay="950"],body[data-aos-delay="950"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="950"].aos-animate,body[data-aos-delay="950"] [data-aos].aos-animate{transition-delay:.95s}[data-aos][data-aos][data-aos-duration="1000"],body[data-aos-duration="1000"] [data-aos]{transition-duration:1s}[data-aos][data-aos][data-aos-delay="1000"],body[data-aos-delay="1000"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1000"].aos-animate,body[data-aos-delay="1000"] [data-aos].aos-animate{transition-delay:1s}[data-aos][data-aos][data-aos-duration="1050"],body[data-aos-duration="1050"] [data-aos]{transition-duration:1.05s}[data-aos][data-aos][data-aos-delay="1050"],body[data-aos-delay="1050"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1050"].aos-animate,body[data-aos-delay="1050"] [data-aos].aos-animate{transition-delay:1.05s}[data-aos][data-aos][data-aos-duration="1100"],body[data-aos-duration="1100"] [data-aos]{transition-duration:1.1s}[data-aos][data-aos][data-aos-delay="1100"],body[data-aos-delay="1100"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1100"].aos-animate,body[data-aos-delay="1100"] [data-aos].aos-animate{transition-delay:1.1s}[data-aos][data-aos][data-aos-duration="1150"],body[data-aos-duration="1150"] [data-aos]{transition-duration:1.15s}[data-aos][data-aos][data-aos-delay="1150"],body[data-aos-delay="1150"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1150"].aos-animate,body[data-aos-delay="1150"] [data-aos].aos-animate{transition-delay:1.15s}[data-aos][data-aos][data-aos-duration="1200"],body[data-aos-duration="1200"] [data-aos]{transition-duration:1.2s}[data-aos][data-aos][data-aos-delay="1200"],body[data-aos-delay="1200"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1200"].aos-animate,body[data-aos-delay="1200"] [data-aos].aos-animate{transition-delay:1.2s}[data-aos][data-aos][data-aos-duration="1250"],body[data-aos-duration="1250"] [data-aos]{transition-duration:1.25s}[data-aos][data-aos][data-aos-delay="1250"],body[data-aos-delay="1250"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1250"].aos-animate,body[data-aos-delay="1250"] [data-aos].aos-animate{transition-delay:1.25s}[data-aos][data-aos][data-aos-duration="1300"],body[data-aos-duration="1300"] [data-aos]{transition-duration:1.3s}[data-aos][data-aos][data-aos-delay="1300"],body[data-aos-delay="1300"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1300"].aos-animate,body[data-aos-delay="1300"] [data-aos].aos-animate{transition-delay:1.3s}[data-aos][data-aos][data-aos-duration="1350"],body[data-aos-duration="1350"] [data-aos]{transition-duration:1.35s}[data-aos][data-aos][data-aos-delay="1350"],body[data-aos-delay="1350"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1350"].aos-animate,body[data-aos-delay="1350"] [data-aos].aos-animate{transition-delay:1.35s}[data-aos][data-aos][data-aos-duration="1400"],body[data-aos-duration="1400"] [data-aos]{transition-duration:1.4s}[data-aos][data-aos][data-aos-delay="1400"],body[data-aos-delay="1400"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1400"].aos-animate,body[data-aos-delay="1400"] [data-aos].aos-animate{transition-delay:1.4s}[data-aos][data-aos][data-aos-duration="1450"],body[data-aos-duration="1450"] [data-aos]{transition-duration:1.45s}[data-aos][data-aos][data-aos-delay="1450"],body[data-aos-delay="1450"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1450"].aos-animate,body[data-aos-delay="1450"] [data-aos].aos-animate{transition-delay:1.45s}[data-aos][data-aos][data-aos-duration="1500"],body[data-aos-duration="1500"] [data-aos]{transition-duration:1.5s}[data-aos][data-aos][data-aos-delay="1500"],body[data-aos-delay="1500"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1500"].aos-animate,body[data-aos-delay="1500"] [data-aos].aos-animate{transition-delay:1.5s}[data-aos][data-aos][data-aos-duration="1550"],body[data-aos-duration="1550"] [data-aos]{transition-duration:1.55s}[data-aos][data-aos][data-aos-delay="1550"],body[data-aos-delay="1550"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1550"].aos-animate,body[data-aos-delay="1550"] [data-aos].aos-animate{transition-delay:1.55s}[data-aos][data-aos][data-aos-duration="1600"],body[data-aos-duration="1600"] [data-aos]{transition-duration:1.6s}[data-aos][data-aos][data-aos-delay="1600"],body[data-aos-delay="1600"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1600"].aos-animate,body[data-aos-delay="1600"] [data-aos].aos-animate{transition-delay:1.6s}[data-aos][data-aos][data-aos-duration="1650"],body[data-aos-duration="1650"] [data-aos]{transition-duration:1.65s}[data-aos][data-aos][data-aos-delay="1650"],body[data-aos-delay="1650"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1650"].aos-animate,body[data-aos-delay="1650"] [data-aos].aos-animate{transition-delay:1.65s}[data-aos][data-aos][data-aos-duration="1700"],body[data-aos-duration="1700"] [data-aos]{transition-duration:1.7s}[data-aos][data-aos][data-aos-delay="1700"],body[data-aos-delay="1700"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1700"].aos-animate,body[data-aos-delay="1700"] [data-aos].aos-animate{transition-delay:1.7s}[data-aos][data-aos][data-aos-duration="1750"],body[data-aos-duration="1750"] [data-aos]{transition-duration:1.75s}[data-aos][data-aos][data-aos-delay="1750"],body[data-aos-delay="1750"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1750"].aos-animate,body[data-aos-delay="1750"] [data-aos].aos-animate{transition-delay:1.75s}[data-aos][data-aos][data-aos-duration="1800"],body[data-aos-duration="1800"] [data-aos]{transition-duration:1.8s}[data-aos][data-aos][data-aos-delay="1800"],body[data-aos-delay="1800"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1800"].aos-animate,body[data-aos-delay="1800"] [data-aos].aos-animate{transition-delay:1.8s}[data-aos][data-aos][data-aos-duration="1850"],body[data-aos-duration="1850"] [data-aos]{transition-duration:1.85s}[data-aos][data-aos][data-aos-delay="1850"],body[data-aos-delay="1850"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1850"].aos-animate,body[data-aos-delay="1850"] [data-aos].aos-animate{transition-delay:1.85s}[data-aos][data-aos][data-aos-duration="1900"],body[data-aos-duration="1900"] [data-aos]{transition-duration:1.9s}[data-aos][data-aos][data-aos-delay="1900"],body[data-aos-delay="1900"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1900"].aos-animate,body[data-aos-delay="1900"] [data-aos].aos-animate{transition-delay:1.9s}[data-aos][data-aos][data-aos-duration="1950"],body[data-aos-duration="1950"] [data-aos]{transition-duration:1.95s}[data-aos][data-aos][data-aos-delay="1950"],body[data-aos-delay="1950"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="1950"].aos-animate,body[data-aos-delay="1950"] [data-aos].aos-animate{transition-delay:1.95s}[data-aos][data-aos][data-aos-duration="2000"],body[data-aos-duration="2000"] [data-aos]{transition-duration:2s}[data-aos][data-aos][data-aos-delay="2000"],body[data-aos-delay="2000"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2000"].aos-animate,body[data-aos-delay="2000"] [data-aos].aos-animate{transition-delay:2s}[data-aos][data-aos][data-aos-duration="2050"],body[data-aos-duration="2050"] [data-aos]{transition-duration:2.05s}[data-aos][data-aos][data-aos-delay="2050"],body[data-aos-delay="2050"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2050"].aos-animate,body[data-aos-delay="2050"] [data-aos].aos-animate{transition-delay:2.05s}[data-aos][data-aos][data-aos-duration="2100"],body[data-aos-duration="2100"] [data-aos]{transition-duration:2.1s}[data-aos][data-aos][data-aos-delay="2100"],body[data-aos-delay="2100"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2100"].aos-animate,body[data-aos-delay="2100"] [data-aos].aos-animate{transition-delay:2.1s}[data-aos][data-aos][data-aos-duration="2150"],body[data-aos-duration="2150"] [data-aos]{transition-duration:2.15s}[data-aos][data-aos][data-aos-delay="2150"],body[data-aos-delay="2150"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2150"].aos-animate,body[data-aos-delay="2150"] [data-aos].aos-animate{transition-delay:2.15s}[data-aos][data-aos][data-aos-duration="2200"],body[data-aos-duration="2200"] [data-aos]{transition-duration:2.2s}[data-aos][data-aos][data-aos-delay="2200"],body[data-aos-delay="2200"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2200"].aos-animate,body[data-aos-delay="2200"] [data-aos].aos-animate{transition-delay:2.2s}[data-aos][data-aos][data-aos-duration="2250"],body[data-aos-duration="2250"] [data-aos]{transition-duration:2.25s}[data-aos][data-aos][data-aos-delay="2250"],body[data-aos-delay="2250"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2250"].aos-animate,body[data-aos-delay="2250"] [data-aos].aos-animate{transition-delay:2.25s}[data-aos][data-aos][data-aos-duration="2300"],body[data-aos-duration="2300"] [data-aos]{transition-duration:2.3s}[data-aos][data-aos][data-aos-delay="2300"],body[data-aos-delay="2300"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2300"].aos-animate,body[data-aos-delay="2300"] [data-aos].aos-animate{transition-delay:2.3s}[data-aos][data-aos][data-aos-duration="2350"],body[data-aos-duration="2350"] [data-aos]{transition-duration:2.35s}[data-aos][data-aos][data-aos-delay="2350"],body[data-aos-delay="2350"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2350"].aos-animate,body[data-aos-delay="2350"] [data-aos].aos-animate{transition-delay:2.35s}[data-aos][data-aos][data-aos-duration="2400"],body[data-aos-duration="2400"] [data-aos]{transition-duration:2.4s}[data-aos][data-aos][data-aos-delay="2400"],body[data-aos-delay="2400"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2400"].aos-animate,body[data-aos-delay="2400"] [data-aos].aos-animate{transition-delay:2.4s}[data-aos][data-aos][data-aos-duration="2450"],body[data-aos-duration="2450"] [data-aos]{transition-duration:2.45s}[data-aos][data-aos][data-aos-delay="2450"],body[data-aos-delay="2450"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2450"].aos-animate,body[data-aos-delay="2450"] [data-aos].aos-animate{transition-delay:2.45s}[data-aos][data-aos][data-aos-duration="2500"],body[data-aos-duration="2500"] [data-aos]{transition-duration:2.5s}[data-aos][data-aos][data-aos-delay="2500"],body[data-aos-delay="2500"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2500"].aos-animate,body[data-aos-delay="2500"] [data-aos].aos-animate{transition-delay:2.5s}[data-aos][data-aos][data-aos-duration="2550"],body[data-aos-duration="2550"] [data-aos]{transition-duration:2.55s}[data-aos][data-aos][data-aos-delay="2550"],body[data-aos-delay="2550"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2550"].aos-animate,body[data-aos-delay="2550"] [data-aos].aos-animate{transition-delay:2.55s}[data-aos][data-aos][data-aos-duration="2600"],body[data-aos-duration="2600"] [data-aos]{transition-duration:2.6s}[data-aos][data-aos][data-aos-delay="2600"],body[data-aos-delay="2600"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2600"].aos-animate,body[data-aos-delay="2600"] [data-aos].aos-animate{transition-delay:2.6s}[data-aos][data-aos][data-aos-duration="2650"],body[data-aos-duration="2650"] [data-aos]{transition-duration:2.65s}[data-aos][data-aos][data-aos-delay="2650"],body[data-aos-delay="2650"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2650"].aos-animate,body[data-aos-delay="2650"] [data-aos].aos-animate{transition-delay:2.65s}[data-aos][data-aos][data-aos-duration="2700"],body[data-aos-duration="2700"] [data-aos]{transition-duration:2.7s}[data-aos][data-aos][data-aos-delay="2700"],body[data-aos-delay="2700"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2700"].aos-animate,body[data-aos-delay="2700"] [data-aos].aos-animate{transition-delay:2.7s}[data-aos][data-aos][data-aos-duration="2750"],body[data-aos-duration="2750"] [data-aos]{transition-duration:2.75s}[data-aos][data-aos][data-aos-delay="2750"],body[data-aos-delay="2750"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2750"].aos-animate,body[data-aos-delay="2750"] [data-aos].aos-animate{transition-delay:2.75s}[data-aos][data-aos][data-aos-duration="2800"],body[data-aos-duration="2800"] [data-aos]{transition-duration:2.8s}[data-aos][data-aos][data-aos-delay="2800"],body[data-aos-delay="2800"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2800"].aos-animate,body[data-aos-delay="2800"] [data-aos].aos-animate{transition-delay:2.8s}[data-aos][data-aos][data-aos-duration="2850"],body[data-aos-duration="2850"] [data-aos]{transition-duration:2.85s}[data-aos][data-aos][data-aos-delay="2850"],body[data-aos-delay="2850"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2850"].aos-animate,body[data-aos-delay="2850"] [data-aos].aos-animate{transition-delay:2.85s}[data-aos][data-aos][data-aos-duration="2900"],body[data-aos-duration="2900"] [data-aos]{transition-duration:2.9s}[data-aos][data-aos][data-aos-delay="2900"],body[data-aos-delay="2900"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2900"].aos-animate,body[data-aos-delay="2900"] [data-aos].aos-animate{transition-delay:2.9s}[data-aos][data-aos][data-aos-duration="2950"],body[data-aos-duration="2950"] [data-aos]{transition-duration:2.95s}[data-aos][data-aos][data-aos-delay="2950"],body[data-aos-delay="2950"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="2950"].aos-animate,body[data-aos-delay="2950"] [data-aos].aos-animate{transition-delay:2.95s}[data-aos][data-aos][data-aos-duration="3000"],body[data-aos-duration="3000"] [data-aos]{transition-duration:3s}[data-aos][data-aos][data-aos-delay="3000"],body[data-aos-delay="3000"] [data-aos]{transition-delay:0}[data-aos][data-aos][data-aos-delay="3000"].aos-animate,body[data-aos-delay="3000"] [data-aos].aos-animate{transition-delay:3s}[data-aos][data-aos][data-aos-easing=linear],body[data-aos-easing=linear] [data-aos]{transition-timing-function:cubic-bezier(.25,.25,.75,.75)}[data-aos][data-aos][data-aos-easing=ease],body[data-aos-easing=ease] [data-aos]{transition-timing-function:ease}[data-aos][data-aos][data-aos-easing=ease-in],body[data-aos-easing=ease-in] [data-aos]{transition-timing-function:ease-in}[data-aos][data-aos][data-aos-easing=ease-out],body[data-aos-easing=ease-out] [data-aos]{transition-timing-function:ease-out}[data-aos][data-aos][data-aos-easing=ease-in-out],body[data-aos-easing=ease-in-out] [data-aos]{transition-timing-function:ease-in-out}[data-aos][data-aos][data-aos-easing=ease-in-back],body[data-aos-easing=ease-in-back] [data-aos]{transition-timing-function:cubic-bezier(.6,-.28,.735,.045)}[data-aos][data-aos][data-aos-easing=ease-out-back],body[data-aos-easing=ease-out-back] [data-aos]{transition-timing-function:cubic-bezier(.175,.885,.32,1.275)}[data-aos][data-aos][data-aos-easing=ease-in-out-back],body[data-aos-easing=ease-in-out-back] [data-aos]{transition-timing-function:cubic-bezier(.68,-.55,.265,1.55)}[data-aos][data-aos][data-aos-easing=ease-in-sine],body[data-aos-easing=ease-in-sine] [data-aos]{transition-timing-function:cubic-bezier(.47,0,.745,.715)}[data-aos][data-aos][data-aos-easing=ease-out-sine],body[data-aos-easing=ease-out-sine] [data-aos]{transition-timing-function:cubic-bezier(.39,.575,.565,1)}[data-aos][data-aos][data-aos-easing=ease-in-out-sine],body[data-aos-easing=ease-in-out-sine] [data-aos]{transition-timing-function:cubic-bezier(.445,.05,.55,.95)}[data-aos][data-aos][data-aos-easing=ease-in-quad],body[data-aos-easing=ease-in-quad] [data-aos]{transition-timing-function:cubic-bezier(.55,.085,.68,.53)}[data-aos][data-aos][data-aos-easing=ease-out-quad],body[data-aos-easing=ease-out-quad] [data-aos]{transition-timing-function:cubic-bezier(.25,.46,.45,.94)}[data-aos][data-aos][data-aos-easing=ease-in-out-quad],body[data-aos-easing=ease-in-out-quad] [data-aos]{transition-timing-function:cubic-bezier(.455,.03,.515,.955)}[data-aos][data-aos][data-aos-easing=ease-in-cubic],body[data-aos-easing=ease-in-cubic] [data-aos]{transition-timing-function:cubic-bezier(.55,.085,.68,.53)}[data-aos][data-aos][data-aos-easing=ease-out-cubic],body[data-aos-easing=ease-out-cubic] [data-aos]{transition-timing-function:cubic-bezier(.25,.46,.45,.94)}[data-aos][data-aos][data-aos-easing=ease-in-out-cubic],body[data-aos-easing=ease-in-out-cubic] [data-aos]{transition-timing-function:cubic-bezier(.455,.03,.515,.955)}[data-aos][data-aos][data-aos-easing=ease-in-quart],body[data-aos-easing=ease-in-quart] [data-aos]{transition-timing-function:cubic-bezier(.55,.085,.68,.53)}[data-aos][data-aos][data-aos-easing=ease-out-quart],body[data-aos-easing=ease-out-quart] [data-aos]{transition-timing-function:cubic-bezier(.25,.46,.45,.94)}[data-aos][data-aos][data-aos-easing=ease-in-out-quart],body[data-aos-easing=ease-in-out-quart] [data-aos]{transition-timing-function:cubic-bezier(.455,.03,.515,.955)}[data-aos^=fade][data-aos^=fade]{opacity:0;transition-property:opacity,transform}[data-aos^=fade][data-aos^=fade].aos-animate{opacity:1;transform:translateZ(0)}[data-aos=fade-up]{transform:translate3d(0,100px,0)}[data-aos=fade-down]{transform:translate3d(0,-100px,0)}[data-aos=fade-right]{transform:translate3d(-100px,0,0)}[data-aos=fade-left]{transform:translate3d(100px,0,0)}[data-aos=fade-up-right]{transform:translate3d(-100px,100px,0)}[data-aos=fade-up-left]{transform:translate3d(100px,100px,0)}[data-aos=fade-down-right]{transform:translate3d(-100px,-100px,0)}[data-aos=fade-down-left]{transform:translate3d(100px,-100px,0)}[data-aos^=zoom][data-aos^=zoom]{opacity:0;transition-property:opacity,transform}[data-aos^=zoom][data-aos^=zoom].aos-animate{opacity:1;transform:translateZ(0) scale(1)}[data-aos=zoom-in]{transform:scale(.6)}[data-aos=zoom-in-up]{transform:translate3d(0,100px,0) scale(.6)}[data-aos=zoom-in-down]{transform:translate3d(0,-100px,0) scale(.6)}[data-aos=zoom-in-right]{transform:translate3d(-100px,0,0) scale(.6)}[data-aos=zoom-in-left]{transform:translate3d(100px,0,0) scale(.6)}[data-aos=zoom-out]{transform:scale(1.2)}[data-aos=zoom-out-up]{transform:translate3d(0,100px,0) scale(1.2)}[data-aos=zoom-out-down]{transform:translate3d(0,-100px,0) scale(1.2)}[data-aos=zoom-out-right]{transform:translate3d(-100px,0,0) scale(1.2)}[data-aos=zoom-out-left]{transform:translate3d(100px,0,0) scale(1.2)}[data-aos^=slide][data-aos^=slide]{transition-property:transform}[data-aos^=slide][data-aos^=slide].aos-animate{transform:translateZ(0)}[data-aos=slide-up]{transform:translate3d(0,100%,0)}[data-aos=slide-down]{transform:translate3d(0,-100%,0)}[data-aos=slide-right]{transform:translate3d(-100%,0,0)}[data-aos=slide-left]{transform:translate3d(100%,0,0)}[data-aos^=flip][data-aos^=flip]{backface-visibility:hidden;transition-property:transform}[data-aos=flip-left]{transform:perspective(2500px) rotateY(-100deg)}[data-aos=flip-left].aos-animate{transform:perspective(2500px) rotateY(0)}[data-aos=flip-right]{transform:perspective(2500px) rotateY(100deg)}[data-aos=flip-right].aos-animate{transform:perspective(2500px) rotateY(0)}[data-aos=flip-up]{transform:perspective(2500px) rotateX(-100deg)}[data-aos=flip-up].aos-animate{transform:perspective(2500px) rotateX(0)}[data-aos=flip-down]{transform:perspective(2500px) rotateX(100deg)}[data-aos=flip-down].aos-animate{transform:perspective(2500px) rotateX(0)}',""]);const s=o},48:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Esteban&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),o.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..800;1,400..800&family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap);"]),o.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap);"]),o.push([t.id,'.custom-font-1 {\n  font-family: "Merriweather", serif;\n}\n.custom-font-2 {\n  font-family: "EB Garamond", serif;\n}\n.custom-font-3 {\n  font-family: "Esteban", serif;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n\n  scroll-behavior: smooth;\n  overflow-x: hidden;\n}\n\nbody {\n  position: absolute;\n  overflow-x: hidden;\n\n  scroll-behavior: smooth;\n}\n\na {\n  text-decoration: none;\n  color: currentColor;\n}\n\n.mainText {\n  font-size: 2rem;\n  font-family: "Dosis", sans-serif;\n  text-align: center;\n  margin-top: 10%;\n  margin-bottom: 10%;\n}\n\nsvg {\n  margin-top: -30px;\n}\n\n#code-cover-screen {\n  animation: scrollCodeIn 4s;\n  -webkit-animation-fill-mode: forwards;\n  animation-fill-mode: forwards;\n}\n\n@keyframes scrollCodeIn {\n  0% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(180px);\n    opacity: 1;\n  }\n}\n\n#scrolling-code {\n  animation: scrollCode 3s 1.65s linear infinite;\n}\n\n#scrolling-code-2 {\n  animation: scrollCode2 3s 1.65s linear infinite;\n  transform: translateY(87px);\n}\n\n@keyframes scrollCode {\n  0% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n  49.99% {\n    transform: translateY(-80px);\n    opacity: 1;\n  }\n  50% {\n    transform: translatey(87px);\n    opacity: 0;\n  }\n  50.01% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes scrollCode2 {\n  0% {\n    transform: translateY(87);\n    opacity: 1;\n  }\n  49.99% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n  99.98% {\n    transform: translatey(-80px);\n    opacity: 1;\n  }\n  99.99% {\n    transform: translateY(87);\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n::-webkit-scrollbar {\n  width: 16px;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: rgb(80, 253, 103);\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-track {\n  background-color: rgb(32, 32, 34);\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background-color: rgb(237, 255, 240);\n}\n',""]);const s=o},324:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,".HyvHUIVy_0WaLEjefrDk {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100vw;\n  max-width: 1200px;\n\n  padding: 40px 80px;\n\n  margin-top: 80px;\n}\n@media only screen and (max-width: 900px) {\n  .HyvHUIVy_0WaLEjefrDk {\n    padding: 10px 20px;\n  }\n}\n\n.WRR3M24tjkLhPxlr3L4w {\n  font-size: 4rem;\n  font-weight: 600;\n  color: rgb(80, 253, 103);\n  margin: 20px 0;\n}\n@media only screen and (max-width: 900px) {\n  .WRR3M24tjkLhPxlr3L4w {\n    font-size: 2rem;\n  }\n}\n\n.MOg41NlGQV2Maqh6Ug2Q {\n  width: 60%;\n  background-color: rgb(32, 32, 34);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 30px;\n  border-radius: 20px;\n}\n@media only screen and (max-width: 900px) {\n  .MOg41NlGQV2Maqh6Ug2Q {\n    width: 100%;\n  }\n}\n\n.TWSEiytXMiWjJ3XDe68O {\n  font-size: 2.5rem;\n  font-weight: bold;\n  color: rgb(240, 161, 16);\n  margin: 20px 0;\n}\n@media only screen and (max-width: 900px) {\n  .TWSEiytXMiWjJ3XDe68O {\n    font-size: 2rem;\n  }\n}\n\n.EeQcbMjSeDefO6nqEkmg {\n  width: 100%;\n  height: 60px;\n  background-color: rgb(24, 27, 24);\n  border: none;\n  border-radius: 10px;\n  padding: 10px;\n  margin: 10px 0;\n\n  font-size: 1.7rem;\n\n  color: white;\n}\n@media only screen and (max-width: 900px) {\n  .EeQcbMjSeDefO6nqEkmg {\n    font-size: 1.3rem;\n  }\n}\n\n.PciJR1ztG499MmPVtoDW {\n  resize: none;\n  height: 300px;\n}\n\n.bjFuvd1daFGpXzizFSMV {\n  width: 100%;\n  height: 60px;\n  background-color: rgb(80, 253, 103);\n  border: none;\n  border-radius: 10px;\n  padding: 10px;\n  margin: 10px 0;\n\n  font-size: 1.7rem;\n  font-weight: bold;\n\n  color: rgb(34, 32, 32);\n\n  cursor: pointer;\n\n  transition: all 0.3s;\n}\n@media only screen and (max-width: 900px) {\n  .bjFuvd1daFGpXzizFSMV {\n    font-size: 1.4rem;\n  }\n}\n.bjFuvd1daFGpXzizFSMV:hover {\n  background-color: rgb(23, 29, 23);\n  color: rgb(255, 254, 254);\n}\n",""]),o.locals={contact:"HyvHUIVy_0WaLEjefrDk",title:"WRR3M24tjkLhPxlr3L4w",form:"MOg41NlGQV2Maqh6Ug2Q",formTitle:"TWSEiytXMiWjJ3XDe68O",formInput:"EeQcbMjSeDefO6nqEkmg",formTextArea:"PciJR1ztG499MmPVtoDW",formButton:"bjFuvd1daFGpXzizFSMV"};const s=o},346:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,".kSdysGbEw1j3E85Z3Fep {\n  position: relative;\n  margin-top: 100px;\n\n  width: 100vw;\n  max-width: 1200px;\n\n  padding: 20px 40px;\n\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-direction: column;\n\n  overflow: hidden !important;\n}\n@media only screen and (max-width: 900px) {\n  .kSdysGbEw1j3E85Z3Fep {\n    padding: 10px 20px;\n  }\n}\n\n.DVv2l8xr6yU07FMr5dJw {\n  font-size: 4rem;\n  font-weight: 600;\n  color: rgb(80, 253, 103);\n  margin: 20px 0;\n}\n@media only screen and (max-width: 900px) {\n  .DVv2l8xr6yU07FMr5dJw {\n    font-size: 2rem;\n  }\n}\n\n.DX3ADcInWLZwD1uv2zQZ {\n  position: absolute;\n  width: 30px;\n  height: 1900px;\n\n  margin-top: 190px;\n\n  top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-direction: column;\n}\n@media only screen and (max-width: 900px) {\n  .DX3ADcInWLZwD1uv2zQZ {\n    display: none;\n  }\n}\n\n.mVDjkFJHrtDJJPbzKGIw {\n  width: 5px;\n  height: 5px;\n  background-color: rgb(24, 27, 24);\n\n  border-radius: 50%;\n\n  margin-top: 5px;\n}\n\n.UdOfxZVDZvyzVmIw74lA {\n  display: flex;\n  justify-content: space-between;\n\n  width: 100%;\n\n  overflow: hidden !important;\n}\n\n.HOrMwRfb9XM_ShURAw_6 {\n  width: 45%;\n  display: flex;\n  flex-direction: column;\n\n  align-items: start;\n}\n@media only screen and (max-width: 900px) {\n  .HOrMwRfb9XM_ShURAw_6 {\n    width: 100%;\n  }\n}\n._2yP6Z_32Z2iopRaKx1q {\n  text-align: right;\n}\n.AEKD3ttUxyBTz7z5DTit {\n  width: 45%;\n  display: flex;\n  flex-direction: column;\n\n  align-items: end;\n}\n.eoJIvZau7mfD9eTt9LjM {\n  width: 45%;\n  display: flex;\n  flex-direction: column;\n\n  align-items: end;\n}\n@media only screen and (max-width: 900px) {\n  .AEKD3ttUxyBTz7z5DTit {\n    width: 100%;\n  }\n  .eoJIvZau7mfD9eTt9LjM {\n    display: none;\n  }\n}\n\n.Oe_pUneniUn1GtSoAwpQ {\n  font-size: 2rem;\n  font-weight: 600;\n  color: rgb(255, 176, 73);\n}\n\n.UxSHiOvMBORaZNcKm_lW {\n  font-size: 1.2rem;\n  font-weight: 400;\n  color: rgb(129, 115, 105);\n}\n\n.fSwyf10Ho9XBOdionOWL {\n  font-size: 1.3rem;\n  font-weight: 400;\n  color: rgb(129, 115, 105);\n\n  margin-top: 7px;\n}\n\n.PnmEVG6nduMen_RfdaR0 {\n  font-size: 1.3rem;\n  font-weight: bold;\n  color: rgb(255, 167, 35);\n  margin-top: 7px;\n}\n\n.AyDHngy7d2JSn70vg7Dp {\n  font-weight: bold;\n  font-size: 1.3rem;\n  color: rgb(44, 177, 11);\n}\n.e3w31av335XiKWV3wQ4Q {\n  font-weight: bold;\n  font-size: 1.3rem;\n  text-align: right;\n  color: rgb(44, 177, 11);\n}\n\n.saCI_hOTkJNTGYtUd1Z6 {\n  width: 100px;\n  height: 100px;\n\n  border-radius: 100%;\n}\n",""]),o.locals={experience:"kSdysGbEw1j3E85Z3Fep",title:"DVv2l8xr6yU07FMr5dJw",dottes:"DX3ADcInWLZwD1uv2zQZ",dot:"mVDjkFJHrtDJJPbzKGIw",work:"UdOfxZVDZvyzVmIw74lA",workLeftContent:"HOrMwRfb9XM_ShURAw_6",rightWorkDescription:"_2yP6Z_32Z2iopRaKx1q",workRightContent:"AEKD3ttUxyBTz7z5DTit",workFakeRightContent:"eoJIvZau7mfD9eTt9LjM",workTitle:"Oe_pUneniUn1GtSoAwpQ",workData:"UxSHiOvMBORaZNcKm_lW",workDescription:"fSwyf10Ho9XBOdionOWL",workPosition:"PnmEVG6nduMen_RfdaR0",workTechnologies:"AyDHngy7d2JSn70vg7Dp",rightWorkTechnologies:"e3w31av335XiKWV3wQ4Q",workImage:"saCI_hOTkJNTGYtUd1Z6"};const s=o},401:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,"footer {\n  width: 100%;\n  height: 200px;\n\n  margin-top: 60px;\n\n  background-color: rgb(32, 32, 34);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: relative;\n}\n@media only screen and (max-width: 900px) {\n  .GLtglzXA3OdZQR0LTd8C {\n    font-size: 1.4rem;\n  }\n}\n\n.ukUYcxygxgU9e0igo5TQ {\n  position: absolute;\n  left: 20px;\n  top: 20px;\n  width: 40px;\n  height: 40px;\n\n  cursor: pointer;\n}\n\n.Ivcu58LSQn_q5pfIe9bg {\n  position: absolute;\n  right: 30px;\n  top: 20px;\n  width: 35px;\n  height: 35px;\n\n  cursor: pointer;\n\n  cursor: pointer;\n}\n\n.ub3oIeIjLNvEfxqrfbN9 {\n  position: absolute;\n  left: 20px;\n  bottom: 20px;\n  width: 40px;\n  height: 40px;\n\n  cursor: pointer;\n}\n\n.ufczEdMDG43Ks3_sOX9_ {\n  position: absolute;\n  right: 30px;\n  bottom: 20px;\n  width: 40px;\n  height: 40px;\n\n  cursor: pointer;\n}\n\n.nqcGyNIBqiV4Mhfq1Sq1 {\n  font-size: 0.9rem;\n  color: rgb(136, 127, 127);\n}\n\n.x1nVmovnGCYPh4mmANJe {\n  max-width: 1200px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: auto;\n\n  position: relative;\n}\n\n@media only screen and (max-width: 900px) {\n  .x1nVmovnGCYPh4mmANJe {\n    max-width: 1200px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100%;\n\n    position: relative;\n  }\n}\n",""]),o.locals={formButton:"GLtglzXA3OdZQR0LTd8C",gitHubImage:"ukUYcxygxgU9e0igo5TQ",xImage:"Ivcu58LSQn_q5pfIe9bg",linkedinImage:"ub3oIeIjLNvEfxqrfbN9",facebookImage:"ufczEdMDG43Ks3_sOX9_",copyrightText:"nqcGyNIBqiV4Mhfq1Sq1",footerContent:"x1nVmovnGCYPh4mmANJe"};const s=o},214:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,".T5wekCQYy2pzPYgJ1xSr {\n  margin-top: 15vh;\n\n  width: 100vw;\n  height: 100vh;\n\n  position: relative;\n\n  z-index: 100;\n\n  max-width: 1200px;\n\n  overflow-y: hidden;\n}\n\n.IW1zAmNACa9KlwAxBli2 {\n  position: fixed;\n  background-color: white;\n  z-index: 200;\n}\n\n.BUr1QsgUa7zabkuzOkhL {\n  position: absolute;\n  left: 5%;\n\n  margin-top: auto;\n  margin-bottom: auto;\n  top: 0;\n  bottom: 30%;\n\n  width: 40%;\n  height: 80%;\n\n  object-fit: cover;\n\n  animation-delay: 0.5s;\n\n  transition: 1s;\n\n  opacity: 0;\n  animation-name: o9Z9v7tj3SAG1cLbCfPd;\n  animation-duration: 0.8s;\n  animation-fill-mode: forwards;\n}\n\n.LUsr9OlB6a0ue1KdT120 {\n  position: absolute;\n\n  right: 5%;\n\n  margin-top: auto;\n  margin-bottom: auto;\n  top: 0;\n  bottom: 30%;\n\n  width: 40%;\n  height: 80%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  transition: 1s;\n}\n\n.vXWXc2_YTMSBT4mIbee1 {\n  font-size: 3rem;\n  font-weight: 700;\n  color: rgb(56, 202, 11);\n\n  animation-delay: 1.5s;\n\n  opacity: 0;\n  animation-name: o9Z9v7tj3SAG1cLbCfPd;\n  animation-duration: 0.9s;\n  animation-fill-mode: forwards;\n}\n\n.Wb8LwfGSwsbsSl1SSTLq {\n  font-size: 1.6rem;\n  font-weight: 600;\n  color: rgb(56, 202, 11);\n\n  margin-top: 20px;\n\n  animation-delay: 2s;\n\n  opacity: 0;\n  animation-name: o9Z9v7tj3SAG1cLbCfPd;\n  animation-duration: 0.8s;\n  animation-fill-mode: forwards;\n}\n\n.vpRsA7fgHHZZVdbUA5XQ {\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: rgb(226, 132, 9);\n\n  animation-delay: 2.5s;\n\n  opacity: 0;\n  animation-name: o9Z9v7tj3SAG1cLbCfPd;\n  animation-duration: 0.8s;\n  animation-fill-mode: forwards;\n}\n\n@keyframes o9Z9v7tj3SAG1cLbCfPd {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.l79g74oRiJWdejgw3200 {\n  left: -100vw;\n}\n\n.SCFr19qZiFo6olcJCTqg {\n  right: -100vw;\n  opacity: 0;\n}\n\n.uzhT8N_vJVUK2FOpY8s8 {\n  position: absolute;\n  width: 80%;\n  height: fit-content;\n\n  right: 0;\n  left: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n  top: 4%;\n\n  text-align: center;\n  font-size: 1.6rem;\n  font-weight: 600;\n  color: rgb(29, 158, 57);\n}\n\n._7tLwxNaF4k5GmafuvgL {\n  position: absolute;\n  left: 5%;\n  right: 0;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  bottom: -5vh;\n\n  width: fit-content;\n}\n\n@media screen and (max-width: 1400px) {\n  .uzhT8N_vJVUK2FOpY8s8 {\n    font-size: 1.2rem;\n  }\n}\n\n@media screen and (max-width: 800px) {\n  ._7tLwxNaF4k5GmafuvgL {\n    position: absolute;\n    left: 5%;\n    right: 0;\n\n    margin-left: auto;\n    margin-right: auto;\n\n    bottom: 5vh;\n\n    width: fit-content;\n  }\n}\n\n@media screen and (max-width: 461px) {\n  ._7tLwxNaF4k5GmafuvgL {\n    position: absolute;\n    left: 5%;\n    right: 0;\n\n    margin-left: auto;\n    margin-right: auto;\n\n    bottom: -10vh;\n\n    width: fit-content;\n  }\n}\n\n@media screen and (max-width: 520px) {\n  .vXWXc2_YTMSBT4mIbee1 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: rgb(56, 202, 11);\n\n    animation-delay: 1.5s;\n\n    opacity: 0;\n    animation-name: o9Z9v7tj3SAG1cLbCfPd;\n    animation-duration: 0.9s;\n    animation-fill-mode: forwards;\n  }\n\n  .Wb8LwfGSwsbsSl1SSTLq {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: rgb(56, 202, 11);\n\n    margin-top: 20px;\n\n    animation-delay: 2s;\n\n    opacity: 0;\n    animation-name: o9Z9v7tj3SAG1cLbCfPd;\n    animation-duration: 0.8s;\n    animation-fill-mode: forwards;\n  }\n\n  .vpRsA7fgHHZZVdbUA5XQ {\n    font-size: 1rem;\n    font-weight: 600;\n    color: rgb(226, 132, 9);\n\n    animation-delay: 2.5s;\n\n    opacity: 0;\n    animation-name: o9Z9v7tj3SAG1cLbCfPd;\n    animation-duration: 0.8s;\n    animation-fill-mode: forwards;\n  }\n}\n",""]),o.locals={hero:"T5wekCQYy2pzPYgJ1xSr",fixedHero:"IW1zAmNACa9KlwAxBli2",myImage:"BUr1QsgUa7zabkuzOkhL",show:"o9Z9v7tj3SAG1cLbCfPd",textContainer:"LUsr9OlB6a0ue1KdT120",title:"vXWXc2_YTMSBT4mIbee1",subHeading:"Wb8LwfGSwsbsSl1SSTLq",text:"vpRsA7fgHHZZVdbUA5XQ",goLeft:"l79g74oRiJWdejgw3200",goRight:"SCFr19qZiFo6olcJCTqg",heroText:"uzhT8N_vJVUK2FOpY8s8",computerAnimation:"_7tLwxNaF4k5GmafuvgL"};const s=o},729:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,'.QjUhkkHJWEnWK10jooEA {\n  position: fixed;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n\n  top: -20vh;\n\n  width: 100vw;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  max-width: 1200px;\n\n  padding: 20px 40px;\n\n  z-index: 110;\n\n  animation-delay: 4.5s;\n  animation-name: _U1RpAm2C2_BBJI0JSK6;\n  animation-fill-mode: forwards;\n  animation-duration: 1.2s;\n\n  transition: 0.5s;\n}\n\n.ORthu3ldvwkN_U6W1YAh {\n  margin-top: 30px;\n  background-color: rgb(168, 255, 134);\n\n  border-radius: 50px;\n}\n\n@keyframes _U1RpAm2C2_BBJI0JSK6 {\n  0% {\n    opacity: 0;\n    top: -20vh;\n  }\n  100% {\n    top: 0px;\n    opacity: 1;\n  }\n}\n\n.beY20BmeUToQOCUJNkww {\n  position: relative;\n\n  font-size: 3rem;\n  font-weight: 600;\n  color: rgb(56, 202, 11);\n  padding: 10px 20px;\n  cursor: pointer;\n\n  background: none;\n\n  border: none;\n  transition: all 0.3s;\n}\n@media only screen and (max-width: 900px) {\n  .beY20BmeUToQOCUJNkww {\n    font-size: 1.6rem;\n  }\n}\n.beY20BmeUToQOCUJNkww::after {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 20%;\n  left: 0;\n  bottom: 30%;\n  background-color: rgb(251, 255, 8);\n\n  z-index: -1;\n\n  transition: all 0.3s;\n}\n.beY20BmeUToQOCUJNkww:hover::after {\n  height: 100%;\n  bottom: 0;\n}\n\n.TJDYtS_wThyog74SQP6V {\n  display: none;\n}\n\n.w5oayN2oup8l0ZVCdxPv {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style: none;\n\n  width: 100%;\n}\n\n@media screen and (max-width: 1050px) {\n  .w5oayN2oup8l0ZVCdxPv {\n    position: fixed;\n    left: -100vw;\n    top: 14.5vh;\n\n    width: 100vw;\n\n    height: 86vh;\n\n    padding-top: 30px;\n    padding-bottom: 30px;\n\n    background-color: rgb(253, 253, 253);\n\n    flex-direction: column;\n    display: flex;\n\n    transition: 0.3s;\n  }\n\n  .beY20BmeUToQOCUJNkww {\n    font-size: 33px;\n  }\n\n  .PC4u813192xNC9WRnmUo {\n    left: 0;\n  }\n\n  .TJDYtS_wThyog74SQP6V {\n    display: block;\n\n    width: 50px;\n    height: 50px;\n\n    position: relative;\n\n    overflow: hidden;\n  }\n\n  .fgHaAfx4ZxJ2z5vXn4rJ {\n    position: absolute;\n    left: 0;\n    top: 0;\n    transition: 0.3s;\n\n    width: 100%;\n    height: 4px;\n\n    background-color: white;\n  }\n\n  .AkOIh9WIJtLrXVztT22N {\n    transform: rotate(45deg);\n    top: 50%;\n  }\n\n  .wqqLsBWAzQ4HJEko0mNx {\n    position: absolute;\n    left: 0;\n    top: 45%;\n    transition: 0.3s;\n\n    width: 100%;\n    height: 4px;\n\n    background-color: white;\n  }\n\n  .b4yLSgLkyxSOVwUYKvC7 {\n    opacity: 0;\n  }\n\n  .EftWH09r7DgLaWcadJnn {\n    position: absolute;\n    left: 0;\n    top: 90%;\n    transition: 0.3s;\n\n    width: 100%;\n    height: 4px;\n\n    background-color: white;\n  }\n\n  .cbxqbqmT47hBszc1__Bc {\n    transform: rotate(-45deg);\n    top: 50%;\n  }\n\n  .QjUhkkHJWEnWK10jooEA {\n    background-color: rgb(15, 15, 15);\n\n    justify-content: center;\n    align-items: center;\n\n    height: 15vh;\n  }\n\n  .ORthu3ldvwkN_U6W1YAh {\n    margin-top: 0px;\n    background-color: rgb(15, 15, 15);\n\n    border-radius: 0;\n  }\n}\n',""]),o.locals={nav:"QjUhkkHJWEnWK10jooEA",show:"_U1RpAm2C2_BBJI0JSK6",scrolled:"ORthu3ldvwkN_U6W1YAh",menuButton:"beY20BmeUToQOCUJNkww",hamburgerMenu:"TJDYtS_wThyog74SQP6V",ul:"w5oayN2oup8l0ZVCdxPv",ulActive:"PC4u813192xNC9WRnmUo",line1:"fgHaAfx4ZxJ2z5vXn4rJ",line1Active:"AkOIh9WIJtLrXVztT22N",line2:"wqqLsBWAzQ4HJEko0mNx",line2Active:"b4yLSgLkyxSOVwUYKvC7",line3:"EftWH09r7DgLaWcadJnn",line3Active:"cbxqbqmT47hBszc1__Bc"};const s=o},956:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,'.URJCZSl5tsluu3sqIRjR {\n  margin-top: 100px;\n\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-direction: column;\n\n  overflow-x: hidden !important;\n  overflow-y: hidden !important;\n}\n\n.RRQtKBq9yCG6FCGX1_hN {\n  font-size: 4rem;\n  font-weight: 600;\n  color: rgb(80, 253, 103);\n  margin: 20px 0;\n}\n@media only screen and (max-width: 1100px) {\n  .RRQtKBq9yCG6FCGX1_hN {\n    font-size: 2rem;\n  }\n}\n\n.XyVlsR5vPdUpw9WXm0gt {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  max-width: 1200px;\n  width: 90vw;\n  margin: 20px 0;\n\n  position: relative;\n\n  margin-top: 40px;\n\n  overflow-y: hidden !important;\n  overflow-x: hidden !important;\n}\n\n.LHTOc0ectCLZL83R8xTI {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n\n  position: relative;\n\n  overflow-y: hidden !important;\n  overflow-x: hidden !important;\n}\n@media only screen and (max-width: 1100px) {\n  .LHTOc0ectCLZL83R8xTI {\n    flex-direction: column;\n    align-items: center;\n  }\n  .XyVlsR5vPdUpw9WXm0gt {\n    margin-top: 20px;\n  }\n}\n\n.KOJI0jzf4ctFqdL2voHn {\n  width: 40%;\n  height: 240px;\n\n  border-radius: 10px;\n\n  object-fit: cover;\n}\n@media only screen and (max-width: 1100px) {\n  .KOJI0jzf4ctFqdL2voHn {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n}\n\n.tyTOmyieraDNYro0xbeU {\n  font-size: 2.3rem;\n  font-weight: 600;\n  color: rgb(66, 212, 86);\n}\n@media only screen and (max-width: 1100px) {\n  .tyTOmyieraDNYro0xbeU {\n    font-size: 1.6rem;\n  }\n}\n\n.FRRouuoeDK6jw8YWiXv2 {\n  width: 45%;\n\n  color: rgb(49, 87, 54);\n\n  font-size: 1.5rem;\n}\n@media only screen and (max-width: 1100px) {\n  .FRRouuoeDK6jw8YWiXv2 {\n    width: 100%;\n    font-size: 1rem;\n  }\n}\n\n.DKMb50e7jQk7r8Gug01g {\n  display: flex;\n\n  justify-content: end;\n\n  width: 100%;\n\n  margin-top: 10px;\n\n  gap: 20px;\n}\n@media only screen and (max-width: 1100px) {\n  .DKMb50e7jQk7r8Gug01g {\n    display: flex;\n    width: 100%;\n    justify-content: start;\n\n    gap: 20px;\n\n    margin-top: 5px;\n  }\n}\n\n.ZiCeCrHpL1RoJDBiZYqP {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: rgb(66, 212, 86);\n  padding: 10px 20px;\n  cursor: pointer;\n\n  width: fit-content;\n\n  position: relative;\n\n  background: none;\n\n  border: none;\n  transition: all 0.3s;\n\n  border: 2px solid rgb(66, 212, 86);\n}\n@media only screen and (max-width: 1100px) {\n  .ZiCeCrHpL1RoJDBiZYqP {\n    font-size: 1.2rem;\n  }\n}\n.ZiCeCrHpL1RoJDBiZYqP::after {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 20%;\n  left: 0;\n  bottom: 30%;\n  background-color: rgb(251, 255, 8);\n  opacity: 0.6;\n\n  z-index: -1;\n\n  transition: all 0.3s;\n}\n.ZiCeCrHpL1RoJDBiZYqP:hover::after {\n  height: 100%;\n  bottom: 0;\n}\n',""]),o.locals={projects:"URJCZSl5tsluu3sqIRjR",title:"RRQtKBq9yCG6FCGX1_hN",project:"XyVlsR5vPdUpw9WXm0gt",projectIntro:"LHTOc0ectCLZL83R8xTI",projectImage:"KOJI0jzf4ctFqdL2voHn",projectTitle:"tyTOmyieraDNYro0xbeU",projectText:"FRRouuoeDK6jw8YWiXv2",projectIndicators:"DKMb50e7jQk7r8Gug01g",gitHuButton:"ZiCeCrHpL1RoJDBiZYqP"};const s=o},172:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,".OitSfgoTaSusjacJ_X8B {\n  width: 100vw;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-direction: column;\n\n  margin-top: 150px;\n\n  position: relative;\n}\n\n.VGaNeCXqFUD_d_KFECK0 {\n  font-size: 4rem;\n  font-weight: 600;\n  color: rgb(80, 253, 103);\n  margin: 20px 0;\n}\n@media only screen and (max-width: 900px) {\n  .VGaNeCXqFUD_d_KFECK0 {\n    font-size: 2rem;\n  }\n}\n\n.BHwu1YwYui_dkHx_3vgp {\n  width: 100vw;\n  height: 800px;\n\n  position: relative; /* Important to position .skill elements relative to this container */\n  overflow: hidden; /* Ensure elements don't go outside the container */\n}\n\n.ZI8XAPrei2aUb6tyTPfQ {\n  position: absolute; /* This allows the skill to be placed anywhere in the container */\n  background-color: rgb(15, 15, 17);\n  color: rgb(80, 253, 103);\n  font-weight: bold;\n\n  width: fit-content;\n  height: min-content;\n  font-size: 2.3rem;\n  padding: 15px;\n  cursor: grab; /* Change cursor to indicate draggable items */\n\n  border-radius: 10px;\n}\n@media only screen and (max-width: 900px) {\n  .ZI8XAPrei2aUb6tyTPfQ {\n    font-size: 1.3rem;\n  }\n}\n\n.J4uIS3q4RoqDhXbIFNw2 {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 240px;\n  height: 50px;\n  background-color: rgb(80, 253, 103);\n  color: rgb(30, 36, 31);\n  font-weight: bold;\n  font-size: 1.3rem;\n  border-radius: 10px;\n  cursor: pointer;\n\n  border: 1px solid rgb(31, 49, 33);\n\n  transition: all 0.3s;\n}\n.J4uIS3q4RoqDhXbIFNw2:hover {\n  background-color: rgb(29, 158, 57);\n}\n@media only screen and (max-width: 900px) {\n  .J4uIS3q4RoqDhXbIFNw2 {\n    font-size: 1rem;\n  }\n}\n",""]),o.locals={skills:"OitSfgoTaSusjacJ_X8B",title:"VGaNeCXqFUD_d_KFECK0",container:"BHwu1YwYui_dkHx_3vgp",skill:"ZI8XAPrei2aUb6tyTPfQ",downloadButton:"J4uIS3q4RoqDhXbIFNw2"};const s=o},928:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var i=n(601),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([t.id,'.JIIBHPkqUrmte1DesePp {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n\n  width: 100vw;\n  background-color: rgb(255, 255, 255);\n}\n\n.bDRJ26rW_G5ubCMqb_jQ {\n  position: absolute;\n  left: 0;\n  right: 0;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  top: 42vh;\n\n  width: 100vw;\n  height: 20vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  animation-delay: 4.5s;\n  animation-name: MQ38nHASmOg3uksvBmh7;\n  animation-duration: 1s;\n  animation-fill-mode: forwards;\n\n  overflow-x: hidden !important;\n}\n@media only screen and (max-width: 900px) {\n  .bDRJ26rW_G5ubCMqb_jQ {\n    animation-delay: 2.5s;\n  }\n}\n\n@keyframes MQ38nHASmOg3uksvBmh7 {\n  0% {\n    top: 42vh;\n  }\n  30% {\n    top: 42vh;\n    background-color: rgb(48, 48, 48);\n  }\n  100% {\n    top: 0vh;\n    background-color: rgb(48, 48, 48);\n  }\n}\n\n.f8ahGduej9ib2SzSTXdf {\n  white-space: nowrap;\n  overflow: hidden;\n\n  width: 0;\n\n  color: rgb(43, 145, 23);\n  text-align: center;\n\n  font-size: 3.2rem !important;\n\n  animation-delay: 0.4s !important;\n\n  animation: JOer4LPn0ELIfbsRazBn 5s steps(160) forwards,\n    stHlyxtgZsVi5ZmBt7fl 0.1s step-end infinite alternate;\n}\n@media only screen and (max-width: 900px) {\n  .f8ahGduej9ib2SzSTXdf {\n    font-size: 1.2rem !important;\n\n    animation: JOer4LPn0ELIfbsRazBn 1.2s steps(70) forwards,\n      stHlyxtgZsVi5ZmBt7fl 0.1s step-end infinite alternate;\n  }\n}\n\n.E42bnGzwXyI01V_C76_m {\n  white-space: nowrap;\n  overflow: hidden;\n\n  width: 0;\n\n  color: rgb(209, 206, 43);\n  text-align: center;\n\n  font-size: 2.7rem !important;\n\n  animation-delay: 1.4s !important;\n\n  animation: JOer4LPn0ELIfbsRazBn 5s steps(160) forwards,\n    stHlyxtgZsVi5ZmBt7fl 0.1s step-end infinite alternate;\n}\n@media only screen and (max-width: 900px) {\n  .E42bnGzwXyI01V_C76_m {\n    font-size: 1.2rem !important;\n\n    animation: JOer4LPn0ELIfbsRazBn 1s steps(80) forwards,\n      stHlyxtgZsVi5ZmBt7fl 0.1s step-end infinite alternate;\n  }\n}\n@keyframes JOer4LPn0ELIfbsRazBn {\n  from {\n    width: 0;\n  }\n  to {\n    width: 90ch; /* 12 characters wide, adjust based on text length */\n  }\n}\n@media only screen and (max-width: 900px) {\n  @keyframes JOer4LPn0ELIfbsRazBn {\n    from {\n      width: 0;\n    }\n    to {\n      width: 20ch; /* 12 characters wide, adjust based on text length */\n    }\n  }\n}\n\n@keyframes stHlyxtgZsVi5ZmBt7fl {\n  from {\n    border-right-color: transparent;\n  }\n  to {\n    border-right-color: black;\n  }\n}\n\n.nLj8rQI61W_87dUtFVAT {\n  animation-delay: 5s;\n  animation-name: clReoh4sWzHzmEExoJ1w;\n  animation-duration: 0.5s;\n  animation-fill-mode: forwards;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  opacity: 0;\n}\n\n@keyframes clReoh4sWzHzmEExoJ1w {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@media only screen and (max-width: 900px) {\n  .pDq7ubCf4FfnbcH2ox8D {\n    font-size: 1.6rem;\n\n    flex-direction: column;\n  }\n}\n\n.vleMEauvI1kkO0WUFghu {\n  position: relative;\n\n  font-size: 3rem;\n  font-weight: 600;\n  color: rgb(56, 202, 11);\n  padding: 10px 20px;\n  cursor: pointer;\n\n  background: none;\n\n  border: none;\n  transition: all 0.3s;\n}\n@media only screen and (max-width: 900px) {\n  .vleMEauvI1kkO0WUFghu {\n    font-size: 1.6rem;\n  }\n}\n.vleMEauvI1kkO0WUFghu::after {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 20%;\n  left: 0;\n  bottom: 30%;\n  background-color: rgb(251, 255, 8);\n  opacity: 0.6;\n\n  z-index: -1;\n\n  transition: all 0.3s;\n}\n.vleMEauvI1kkO0WUFghu:hover::after {\n  height: 100%;\n  bottom: 0;\n}\n\n.yaZ4Lku0X4M7QGxQ7kNQ {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 40px;\n\n  width: 90vw;\n\n  max-width: 1400px;\n\n  position: relative;\n\n  opacity: 0;\n\n  animation-name: clReoh4sWzHzmEExoJ1w;\n  animation-duration: 1.2s;\n  animation-fill-mode: forwards;\n\n  animation-delay: 5.6s;\n}\n@media only screen and (max-width: 900px) {\n  .yaZ4Lku0X4M7QGxQ7kNQ {\n    animation-delay: 1.6s;\n  }\n}\n\n.sxEQQ3rDcN40wXIMnwY3 {\n  position: relative;\n\n  width: min-content;\n  height: min-content;\n\n  display: flex;\n  justify-content: center;\n}\n\n.Yd4bTV9Jjq_a4ol3LtGW {\n  width: 100%;\n  height: auto;\n\n  filter: grayscale(100%);\n\n  box-shadow: 3px 3px 0px 6px rgba(48, 47, 47, 0.75);\n}\n\n.PGz9Hmu7kWPZ838izH2L {\n  width: 70%;\n\n  text-align: center;\n  font-size: 1.6rem;\n  color: rgb(29, 158, 57);\n}\n@media only screen and (max-width: 900px) {\n  .PGz9Hmu7kWPZ838izH2L {\n    width: 95%;\n    font-size: 1.2rem;\n  }\n}\n',""]),o.locals={homePage:"JIIBHPkqUrmte1DesePp",introText:"bDRJ26rW_G5ubCMqb_jQ",introAnim:"MQ38nHASmOg3uksvBmh7",animeText1:"f8ahGduej9ib2SzSTXdf",typing:"JOer4LPn0ELIfbsRazBn",blink:"stHlyxtgZsVi5ZmBt7fl",animeText2:"E42bnGzwXyI01V_C76_m",menuContent:"nLj8rQI61W_87dUtFVAT",show:"clReoh4sWzHzmEExoJ1w",menuButtonContainer:"pDq7ubCf4FfnbcH2ox8D",menuButton:"vleMEauvI1kkO0WUFghu",hero:"yaZ4Lku0X4M7QGxQ7kNQ",computerAnimation:"sxEQQ3rDcN40wXIMnwY3",tsotneImage:"Yd4bTV9Jjq_a4ol3LtGW",heroText:"PGz9Hmu7kWPZ838izH2L"};const s=o},314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,a,r){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(i)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var d=0;d<t.length;d++){var c=[].concat(t[d]);i&&o[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},601:t=>{"use strict";t.exports=function(t){return t[1]}},72:t=>{"use strict";var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var r={},o=[],s=0;s<t.length;s++){var l=t[s],d=i.base?l[0]+i.base:l[0],c=r[d]||0,u="".concat(d," ").concat(c);r[d]=c+1;var h=n(u),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)e[h].references++,e[h].updater(p);else{var f=a(p,i);i.byIndex=s,e.splice(s,0,{identifier:u,updater:f,references:1})}o.push(u)}return o}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var r=i(t=t||[],a=a||{});return function(t){t=t||[];for(var o=0;o<r.length;o++){var s=n(r[o]);e[s].references--}for(var l=i(t,a),d=0;d<r.length;d++){var c=n(r[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=l}}},659:t=>{"use strict";var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,a&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";const t={context:void 0,registry:void 0,done:!1,getContextId(){return e(this.context.count)},getNextContextId(){return e(this.context.count++)}};function e(e){const n=String(e),i=n.length-1;return t.context.id+(i?String.fromCharCode(96+i):"")+n}function i(e){t.context=e}const a=(Symbol("solid-proxy"),Symbol("solid-track"),Symbol("solid-dev-component"),{equals:(t,e)=>t===e});let r=null,o=N;const s=1,l=2,d={owned:null,cleanups:null,context:null,owner:null};var c=null;let u=null,h=null,p=null,f=null,m=null,g=null,v=0;function _(t,e){const n={value:t,observers:null,observerSlots:null,comparator:(e=e?Object.assign({},a,e):a).equals||void 0};return[C.bind(n),t=>("function"==typeof t&&(t=u&&u.running&&u.sources.has(n)?t(n.tValue):t(n.value)),R(n,t))]}function y(t,e,n){const i=L(t,e,!1,s);h&&u&&u.running?m.push(i):P(i)}function x(t,e,n){o=O;const i=L(t,e,!1,s),a=A&&function(t){let e;return c&&c.context&&void 0!==(e=c.context[t.id])?e:t.defaultValue}(A);a&&(i.suspense=a),n&&n.render||(i.user=!0),g?g.push(i):P(i)}function b(t,e,n){n=n?Object.assign({},a,n):a;const i=L(t,e,!0,0);return i.observers=null,i.observerSlots=null,i.comparator=n.equals||void 0,h&&u&&u.running?(i.tState=s,m.push(i)):P(i),C.bind(i)}function M(t){if(!p&&null===f)return t();const e=f;f=null;try{return p?p.untrack(t):t()}finally{f=e}}function S(t){x((()=>M(t)))}function E(t){return null===c||(null===c.cleanups?c.cleanups=[t]:c.cleanups.push(t)),t}const[T,w]=_(!1);let A;function C(){const t=u&&u.running;if(this.sources&&(t?this.tState:this.state))if((t?this.tState:this.state)===s)P(this);else{const t=m;m=null,U((()=>F(this)),!1),m=t}if(f){const t=this.observers?this.observers.length:0;f.sources?(f.sources.push(this),f.sourceSlots.push(t)):(f.sources=[this],f.sourceSlots=[t]),this.observers?(this.observers.push(f),this.observerSlots.push(f.sources.length-1)):(this.observers=[f],this.observerSlots=[f.sources.length-1])}return t&&u.sources.has(this)?this.tValue:this.value}function R(t,e,n){let i=u&&u.running&&u.sources.has(t)?t.tValue:t.value;if(!t.comparator||!t.comparator(i,e)){if(u){const i=u.running;(i||!n&&u.sources.has(t))&&(u.sources.add(t),t.tValue=e),i||(t.value=e)}else t.value=e;t.observers&&t.observers.length&&U((()=>{for(let e=0;e<t.observers.length;e+=1){const n=t.observers[e],i=u&&u.running;i&&u.disposed.has(n)||((i?n.tState:n.state)||(n.pure?m.push(n):g.push(n),n.observers&&B(n)),i?n.tState=s:n.state=s)}if(m.length>1e6)throw m=[],new Error}),!1)}return e}function P(t){if(!t.fn)return;z(t);const e=v;D(t,u&&u.running&&u.sources.has(t)?t.tValue:t.value,e),u&&!u.running&&u.sources.has(t)&&queueMicrotask((()=>{U((()=>{u&&(u.running=!0),f=c=t,D(t,t.tValue,e),f=c=null}),!1)}))}function D(t,e,n){let i;const a=c,r=f;f=c=t;try{i=t.fn(e)}catch(e){return t.pure&&(u&&u.running?(t.tState=s,t.tOwned&&t.tOwned.forEach(z),t.tOwned=void 0):(t.state=s,t.owned&&t.owned.forEach(z),t.owned=null)),t.updatedAt=n+1,H(e)}finally{f=r,c=a}(!t.updatedAt||t.updatedAt<=n)&&(null!=t.updatedAt&&"observers"in t?R(t,i,!0):u&&u.running&&t.pure?(u.sources.add(t),t.tValue=i):t.value=i,t.updatedAt=n)}function L(t,e,n,i=s,a){const r={fn:t,state:i,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:e,owner:c,context:c?c.context:null,pure:n};if(u&&u.running&&(r.state=0,r.tState=i),null===c||c!==d&&(u&&u.running&&c.pure?c.tOwned?c.tOwned.push(r):c.tOwned=[r]:c.owned?c.owned.push(r):c.owned=[r]),p&&r.fn){const[t,e]=_(void 0,{equals:!1}),n=p.factory(r.fn,e);E((()=>n.dispose()));const i=()=>function(t){if(u&&u.running)return t(),u.done;const e=f,n=c;return Promise.resolve().then((()=>{let i;return f=e,c=n,(h||A)&&(i=u||(u={sources:new Set,effects:[],promises:new Set,disposed:new Set,queue:new Set,running:!0}),i.done||(i.done=new Promise((t=>i.resolve=t))),i.running=!0),U(t,!1),f=c=null,i?i.done:void 0}))}(e).then((()=>a.dispose())),a=p.factory(r.fn,i);r.fn=e=>(t(),u&&u.running?a.track(e):n.track(e))}return r}function I(t){const e=u&&u.running;if(0===(e?t.tState:t.state))return;if((e?t.tState:t.state)===l)return F(t);if(t.suspense&&M(t.suspense.inFallback))return t.suspense.effects.push(t);const n=[t];for(;(t=t.owner)&&(!t.updatedAt||t.updatedAt<v);){if(e&&u.disposed.has(t))return;(e?t.tState:t.state)&&n.push(t)}for(let i=n.length-1;i>=0;i--){if(t=n[i],e){let e=t,a=n[i+1];for(;(e=e.owner)&&e!==a;)if(u.disposed.has(e))return}if((e?t.tState:t.state)===s)P(t);else if((e?t.tState:t.state)===l){const e=m;m=null,U((()=>F(t,n[0])),!1),m=e}}}function U(t,e){if(m)return t();let n=!1;e||(m=[]),g?n=!0:g=[],v++;try{const e=t();return function(t){if(m&&(h&&u&&u.running?function(t){for(let e=0;e<t.length;e++){const n=t[e],i=u.queue;i.has(n)||(i.add(n),h((()=>{i.delete(n),U((()=>{u.running=!0,I(n)}),!1),u&&(u.running=!1)})))}}(m):N(m),m=null),t)return;let e;if(u)if(u.promises.size||u.queue.size){if(u.running)return u.running=!1,u.effects.push.apply(u.effects,g),g=null,void w(!0)}else{const t=u.sources,n=u.disposed;g.push.apply(g,u.effects),e=u.resolve;for(const t of g)"tState"in t&&(t.state=t.tState),delete t.tState;u=null,U((()=>{for(const t of n)z(t);for(const e of t){if(e.value=e.tValue,e.owned)for(let t=0,n=e.owned.length;t<n;t++)z(e.owned[t]);e.tOwned&&(e.owned=e.tOwned),delete e.tValue,delete e.tOwned,e.tState=0}w(!1)}),!1)}const n=g;g=null,n.length&&U((()=>o(n)),!1),e&&e()}(n),e}catch(t){n||(g=null),m=null,H(t)}}function N(t){for(let e=0;e<t.length;e++)I(t[e])}function O(e){let n,a=0;for(n=0;n<e.length;n++){const t=e[n];t.user?e[a++]=t:I(t)}if(t.context){if(t.count)return t.effects||(t.effects=[]),void t.effects.push(...e.slice(0,a));t.effects&&(e=[...t.effects,...e],a+=t.effects.length,delete t.effects),i()}for(n=0;n<a;n++)I(e[n])}function F(t,e){const n=u&&u.running;n?t.tState=0:t.state=0;for(let i=0;i<t.sources.length;i+=1){const a=t.sources[i];if(a.sources){const t=n?a.tState:a.state;t===s?a!==e&&(!a.updatedAt||a.updatedAt<v)&&I(a):t===l&&F(a,e)}}}function B(t){const e=u&&u.running;for(let n=0;n<t.observers.length;n+=1){const i=t.observers[n];(e?i.tState:i.state)||(e?i.tState=l:i.state=l,i.pure?m.push(i):g.push(i),i.observers&&B(i))}}function z(t){let e;if(t.sources)for(;t.sources.length;){const e=t.sources.pop(),n=t.sourceSlots.pop(),i=e.observers;if(i&&i.length){const t=i.pop(),a=e.observerSlots.pop();n<i.length&&(t.sourceSlots[a]=n,i[n]=t,e.observerSlots[n]=a)}}if(u&&u.running&&t.pure){if(t.tOwned){for(e=t.tOwned.length-1;e>=0;e--)z(t.tOwned[e]);delete t.tOwned}k(t,!0)}else if(t.owned){for(e=t.owned.length-1;e>=0;e--)z(t.owned[e]);t.owned=null}if(t.cleanups){for(e=t.cleanups.length-1;e>=0;e--)t.cleanups[e]();t.cleanups=null}u&&u.running?t.tState=0:t.state=0}function k(t,e){if(e||(t.tState=0,u.disposed.add(t)),t.owned)for(let e=0;e<t.owned.length;e++)k(t.owned[e])}function V(t,e,n){try{for(const n of e)n(t)}catch(t){H(t,n&&n.owner||null)}}function H(t,e=c){const n=r&&e&&e.context&&e.context[r],i=function(t){return t instanceof Error?t:new Error("string"==typeof t?t:"Unknown error",{cause:t})}(t);if(!n)throw i;g?g.push({fn(){V(i,n,e)},state:s}):V(i,n,e)}Symbol("fallback");let G=!1;function W(e,n){if(G&&t.context){const a=t.context;i({...t.context,id:t.getNextContextId(),count:0});const r=M((()=>e(n||{})));return i(a),r}return M((()=>e(n||{})))}Object.create(null),Object.create(null);const j="_$DX_DELEGATE";function X(t,e,n){let i;const a=()=>{const e=document.createElement("template");return e.innerHTML=t,n?e.content.firstChild.firstChild:e.content.firstChild},r=e?()=>M((()=>document.importNode(i||(i=a()),!0))):()=>(i||(i=a())).cloneNode(!0);return r.cloneNode=r,r}function q(t,e=window.document){const n=e[j]||(e[j]=new Set);for(let i=0,a=t.length;i<a;i++){const a=t[i];n.has(a)||(n.add(a),e.addEventListener(a,$))}}function Y(t,e,n){Q(t)||(null==n?t.removeAttribute(e):t.setAttribute(e,n))}function Z(t,e){Q(t)||(null==e?t.removeAttribute("class"):t.className=e)}function K(t,e,n){return M((()=>t(e,n)))}function J(t,e,n,i){if(void 0===n||i||(i=[]),"function"!=typeof e)return tt(t,e,i,n);y((i=>tt(t,e(),i,n)),i)}function Q(e){return!!t.context&&!t.done&&(!e||e.isConnected)}function $(e){if(t.registry&&t.events&&t.events.find((([t,n])=>n===e)))return;const n=`$$${e.type}`;let i=e.composedPath&&e.composedPath()[0]||e.target;for(e.target!==i&&Object.defineProperty(e,"target",{configurable:!0,value:i}),Object.defineProperty(e,"currentTarget",{configurable:!0,get:()=>i||document}),t.registry&&!t.done&&(t.done=_$HY.done=!0);i;){const t=i[n];if(t&&!i.disabled){const a=i[`${n}Data`];if(void 0!==a?t.call(i,a,e):t.call(i,e),e.cancelBubble)return}i=i._$host||i.parentNode||i.host}}function tt(t,e,n,i,a){const r=Q(t);if(r){!n&&(n=[...t.childNodes]);let e=[];for(let t=0;t<n.length;t++){const i=n[t];8===i.nodeType&&"!$"===i.data.slice(0,2)?i.remove():e.push(i)}n=e}for(;"function"==typeof n;)n=n();if(e===n)return n;const o=typeof e,s=void 0!==i;if(t=s&&n[0]&&n[0].parentNode||t,"string"===o||"number"===o){if(r)return n;if("number"===o&&(e=e.toString())===n)return n;if(s){let a=n[0];a&&3===a.nodeType?a.data!==e&&(a.data=e):a=document.createTextNode(e),n=it(t,n,i,a)}else n=""!==n&&"string"==typeof n?t.firstChild.data=e:t.textContent=e}else if(null==e||"boolean"===o){if(r)return n;n=it(t,n,i)}else{if("function"===o)return y((()=>{let a=e();for(;"function"==typeof a;)a=a();n=tt(t,a,n,i)})),()=>n;if(Array.isArray(e)){const o=[],l=n&&Array.isArray(n);if(et(o,e,n,a))return y((()=>n=tt(t,o,n,i,!0))),()=>n;if(r){if(!o.length)return n;if(void 0===i)return n=[...t.childNodes];let e=o[0];if(e.parentNode!==t)return n;const a=[e];for(;(e=e.nextSibling)!==i;)a.push(e);return n=a}if(0===o.length){if(n=it(t,n,i),s)return n}else l?0===n.length?nt(t,o,i):function(t,e,n){let i=n.length,a=e.length,r=i,o=0,s=0,l=e[a-1].nextSibling,d=null;for(;o<a||s<r;)if(e[o]!==n[s]){for(;e[a-1]===n[r-1];)a--,r--;if(a===o){const e=r<i?s?n[s-1].nextSibling:n[r-s]:l;for(;s<r;)t.insertBefore(n[s++],e)}else if(r===s)for(;o<a;)d&&d.has(e[o])||e[o].remove(),o++;else if(e[o]===n[r-1]&&n[s]===e[a-1]){const i=e[--a].nextSibling;t.insertBefore(n[s++],e[o++].nextSibling),t.insertBefore(n[--r],i),e[a]=n[r]}else{if(!d){d=new Map;let t=s;for(;t<r;)d.set(n[t],t++)}const i=d.get(e[o]);if(null!=i)if(s<i&&i<r){let l,c=o,u=1;for(;++c<a&&c<r&&null!=(l=d.get(e[c]))&&l===i+u;)u++;if(u>i-s){const a=e[o];for(;s<i;)t.insertBefore(n[s++],a)}else t.replaceChild(n[s++],e[o++])}else o++;else e[o++].remove()}}else o++,s++}(t,n,o):(n&&it(t),nt(t,o));n=o}else if(e.nodeType){if(r&&e.parentNode)return n=s?[e]:e;if(Array.isArray(n)){if(s)return n=it(t,n,i,e);it(t,n,null,e)}else null!=n&&""!==n&&t.firstChild?t.replaceChild(e,t.firstChild):t.appendChild(e);n=e}}return n}function et(t,e,n,i){let a=!1;for(let r=0,o=e.length;r<o;r++){let o,s=e[r],l=n&&n[t.length];if(null==s||!0===s||!1===s);else if("object"==(o=typeof s)&&s.nodeType)t.push(s);else if(Array.isArray(s))a=et(t,s,l)||a;else if("function"===o)if(i){for(;"function"==typeof s;)s=s();a=et(t,Array.isArray(s)?s:[s],Array.isArray(l)?l:[l])||a}else t.push(s),a=!0;else{const e=String(s);l&&3===l.nodeType&&l.data===e?t.push(l):t.push(document.createTextNode(e))}}return a}function nt(t,e,n=null){for(let i=0,a=e.length;i<a;i++)t.insertBefore(e[i],n)}function it(t,e,n,i){if(void 0===n)return t.textContent="";const a=i||document.createTextNode("");if(e.length){let i=!1;for(let r=e.length-1;r>=0;r--){const o=e[r];if(a!==o){const e=o.parentNode===t;i||r?e&&o.remove():e?t.replaceChild(a,o):t.insertBefore(a,n)}else i=!0}}else t.insertBefore(a,n);return[a]}Symbol();var at=n(72),rt=n.n(at),ot=n(825),st=n.n(ot),lt=n(659),dt=n.n(lt),ct=n(56),ut=n.n(ct),ht=n(540),pt=n.n(ht),ft=n(113),mt=n.n(ft),gt=n(324),vt={};vt.styleTagTransform=mt(),vt.setAttributes=ut(),vt.insert=dt().bind(null,"head"),vt.domAPI=st(),vt.insertStyleElement=pt(),rt()(gt.A,vt);const _t=gt.A&&gt.A.locals?gt.A.locals:void 0;var yt=X('<div id=contact><div data-aos=fade-up><h2>Contact Form</h2><input type=text placeholder="Your Name"><input type=email placeholder="Your Email"><input type=text placeholder=Subject><textarea placeholder=Message></textarea><button>Send');function xt(){const t={name:"",email:"",subject:"",message:""};return e=yt(),n=e.firstChild,i=n.firstChild,a=i.nextSibling,r=a.nextSibling,o=r.nextSibling,s=o.nextSibling,l=s.nextSibling,a.addEventListener("change",(e=>t.name=e.target.value)),r.addEventListener("change",(e=>t.email=e.target.value)),o.addEventListener("change",(e=>t.subject=e.target.value)),s.addEventListener("change",(e=>t.message=e.target.value)),l.$$click=function(){t.name&&t.email&&t.subject&&t.message?fetch("/api/contactform/submit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t.name,email:t.email,subject:t.subject,message:t.message})}).then((t=>{200===t.status?(alert("Form submitted successfully!"),window.location.reload()):console.log(t)})):alert("Please fill out all fields")},y((t=>{var d=_t.contact,c=_t.form,u=_t.formTitle+" custom-font-1",h=_t.formInput+" custom-font-2",p=_t.formInput+" custom-font-2",f=_t.formInput+" custom-font-2",m=_t.formInput+" "+_t.formTextArea,g=_t.formButton+" custom-font-1";return d!==t.e&&Z(e,t.e=d),c!==t.t&&Z(n,t.t=c),u!==t.a&&Z(i,t.a=u),h!==t.o&&Z(a,t.o=h),p!==t.i&&Z(r,t.i=p),f!==t.n&&Z(o,t.n=f),m!==t.s&&Z(s,t.s=m),g!==t.h&&Z(l,t.h=g),t}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0}),e;var e,n,i,a,r,o,s,l}q(["click"]);var bt=n(346),Mt={};Mt.styleTagTransform=mt(),Mt.setAttributes=ut(),Mt.insert=dt().bind(null,"head"),Mt.domAPI=st(),Mt.insertStyleElement=pt(),rt()(bt.A,Mt);const St=bt.A&&bt.A.locals?bt.A.locals:void 0;var Et=X("<div id=experience><h2>Experience</h2><div data-aos=fade-right><div><img src=../static/img/portfolio/profairgames.jpg alt=ProFairGames><h2>Profair Games</h2><p> 2018 - 2019 </p><p>Lorem ipsum</p><p>Position: JavaScript Developer (Internship to Full Developer)</p><p>At Profair Game, I started as an intern and progressed to a JavaScript Developer role. I worked on a browser-based gambling game, utilizing Phaser.js and Three.js for game development. My responsibilities included developing dynamic game features, optimizing performance, and collaborating with a team to deliver engaging gaming experiences.</p><p>Position: Javascript Developer</p><p>Technologies: JavaScript, Phaser.js, Three.js</p></div></div><div data-aos=fade-left><div> </div><div><img src=../static/img/portfolio/issoft.jpg alt=ProFairGames><h2>ISSOFT GEORGIA</h2><p> 2019 - 2020</p><p>Position: Web Developer</p><p>At ISSOF, a prominent company recognized in the Software 500 and Inc. 5000 ratings, I worked as a Web Developer. ISSOF is known for its advanced technology stack and partnerships with leading global tech firms. My role involved developing and maintaining web applications, contributing to projects using cutting-edge technologies, and ensuring high standards of performance and user experience.</p><p>Position: Software Engineer</p><p>Technologies: JavaScript, HTML, CSS, React, Next.js, Node.js, Express, Laravel, MongoDB</p></div></div><div data-aos=fade-right><div><img src=../static/img/portfolio/digital.jpg alt=ProFairGames><h2>Digital Institute</h2><p> 2020 - 2022 </p><p>Digital Institute is a leading educational institution specializing in tech training. As an Instructor, I taught courses on Node.js, React, and Networking Basics. My role involved creating detailed curriculum, delivering lectures, and guiding students through practical projects to build their skills in these areas.</p><p>Position: Instructor</p><p>Technologies: Node.js, React, JavaScript, Networking Concepts</p></div></div><div data-aos=fade-left><div> </div><div><img src=../static/img/portfolio/digido.jpg alt=ProFairGames><h2>DIGIDO</h2><p> 2022 - Present</p><p>Digido is a company specializing in cutting-edge web development solutions. As a Web Developer, I worked on developing and maintaining websites using Next.js and Framer. My responsibilities included creating responsive web applications, optimizing performance, and ensuring a seamless user experience.</p><p>Position: Web Developer</p><p>Technologies: Next.js, Framer, JavaScript, CSS</p></div></div><div>"),Tt=X("<div>");function wt(){return t=Et(),e=t.firstChild,n=e.nextSibling,i=n.firstChild,a=i.firstChild,r=a.nextSibling,o=r.nextSibling,s=o.nextSibling,l=s.nextSibling,d=l.nextSibling,c=d.nextSibling,u=c.nextSibling,h=n.nextSibling,p=h.firstChild,f=p.nextSibling,m=f.firstChild,g=m.nextSibling,v=g.nextSibling,_=v.nextSibling,x=_.nextSibling,b=x.nextSibling,M=b.nextSibling,S=h.nextSibling,E=S.firstChild,T=E.firstChild,w=T.nextSibling,A=w.nextSibling,C=A.nextSibling,R=C.nextSibling,P=R.nextSibling,D=S.nextSibling,L=D.firstChild,I=L.nextSibling,U=I.firstChild,N=U.nextSibling,O=N.nextSibling,F=O.nextSibling,B=F.nextSibling,z=B.nextSibling,J(k=D.nextSibling,(()=>Array.from({length:190},((t,e)=>{return n=Tt(),y((()=>Z(n,St.dot))),n;var n})))),y((y=>{var V=St.experience,H="custom-font-1 "+St.title,G=St.work,W=St.workLeftContent,j=St.workImage,X=St.workTitle+" custom-font-1",q=St.workData+" custom-font-1",Y=St.workDescription+" custom-font-2 ",K=St.workPosition+" custom-font-2",J=St.workDescription+" custom-font-2",Q=St.workPosition+" custom-font-2",$=St.workTechnologies+" custom-font-2",tt=St.work,et=St.workFakeRightContent,nt=St.workRightContent,it=St.workImage,at=St.workTitle+" custom-font-1",rt=St.workData+" custom-font-1",ot=St.workPosition+" custom-font-2",st=St.workDescription+" custom-font-2",lt=St.workPosition+" custom-font-2",dt=St.rightWorkTechnologies+" custom-font-2",ct=St.work,ut=St.workLeftContent,ht=St.workImage,pt=St.workTitle+" custom-font-1",ft=St.workData+" custom-font-1",mt=St.workDescription+" custom-font-2",gt=St.workPosition+" custom-font-2",vt=St.workTechnologies+" custom-font-2",_t=St.work,yt=St.workFakeRightContent,xt=St.workRightContent,bt=St.workImage,Mt=St.workTitle+" custom-font-1",Et=St.workData+" custom-font-1",Tt=St.workDescription+" custom-font-2",wt=St.workPosition+" custom-font-2",At=St.workTechnologies+" custom-font-2",Ct=St.dottes;return V!==y.e&&Z(t,y.e=V),H!==y.t&&Z(e,y.t=H),G!==y.a&&Z(n,y.a=G),W!==y.o&&Z(i,y.o=W),j!==y.i&&Z(a,y.i=j),X!==y.n&&Z(r,y.n=X),q!==y.s&&Z(o,y.s=q),Y!==y.h&&Z(s,y.h=Y),K!==y.r&&Z(l,y.r=K),J!==y.d&&Z(d,y.d=J),Q!==y.l&&Z(c,y.l=Q),$!==y.u&&Z(u,y.u=$),tt!==y.c&&Z(h,y.c=tt),et!==y.w&&Z(p,y.w=et),nt!==y.m&&Z(f,y.m=nt),it!==y.f&&Z(m,y.f=it),at!==y.y&&Z(g,y.y=at),rt!==y.g&&Z(v,y.g=rt),ot!==y.p&&Z(_,y.p=ot),st!==y.b&&Z(x,y.b=st),lt!==y.T&&Z(b,y.T=lt),dt!==y.A&&Z(M,y.A=dt),ct!==y.O&&Z(S,y.O=ct),ut!==y.I&&Z(E,y.I=ut),ht!==y.S&&Z(T,y.S=ht),pt!==y.W&&Z(w,y.W=pt),ft!==y.C&&Z(A,y.C=ft),mt!==y.B&&Z(C,y.B=mt),gt!==y.v&&Z(R,y.v=gt),vt!==y.k&&Z(P,y.k=vt),_t!==y.x&&Z(D,y.x=_t),yt!==y.j&&Z(L,y.j=yt),xt!==y.q&&Z(I,y.q=xt),bt!==y.z&&Z(U,y.z=bt),Mt!==y.P&&Z(N,y.P=Mt),Et!==y.H&&Z(O,y.H=Et),Tt!==y.F&&Z(F,y.F=Tt),wt!==y.M&&Z(B,y.M=wt),At!==y.D&&Z(z,y.D=At),Ct!==y.R&&Z(k,y.R=Ct),y}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0,r:void 0,d:void 0,l:void 0,u:void 0,c:void 0,w:void 0,m:void 0,f:void 0,y:void 0,g:void 0,p:void 0,b:void 0,T:void 0,A:void 0,O:void 0,I:void 0,S:void 0,W:void 0,C:void 0,B:void 0,v:void 0,k:void 0,x:void 0,j:void 0,q:void 0,z:void 0,P:void 0,H:void 0,F:void 0,M:void 0,D:void 0,R:void 0}),t;var t,e,n,i,a,r,o,s,l,d,c,u,h,p,f,m,g,v,_,x,b,M,S,E,T,w,A,C,R,P,D,L,I,U,N,O,F,B,z,k}var At=n(401),Ct={};Ct.styleTagTransform=mt(),Ct.setAttributes=ut(),Ct.insert=dt().bind(null,"head"),Ct.domAPI=st(),Ct.insertStyleElement=pt(),rt()(At.A,Ct);const Rt=At.A&&At.A.locals?At.A.locals:void 0;var Pt=X("<footer><div><p> Tsotne Darjania Copyright <!> All rights reserved</p><img src=../static/img/portfolio/github.png alt=github><img src=../static/img/portfolio/x.png alt=x><img src=../static/img/portfolio/linkedin.png alt=likedIn><img src=../static/img/portfolio/facebook.png alt=likedIn>");function Dt(){return t=Pt(),e=t.firstChild,(i=(n=e.firstChild).firstChild.nextSibling).nextSibling,a=n.nextSibling,r=a.nextSibling,o=r.nextSibling,s=o.nextSibling,J(n,(()=>(new Date).getFullYear()),i),a.$$click=()=>{window.open("https://github.com/TsotneDarjania")},r.$$click=()=>{window.open("https://x.com/tsotne_darjania")},o.$$click=()=>{window.open("https://x.com/tsotne_darjania")},s.$$click=()=>{window.open("https://www.facebook.com/tsotne.darjania")},y((i=>{var l=Rt.footer,d=Rt.footerContent,c=Rt.copyrightText+" custom-font-2",u=Rt.gitHubImage,h=Rt.xImage,p=Rt.linkedinImage,f=Rt.facebookImage;return l!==i.e&&Z(t,i.e=l),d!==i.t&&Z(e,i.t=d),c!==i.a&&Z(n,i.a=c),u!==i.o&&Z(a,i.o=u),h!==i.i&&Z(r,i.i=h),p!==i.n&&Z(o,i.n=p),f!==i.s&&Z(s,i.s=f),i}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0}),t;var t,e,n,i,a,r,o,s}q(["click"]);var Lt=n(956),It={};It.styleTagTransform=mt(),It.setAttributes=ut(),It.insert=dt().bind(null,"head"),It.domAPI=st(),It.insertStyleElement=pt(),rt()(Lt.A,It);const Ut=Lt.A&&Lt.A.locals?Lt.A.locals:void 0;var Nt=X("<div id=projects><h2> My Projects</h2><div data-aos=zoom-out-right><div><img src=../static/img/portfolio/project-1.png alt=project><p><span>Football Manager</span><br>This project was an in-depth exploration into creating a real-time football game simulator combined with team management. It challenged me to solve issues related to scalable architecture, real-time interactions, and 2D/3D dynamic animations. Through this, I honed key skills, including:<br>- Real-time game development using <strong>Phaser.js</strong>, optimizing gameplay for smooth user interactions.<br>- 3D integration with <strong>Three.js</strong>, blending 3D elements seamlessly into the 2D football simulation.<br>- Efficient server-side rendering and routing using <strong>Next.js</strong>, ensuring scalable and fast performance.<br>- Real-time database management and authentication using <strong>Supabase</strong>, providing secure and responsive user data handling.</p></div><div><button> GitHub </button><button> Live Link </button></div></div><div data-aos=zoom-out-left><div><img src=../static/img/portfolio/project-2.png alt=project><p><span>MeetZone</span><br>MeetZone is a social platform that I developed from the ground up, focusing on real-time communication and community engagement. Building this app from scratch allowed me to dive deep into full-stack development, tackling real-world challenges like:<br>- Setting up a secure and scalable backend using <strong>Express.js</strong>with <strong>MongoDB</strong> for data storage.<br>- Implementing real-time messaging and notifications with <strong>Socket.io</strong>, creating a seamless user experience.<br>- Building the front end with <strong>Solid.js</strong>, ensuring a smooth, reactive user interface that handles dynamic content effectively.<br>- Managing user authentication and session handling for a secure social networking environment.</p></div><div><button> GitHub </button><button> Live Link </button></div></div><div data-aos=zoom-out-right><div><img src=../static/img/portfolio/project-3.png alt=project><p><span>Pacman 3D</span><br>This project is a modern take on the classic Pacman game, developed using<strong>Three.js</strong> for 3D graphics and vanilla <strong>HTML</strong>,<strong>CSS</strong>, and <strong>JavaScript</strong> for the core game mechanics and interface.<br>- Implemented 3D rendering with <strong>Three.js</strong>, bringing Pacman to life in a fully immersive environment.<br>- Managed game logic and animations with pure <strong>JavaScript</strong>, focusing on performance optimization to ensure smooth gameplay.<br>- Designed a responsive and visually engaging UI using native <strong>HTML</strong>and <strong>CSS</strong>.<br>This project taught me how to blend the simplicity of classic games with modern web technologies, optimizing for both performance and user experience.</p></div><div><button> GitHub </button><button> Live Link </button></div></div><div data-aos=zoom-out-left><div><img src=../static/img/portfolio/telegram.jpg alt=project><p><span>Telegram Bot</span><br>Built entirely in <strong>Python</strong>, this Telegram bot automates the process of collecting and sending economic data from the<strong> CRBAPC Economic</strong> website to a specific Telegram channel.<br>- Used <strong>Python's requests</strong> library to scrape economic data from the website and <strong>python-telegram-bot</strong> for seamless integration with Telegram's API.<br>- Designed the bot to post regular updates to a Telegram channel, automating data fetching, formatting, and posting in real-time.<br>- Implemented error handling and scheduling to ensure reliability and avoid disruptions in the data delivery process.<br>Through this project, I refined my skills in <strong>web scraping</strong>,<strong>API integration</strong>, and automation, all while working with Python in a practical, real-world application.</p></div><div><button> GitHub </button></div></div><div data-aos=zoom-out-right><div><img src=../static/img/portfolio/project-5.png alt=project><p><span>Amazing Tours - Island Travel Website</span><br>Developed a visually captivating website for <strong>Amazing Tours</strong>, a company specializing in island travel experiences. Created using <strong>Framer</strong>, the website serves as a comprehensive platform for tourists looking to explore island destinations.<br>- Designed a user-friendly interface with <strong>Framer</strong>, focusing on intuitive navigation and engaging visual elements.<br>- Implemented dynamic content sections showcasing various tour packages, itineraries, and booking options, ensuring a seamless user experience.<br>- Integrated multimedia features, including image galleries and interactive maps, to provide an immersive experience for users exploring potential travel destinations.<br>This project enhanced my skills in <strong>Framer</strong>, responsive design, and creating engaging user experiences for travel and tourism websites.</p></div><div><button> Live Link </button></div></div><div data-aos=zoom-out-left><div><img src=../static/img/portfolio/project-6.png alt=project><p><span>Linux Virtual Machine</span><br>This personal portfolio website is themed around <strong>Ubuntu 20.04</strong>, developed using <strong>Next.js</strong> and <strong>Tailwind CSS</strong>.<br>- <strong>Next.js</strong> was used for server-side rendering and efficient page routing.<br>- <strong>Tailwind CSS</strong> provided a flexible, responsive design with utility-first styling.<br>- Local development can be started with <code>npm start</code> or <code>yarn start</code>, and the production build with <code>npm run build</code> or <code>yarn build</code>.<br>- Integrated <strong>EmailJS</strong> for functional contact forms.<br>To get started, clone the repository and modify files in <code>/src/components</code>. For the contact form to work, configure your <code>.env</code> file with your EmailJS credentials.</p></div><div><button> GitHub </button><button> Live Link ");function Ot(){return t=Nt(),e=t.firstChild,n=e.nextSibling,i=n.firstChild,a=i.firstChild,r=a.nextSibling,o=r.firstChild,s=i.nextSibling,l=s.firstChild,d=l.nextSibling,c=n.nextSibling,u=c.firstChild,h=u.firstChild,p=h.nextSibling,f=p.firstChild,m=u.nextSibling,g=m.firstChild,v=g.nextSibling,_=c.nextSibling,x=_.firstChild,b=x.firstChild,M=b.nextSibling,S=M.firstChild,E=x.nextSibling,T=E.firstChild,w=T.nextSibling,A=_.nextSibling,C=A.firstChild,R=C.firstChild,P=R.nextSibling,D=P.firstChild,L=C.nextSibling,I=L.firstChild,U=A.nextSibling,N=U.firstChild,O=N.firstChild,F=O.nextSibling,B=F.firstChild,z=N.nextSibling,k=z.firstChild,V=U.nextSibling,H=V.firstChild,G=H.firstChild,W=G.nextSibling,j=W.firstChild,X=H.nextSibling,q=X.firstChild,Y=q.nextSibling,l.$$click=()=>{window.open("https://github.com/TsotneDarjania/football-manager")},d.$$click=()=>{window.open("https://football-manager-eight.vercel.app/")},g.$$click=()=>{window.open("https://github.com/TsotneDarjania/Tsotne-Darjania-Portfolio-Projects/tree/master/src/meetZone")},v.$$click=()=>{window.open("/meetzone")},T.$$click=()=>{window.open("https://github.com/TsotneDarjania/3d-pacman")},w.$$click=()=>{window.open("https://3d-pacman.vercel.app/")},I.$$click=()=>{window.open("https://github.com/TsotneDarjania/telegram-bot")},k.$$click=()=>{window.open("https://www.amazingtours.is/")},q.$$click=()=>{window.open("https://github.com/TsotneDarjania/linux-virtual-machine")},Y.$$click=()=>{window.open("https://linux-virtual-machine.vercel.app/")},y((y=>{var K=Ut.projects,J=Ut.title+" custom-font-1",Q=Ut.project,$=Ut.projectIntro,tt=Ut.projectImage,et=Ut.projectText+" custom-font-2",nt=Ut.projectTitle+" custom-font-1",it=Ut.projectIndicators,at=Ut.gitHuButton+" custom-font-1",rt=Ut.gitHuButton+" custom-font-1",ot=Ut.project,st=Ut.projectIntro,lt=Ut.projectImage,dt=Ut.projectText+" custom-font-2",ct=Ut.projectTitle+" custom-font-1",ut=Ut.projectIndicators,ht=Ut.gitHuButton+" custom-font-1",pt=Ut.gitHuButton+" custom-font-1",ft=Ut.project,mt=Ut.projectIntro,gt=Ut.projectImage,vt=Ut.projectText+" custom-font-2",_t=Ut.projectTitle+" custom-font-1",yt=Ut.projectIndicators,xt=Ut.gitHuButton+" custom-font-1",bt=Ut.gitHuButton+" custom-font-1",Mt=Ut.project,St=Ut.projectIntro,Et=Ut.projectImage,Tt=Ut.projectText+" custom-font-2",wt=Ut.projectTitle+" custom-font-1",At=Ut.projectIndicators,Ct=Ut.gitHuButton+" custom-font-1",Rt=Ut.project,Pt=Ut.projectIntro,Dt=Ut.projectImage,Lt=Ut.projectText+" custom-font-2",It=Ut.projectTitle+" custom-font-1",Nt=Ut.projectIndicators,Ot=Ut.gitHuButton+" custom-font-1",Ft=Ut.project,Bt=Ut.projectIntro,zt=Ut.projectImage,kt=Ut.projectText+" custom-font-2",Vt=Ut.projectTitle+" custom-font-1",Ht=Ut.projectIndicators,Gt=Ut.gitHuButton+" custom-font-1",Wt=Ut.gitHuButton+" custom-font-1";return K!==y.e&&Z(t,y.e=K),J!==y.t&&Z(e,y.t=J),Q!==y.a&&Z(n,y.a=Q),$!==y.o&&Z(i,y.o=$),tt!==y.i&&Z(a,y.i=tt),et!==y.n&&Z(r,y.n=et),nt!==y.s&&Z(o,y.s=nt),it!==y.h&&Z(s,y.h=it),at!==y.r&&Z(l,y.r=at),rt!==y.d&&Z(d,y.d=rt),ot!==y.l&&Z(c,y.l=ot),st!==y.u&&Z(u,y.u=st),lt!==y.c&&Z(h,y.c=lt),dt!==y.w&&Z(p,y.w=dt),ct!==y.m&&Z(f,y.m=ct),ut!==y.f&&Z(m,y.f=ut),ht!==y.y&&Z(g,y.y=ht),pt!==y.g&&Z(v,y.g=pt),ft!==y.p&&Z(_,y.p=ft),mt!==y.b&&Z(x,y.b=mt),gt!==y.T&&Z(b,y.T=gt),vt!==y.A&&Z(M,y.A=vt),_t!==y.O&&Z(S,y.O=_t),yt!==y.I&&Z(E,y.I=yt),xt!==y.S&&Z(T,y.S=xt),bt!==y.W&&Z(w,y.W=bt),Mt!==y.C&&Z(A,y.C=Mt),St!==y.B&&Z(C,y.B=St),Et!==y.v&&Z(R,y.v=Et),Tt!==y.k&&Z(P,y.k=Tt),wt!==y.x&&Z(D,y.x=wt),At!==y.j&&Z(L,y.j=At),Ct!==y.q&&Z(I,y.q=Ct),Rt!==y.z&&Z(U,y.z=Rt),Pt!==y.P&&Z(N,y.P=Pt),Dt!==y.H&&Z(O,y.H=Dt),Lt!==y.F&&Z(F,y.F=Lt),It!==y.M&&Z(B,y.M=It),Nt!==y.D&&Z(z,y.D=Nt),Ot!==y.R&&Z(k,y.R=Ot),Ft!==y.E&&Z(V,y.E=Ft),Bt!==y.L&&Z(H,y.L=Bt),zt!==y.N&&Z(G,y.N=zt),kt!==y.G&&Z(W,y.G=kt),Vt!==y.U&&Z(j,y.U=Vt),Ht!==y.K&&Z(X,y.K=Ht),Gt!==y.V&&Z(q,y.V=Gt),Wt!==y.Y&&Z(Y,y.Y=Wt),y}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0,r:void 0,d:void 0,l:void 0,u:void 0,c:void 0,w:void 0,m:void 0,f:void 0,y:void 0,g:void 0,p:void 0,b:void 0,T:void 0,A:void 0,O:void 0,I:void 0,S:void 0,W:void 0,C:void 0,B:void 0,v:void 0,k:void 0,x:void 0,j:void 0,q:void 0,z:void 0,P:void 0,H:void 0,F:void 0,M:void 0,D:void 0,R:void 0,E:void 0,L:void 0,N:void 0,G:void 0,U:void 0,K:void 0,V:void 0,Y:void 0}),t;var t,e,n,i,a,r,o,s,l,d,c,u,h,p,f,m,g,v,_,x,b,M,S,E,T,w,A,C,R,P,D,L,I,U,N,O,F,B,z,k,V,H,G,W,j,X,q,Y}q(["click"]);const Ft="169",Bt=1,zt=2,kt=3,Vt=0,Ht=1,Gt=2,Wt=100,jt=101,Xt=102,qt=200,Yt=201,Zt=202,Kt=203,Jt=204,Qt=205,$t=206,te=207,ee=208,ne=209,ie=210,ae=211,re=212,oe=213,se=214,le=0,de=1,ce=2,ue=3,he=4,pe=5,fe=6,me=7,ge=0,ve=1,_e=2,ye=0,xe=1,be=2,Me=3,Se=4,Ee=5,Te=6,we=7,Ae=301,Ce=302,Re=306,Pe=1e3,De=1001,Le=1002,Ie=1003,Ue=1004,Ne=1005,Oe=1006,Fe=1007,Be=1008,ze=1009,ke=1010,Ve=1011,He=1012,Ge=1013,We=1014,je=1015,Xe=1016,qe=1017,Ye=1018,Ze=1020,Ke=35902,Je=1021,Qe=1022,$e=1023,tn=1024,en=1025,nn=1026,an=1027,rn=1028,on=1029,sn=1030,ln=1031,dn=1033,cn=33776,un=33777,hn=33778,pn=33779,fn=35840,mn=35841,gn=35842,vn=35843,_n=36196,yn=37492,xn=37496,bn=37808,Mn=37809,Sn=37810,En=37811,Tn=37812,wn=37813,An=37814,Cn=37815,Rn=37816,Pn=37817,Dn=37818,Ln=37819,In=37820,Un=37821,Nn=36492,On=36494,Fn=36495,Bn=36283,zn=36284,kn=36285,Vn=36286,Hn=2300,Gn=2301,Wn=2302,jn="",Xn="srgb",qn="srgb-linear",Yn="display-p3",Zn="display-p3-linear",Kn="linear",Jn="srgb",Qn="rec709",$n="p3",ti=7680,ei=512,ni=513,ii=514,ai=515,ri=516,oi=517,si=518,li=519,di=35044,ci="300 es",ui=2e3,hi=2001;class pi{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}const fi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],mi=Math.PI/180,gi=180/Math.PI;function vi(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(fi[255&t]+fi[t>>8&255]+fi[t>>16&255]+fi[t>>24&255]+"-"+fi[255&e]+fi[e>>8&255]+"-"+fi[e>>16&15|64]+fi[e>>24&255]+"-"+fi[63&n|128]+fi[n>>8&255]+"-"+fi[n>>16&255]+fi[n>>24&255]+fi[255&i]+fi[i>>8&255]+fi[i>>16&255]+fi[i>>24&255]).toLowerCase()}function _i(t,e,n){return Math.max(e,Math.min(n,t))}function yi(t,e,n){return(1-n)*t+n*e}function xi(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function bi(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}class Mi{constructor(t=0,e=0){Mi.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(_i(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),a=this.x-t.x,r=this.y-t.y;return this.x=a*n-r*i+t.x,this.y=a*i+r*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Si{constructor(t,e,n,i,a,r,o,s,l){Si.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,a,r,o,s,l)}set(t,e,n,i,a,r,o,s,l){const d=this.elements;return d[0]=t,d[1]=i,d[2]=o,d[3]=e,d[4]=a,d[5]=s,d[6]=n,d[7]=r,d[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,a=this.elements,r=n[0],o=n[3],s=n[6],l=n[1],d=n[4],c=n[7],u=n[2],h=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],_=i[4],y=i[7],x=i[2],b=i[5],M=i[8];return a[0]=r*f+o*v+s*x,a[3]=r*m+o*_+s*b,a[6]=r*g+o*y+s*M,a[1]=l*f+d*v+c*x,a[4]=l*m+d*_+c*b,a[7]=l*g+d*y+c*M,a[2]=u*f+h*v+p*x,a[5]=u*m+h*_+p*b,a[8]=u*g+h*y+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],o=t[5],s=t[6],l=t[7],d=t[8];return e*r*d-e*o*l-n*a*d+n*o*s+i*a*l-i*r*s}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],o=t[5],s=t[6],l=t[7],d=t[8],c=d*r-o*l,u=o*s-d*a,h=l*a-r*s,p=e*c+n*u+i*h;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(i*l-d*n)*f,t[2]=(o*n-i*r)*f,t[3]=u*f,t[4]=(d*e-i*s)*f,t[5]=(i*a-o*e)*f,t[6]=h*f,t[7]=(n*s-l*e)*f,t[8]=(r*e-n*a)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,a,r,o){const s=Math.cos(a),l=Math.sin(a);return this.set(n*s,n*l,-n*(s*r+l*o)+r+t,-i*l,i*s,-i*(-l*r+s*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply(Ei.makeScale(t,e)),this}rotate(t){return this.premultiply(Ei.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ei.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const Ei=new Si;function Ti(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function wi(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Ai(){const t=wi("canvas");return t.style.display="block",t}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Ci={};function Ri(t){t in Ci||(Ci[t]=!0,console.warn(t))}const Pi=(new Si).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Di=(new Si).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Li={[qn]:{transfer:Kn,primaries:Qn,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t,fromReference:t=>t},[Xn]:{transfer:Jn,primaries:Qn,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[Zn]:{transfer:Kn,primaries:$n,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.applyMatrix3(Di),fromReference:t=>t.applyMatrix3(Pi)},[Yn]:{transfer:Jn,primaries:$n,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.convertSRGBToLinear().applyMatrix3(Di),fromReference:t=>t.applyMatrix3(Pi).convertLinearToSRGB()}},Ii=new Set([qn,Zn]),Ui={enabled:!0,_workingColorSpace:qn,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(t){if(!Ii.has(t))throw new Error(`Unsupported working color space, "${t}".`);this._workingColorSpace=t},convert:function(t,e,n){if(!1===this.enabled||e===n||!e||!n)return t;const i=Li[e].toReference;return(0,Li[n].fromReference)(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return Li[t].primaries},getTransfer:function(t){return t===jn?Kn:Li[t].transfer},getLuminanceCoefficients:function(t,e=this._workingColorSpace){return t.fromArray(Li[e].luminanceCoefficients)}};function Ni(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Oi(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Fi;class Bi{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Fi&&(Fi=wi("canvas")),Fi.width=t.width,Fi.height=t.height;const n=Fi.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Fi}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=wi("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),a=i.data;for(let t=0;t<a.length;t++)a[t]=255*Ni(a[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Ni(e[t]/255)):e[t]=Ni(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let zi=0;class ki{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:zi++}),this.uuid=vi(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Vi(i[e].image)):t.push(Vi(i[e]))}else t=Vi(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Vi(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Bi.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Hi=0;class Gi extends pi{constructor(t=Gi.DEFAULT_IMAGE,e=Gi.DEFAULT_MAPPING,n=1001,i=1001,a=1006,r=1008,o=$e,s=ze,l=Gi.DEFAULT_ANISOTROPY,d=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Hi++}),this.uuid=vi(),this.name="",this.source=new ki(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=a,this.minFilter=r,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new Mi(0,0),this.repeat=new Mi(1,1),this.center=new Mi(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Si,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Pe:t.x=t.x-Math.floor(t.x);break;case De:t.x=t.x<0?0:1;break;case Le:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Pe:t.y=t.y-Math.floor(t.y);break;case De:t.y=t.y<0?0:1;break;case Le:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Gi.DEFAULT_IMAGE=null,Gi.DEFAULT_MAPPING=300,Gi.DEFAULT_ANISOTROPY=1;class Wi{constructor(t=0,e=0,n=0,i=1){Wi.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,a=this.w,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i+r[12]*a,this.y=r[1]*e+r[5]*n+r[9]*i+r[13]*a,this.z=r[2]*e+r[6]*n+r[10]*i+r[14]*a,this.w=r[3]*e+r[7]*n+r[11]*i+r[15]*a,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,a;const r=.01,o=.1,s=t.elements,l=s[0],d=s[4],c=s[8],u=s[1],h=s[5],p=s[9],f=s[2],m=s[6],g=s[10];if(Math.abs(d-u)<r&&Math.abs(c-f)<r&&Math.abs(p-m)<r){if(Math.abs(d+u)<o&&Math.abs(c+f)<o&&Math.abs(p+m)<o&&Math.abs(l+h+g-3)<o)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,s=(h+1)/2,v=(g+1)/2,_=(d+u)/4,y=(c+f)/4,x=(p+m)/4;return t>s&&t>v?t<r?(n=0,i=.707106781,a=.707106781):(n=Math.sqrt(t),i=_/n,a=y/n):s>v?s<r?(n=.707106781,i=0,a=.707106781):(i=Math.sqrt(s),n=_/i,a=x/i):v<r?(n=.707106781,i=.707106781,a=0):(a=Math.sqrt(v),n=y/a,i=x/a),this.set(n,i,a,e),this}let v=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(u-d)*(u-d));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(c-f)/v,this.z=(u-d)/v,this.w=Math.acos((l+h+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ji extends pi{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Wi(0,0,t,e),this.scissorTest=!1,this.viewport=new Wi(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Oe,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const a=new Gi(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);a.flipY=!1,a.generateMipmaps=n.generateMipmaps,a.internalFormat=n.internalFormat,this.textures=[];const r=n.count;for(let t=0;t<r;t++)this.textures[t]=a.clone(),this.textures[t].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,a=this.textures.length;i<a;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++)this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new ki(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Xi extends ji{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class qi extends Gi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ie,this.minFilter=Ie,this.wrapR=De,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Yi extends Gi{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ie,this.minFilter=Ie,this.wrapR=De,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zi{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,a,r,o){let s=n[i+0],l=n[i+1],d=n[i+2],c=n[i+3];const u=a[r+0],h=a[r+1],p=a[r+2],f=a[r+3];if(0===o)return t[e+0]=s,t[e+1]=l,t[e+2]=d,void(t[e+3]=c);if(1===o)return t[e+0]=u,t[e+1]=h,t[e+2]=p,void(t[e+3]=f);if(c!==f||s!==u||l!==h||d!==p){let t=1-o;const e=s*u+l*h+d*p+c*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const a=Math.sqrt(i),r=Math.atan2(a,e*n);t=Math.sin(t*r)/a,o=Math.sin(o*r)/a}const a=o*n;if(s=s*t+u*a,l=l*t+h*a,d=d*t+p*a,c=c*t+f*a,t===1-o){const t=1/Math.sqrt(s*s+l*l+d*d+c*c);s*=t,l*=t,d*=t,c*=t}}t[e]=s,t[e+1]=l,t[e+2]=d,t[e+3]=c}static multiplyQuaternionsFlat(t,e,n,i,a,r){const o=n[i],s=n[i+1],l=n[i+2],d=n[i+3],c=a[r],u=a[r+1],h=a[r+2],p=a[r+3];return t[e]=o*p+d*c+s*h-l*u,t[e+1]=s*p+d*u+l*c-o*h,t[e+2]=l*p+d*h+o*u-s*c,t[e+3]=d*p-o*c-s*u-l*h,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,a=t._z,r=t._order,o=Math.cos,s=Math.sin,l=o(n/2),d=o(i/2),c=o(a/2),u=s(n/2),h=s(i/2),p=s(a/2);switch(r){case"XYZ":this._x=u*d*c+l*h*p,this._y=l*h*c-u*d*p,this._z=l*d*p+u*h*c,this._w=l*d*c-u*h*p;break;case"YXZ":this._x=u*d*c+l*h*p,this._y=l*h*c-u*d*p,this._z=l*d*p-u*h*c,this._w=l*d*c+u*h*p;break;case"ZXY":this._x=u*d*c-l*h*p,this._y=l*h*c+u*d*p,this._z=l*d*p+u*h*c,this._w=l*d*c-u*h*p;break;case"ZYX":this._x=u*d*c-l*h*p,this._y=l*h*c+u*d*p,this._z=l*d*p-u*h*c,this._w=l*d*c+u*h*p;break;case"YZX":this._x=u*d*c+l*h*p,this._y=l*h*c+u*d*p,this._z=l*d*p-u*h*c,this._w=l*d*c-u*h*p;break;case"XZY":this._x=u*d*c-l*h*p,this._y=l*h*c-u*d*p,this._z=l*d*p+u*h*c,this._w=l*d*c+u*h*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],a=e[8],r=e[1],o=e[5],s=e[9],l=e[2],d=e[6],c=e[10],u=n+o+c;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(d-s)*t,this._y=(a-l)*t,this._z=(r-i)*t}else if(n>o&&n>c){const t=2*Math.sqrt(1+n-o-c);this._w=(d-s)/t,this._x=.25*t,this._y=(i+r)/t,this._z=(a+l)/t}else if(o>c){const t=2*Math.sqrt(1+o-n-c);this._w=(a-l)/t,this._x=(i+r)/t,this._y=.25*t,this._z=(s+d)/t}else{const t=2*Math.sqrt(1+c-n-o);this._w=(r-i)/t,this._x=(a+l)/t,this._y=(s+d)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(_i(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,a=t._z,r=t._w,o=e._x,s=e._y,l=e._z,d=e._w;return this._x=n*d+r*o+i*l-a*s,this._y=i*d+r*s+a*o-n*l,this._z=a*d+r*l+n*s-i*o,this._w=r*d-n*o-i*s-a*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,a=this._z,r=this._w;let o=r*t._w+n*t._x+i*t._y+a*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=n,this._y=i,this._z=a,this;const s=1-o*o;if(s<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*a+e*this._z,this.normalize(),this}const l=Math.sqrt(s),d=Math.atan2(l,o),c=Math.sin((1-e)*d)/l,u=Math.sin(e*d)/l;return this._w=r*c+this._w*u,this._x=n*c+this._x*u,this._y=i*c+this._y*u,this._z=a*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),a=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),a*Math.sin(e),a*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Ki{constructor(t=0,e=0,n=0){Ki.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Qi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Qi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,a=t.elements;return this.x=a[0]*e+a[3]*n+a[6]*i,this.y=a[1]*e+a[4]*n+a[7]*i,this.z=a[2]*e+a[5]*n+a[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,a=t.elements,r=1/(a[3]*e+a[7]*n+a[11]*i+a[15]);return this.x=(a[0]*e+a[4]*n+a[8]*i+a[12])*r,this.y=(a[1]*e+a[5]*n+a[9]*i+a[13])*r,this.z=(a[2]*e+a[6]*n+a[10]*i+a[14])*r,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,a=t.x,r=t.y,o=t.z,s=t.w,l=2*(r*i-o*n),d=2*(o*e-a*i),c=2*(a*n-r*e);return this.x=e+s*l+r*c-o*d,this.y=n+s*d+o*l-a*c,this.z=i+s*c+a*d-r*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i,this.y=a[1]*e+a[5]*n+a[9]*i,this.z=a[2]*e+a[6]*n+a[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,a=t.z,r=e.x,o=e.y,s=e.z;return this.x=i*s-a*o,this.y=a*r-n*s,this.z=n*o-i*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Ji.copy(this).projectOnVector(t),this.sub(Ji)}reflect(t){return this.sub(Ji.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(_i(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ji=new Ki,Qi=new Zi;class $i{constructor(t=new Ki(1/0,1/0,1/0),e=new Ki(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ea.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ea.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ea.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,n=i.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,ea):ea.fromBufferAttribute(i,e),ea.applyMatrix4(t.matrixWorld),this.expandByPoint(ea);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),na.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),na.copy(n.boundingBox)),na.applyMatrix4(t.matrixWorld),this.union(na)}const i=t.children;for(let t=0,n=i.length;t<n;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ea),ea.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(da),ca.subVectors(this.max,da),ia.subVectors(t.a,da),aa.subVectors(t.b,da),ra.subVectors(t.c,da),oa.subVectors(aa,ia),sa.subVectors(ra,aa),la.subVectors(ia,ra);let e=[0,-oa.z,oa.y,0,-sa.z,sa.y,0,-la.z,la.y,oa.z,0,-oa.x,sa.z,0,-sa.x,la.z,0,-la.x,-oa.y,oa.x,0,-sa.y,sa.x,0,-la.y,la.x,0];return!!pa(e,ia,aa,ra,ca)&&(e=[1,0,0,0,1,0,0,0,1],!!pa(e,ia,aa,ra,ca)&&(ua.crossVectors(oa,sa),e=[ua.x,ua.y,ua.z],pa(e,ia,aa,ra,ca)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ea).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(ea).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(ta[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ta[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ta[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ta[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ta[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ta[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ta[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ta[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ta)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ta=[new Ki,new Ki,new Ki,new Ki,new Ki,new Ki,new Ki,new Ki],ea=new Ki,na=new $i,ia=new Ki,aa=new Ki,ra=new Ki,oa=new Ki,sa=new Ki,la=new Ki,da=new Ki,ca=new Ki,ua=new Ki,ha=new Ki;function pa(t,e,n,i,a){for(let r=0,o=t.length-3;r<=o;r+=3){ha.fromArray(t,r);const o=a.x*Math.abs(ha.x)+a.y*Math.abs(ha.y)+a.z*Math.abs(ha.z),s=e.dot(ha),l=n.dot(ha),d=i.dot(ha);if(Math.max(-Math.max(s,l,d),Math.min(s,l,d))>o)return!1}return!0}const fa=new $i,ma=new Ki,ga=new Ki;class va{constructor(t=new Ki,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):fa.setFromPoints(t).getCenter(n);let i=0;for(let e=0,a=t.length;e<a;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ma.subVectors(t,this.center);const e=ma.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(ma,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(ga.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ma.copy(t.center).add(ga)),this.expandByPoint(ma.copy(t.center).sub(ga))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const _a=new Ki,ya=new Ki,xa=new Ki,ba=new Ki,Ma=new Ki,Sa=new Ki,Ea=new Ki;class Ta{constructor(t=new Ki,e=new Ki(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,_a)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=_a.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(_a.copy(this.origin).addScaledVector(this.direction,e),_a.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ya.copy(t).add(e).multiplyScalar(.5),xa.copy(e).sub(t).normalize(),ba.copy(this.origin).sub(ya);const a=.5*t.distanceTo(e),r=-this.direction.dot(xa),o=ba.dot(this.direction),s=-ba.dot(xa),l=ba.lengthSq(),d=Math.abs(1-r*r);let c,u,h,p;if(d>0)if(c=r*s-o,u=r*o-s,p=a*d,c>=0)if(u>=-p)if(u<=p){const t=1/d;c*=t,u*=t,h=c*(c+r*u+2*o)+u*(r*c+u+2*s)+l}else u=a,c=Math.max(0,-(r*u+o)),h=-c*c+u*(u+2*s)+l;else u=-a,c=Math.max(0,-(r*u+o)),h=-c*c+u*(u+2*s)+l;else u<=-p?(c=Math.max(0,-(-r*a+o)),u=c>0?-a:Math.min(Math.max(-a,-s),a),h=-c*c+u*(u+2*s)+l):u<=p?(c=0,u=Math.min(Math.max(-a,-s),a),h=u*(u+2*s)+l):(c=Math.max(0,-(r*a+o)),u=c>0?a:Math.min(Math.max(-a,-s),a),h=-c*c+u*(u+2*s)+l);else u=r>0?-a:a,c=Math.max(0,-(r*u+o)),h=-c*c+u*(u+2*s)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,c),i&&i.copy(ya).addScaledVector(xa,u),h}intersectSphere(t,e){_a.subVectors(t.center,this.origin);const n=_a.dot(this.direction),i=_a.dot(_a)-n*n,a=t.radius*t.radius;if(i>a)return null;const r=Math.sqrt(a-i),o=n-r,s=n+r;return s<0?null:o<0?this.at(s,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,a,r,o,s;const l=1/this.direction.x,d=1/this.direction.y,c=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),d>=0?(a=(t.min.y-u.y)*d,r=(t.max.y-u.y)*d):(a=(t.max.y-u.y)*d,r=(t.min.y-u.y)*d),n>r||a>i?null:((a>n||isNaN(n))&&(n=a),(r<i||isNaN(i))&&(i=r),c>=0?(o=(t.min.z-u.z)*c,s=(t.max.z-u.z)*c):(o=(t.max.z-u.z)*c,s=(t.min.z-u.z)*c),n>s||o>i?null:((o>n||n!=n)&&(n=o),(s<i||i!=i)&&(i=s),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,_a)}intersectTriangle(t,e,n,i,a){Ma.subVectors(e,t),Sa.subVectors(n,t),Ea.crossVectors(Ma,Sa);let r,o=this.direction.dot(Ea);if(o>0){if(i)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}ba.subVectors(this.origin,t);const s=r*this.direction.dot(Sa.crossVectors(ba,Sa));if(s<0)return null;const l=r*this.direction.dot(Ma.cross(ba));if(l<0)return null;if(s+l>o)return null;const d=-r*ba.dot(Ea);return d<0?null:this.at(d/o,a)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class wa{constructor(t,e,n,i,a,r,o,s,l,d,c,u,h,p,f,m){wa.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,a,r,o,s,l,d,c,u,h,p,f,m)}set(t,e,n,i,a,r,o,s,l,d,c,u,h,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=a,g[5]=r,g[9]=o,g[13]=s,g[2]=l,g[6]=d,g[10]=c,g[14]=u,g[3]=h,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new wa).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Aa.setFromMatrixColumn(t,0).length(),a=1/Aa.setFromMatrixColumn(t,1).length(),r=1/Aa.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*a,e[5]=n[5]*a,e[6]=n[6]*a,e[7]=0,e[8]=n[8]*r,e[9]=n[9]*r,e[10]=n[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,a=t.z,r=Math.cos(n),o=Math.sin(n),s=Math.cos(i),l=Math.sin(i),d=Math.cos(a),c=Math.sin(a);if("XYZ"===t.order){const t=r*d,n=r*c,i=o*d,a=o*c;e[0]=s*d,e[4]=-s*c,e[8]=l,e[1]=n+i*l,e[5]=t-a*l,e[9]=-o*s,e[2]=a-t*l,e[6]=i+n*l,e[10]=r*s}else if("YXZ"===t.order){const t=s*d,n=s*c,i=l*d,a=l*c;e[0]=t+a*o,e[4]=i*o-n,e[8]=r*l,e[1]=r*c,e[5]=r*d,e[9]=-o,e[2]=n*o-i,e[6]=a+t*o,e[10]=r*s}else if("ZXY"===t.order){const t=s*d,n=s*c,i=l*d,a=l*c;e[0]=t-a*o,e[4]=-r*c,e[8]=i+n*o,e[1]=n+i*o,e[5]=r*d,e[9]=a-t*o,e[2]=-r*l,e[6]=o,e[10]=r*s}else if("ZYX"===t.order){const t=r*d,n=r*c,i=o*d,a=o*c;e[0]=s*d,e[4]=i*l-n,e[8]=t*l+a,e[1]=s*c,e[5]=a*l+t,e[9]=n*l-i,e[2]=-l,e[6]=o*s,e[10]=r*s}else if("YZX"===t.order){const t=r*s,n=r*l,i=o*s,a=o*l;e[0]=s*d,e[4]=a-t*c,e[8]=i*c+n,e[1]=c,e[5]=r*d,e[9]=-o*d,e[2]=-l*d,e[6]=n*c+i,e[10]=t-a*c}else if("XZY"===t.order){const t=r*s,n=r*l,i=o*s,a=o*l;e[0]=s*d,e[4]=-c,e[8]=l*d,e[1]=t*c+a,e[5]=r*d,e[9]=n*c-i,e[2]=i*c-n,e[6]=o*d,e[10]=a*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ra,t,Pa)}lookAt(t,e,n){const i=this.elements;return Ia.subVectors(t,e),0===Ia.lengthSq()&&(Ia.z=1),Ia.normalize(),Da.crossVectors(n,Ia),0===Da.lengthSq()&&(1===Math.abs(n.z)?Ia.x+=1e-4:Ia.z+=1e-4,Ia.normalize(),Da.crossVectors(n,Ia)),Da.normalize(),La.crossVectors(Ia,Da),i[0]=Da.x,i[4]=La.x,i[8]=Ia.x,i[1]=Da.y,i[5]=La.y,i[9]=Ia.y,i[2]=Da.z,i[6]=La.z,i[10]=Ia.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,a=this.elements,r=n[0],o=n[4],s=n[8],l=n[12],d=n[1],c=n[5],u=n[9],h=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],_=n[7],y=n[11],x=n[15],b=i[0],M=i[4],S=i[8],E=i[12],T=i[1],w=i[5],A=i[9],C=i[13],R=i[2],P=i[6],D=i[10],L=i[14],I=i[3],U=i[7],N=i[11],O=i[15];return a[0]=r*b+o*T+s*R+l*I,a[4]=r*M+o*w+s*P+l*U,a[8]=r*S+o*A+s*D+l*N,a[12]=r*E+o*C+s*L+l*O,a[1]=d*b+c*T+u*R+h*I,a[5]=d*M+c*w+u*P+h*U,a[9]=d*S+c*A+u*D+h*N,a[13]=d*E+c*C+u*L+h*O,a[2]=p*b+f*T+m*R+g*I,a[6]=p*M+f*w+m*P+g*U,a[10]=p*S+f*A+m*D+g*N,a[14]=p*E+f*C+m*L+g*O,a[3]=v*b+_*T+y*R+x*I,a[7]=v*M+_*w+y*P+x*U,a[11]=v*S+_*A+y*D+x*N,a[15]=v*E+_*C+y*L+x*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],a=t[12],r=t[1],o=t[5],s=t[9],l=t[13],d=t[2],c=t[6],u=t[10],h=t[14];return t[3]*(+a*s*c-i*l*c-a*o*u+n*l*u+i*o*h-n*s*h)+t[7]*(+e*s*h-e*l*u+a*r*u-i*r*h+i*l*d-a*s*d)+t[11]*(+e*l*c-e*o*h-a*r*c+n*r*h+a*o*d-n*l*d)+t[15]*(-i*o*d-e*s*c+e*o*u+i*r*c-n*r*u+n*s*d)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],o=t[5],s=t[6],l=t[7],d=t[8],c=t[9],u=t[10],h=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=c*m*l-f*u*l+f*s*h-o*m*h-c*s*g+o*u*g,_=p*u*l-d*m*l-p*s*h+r*m*h+d*s*g-r*u*g,y=d*f*l-p*c*l+p*o*h-r*f*h-d*o*g+r*c*g,x=p*c*s-d*f*s-p*o*u+r*f*u+d*o*m-r*c*m,b=e*v+n*_+i*y+a*x;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;return t[0]=v*M,t[1]=(f*u*a-c*m*a-f*i*h+n*m*h+c*i*g-n*u*g)*M,t[2]=(o*m*a-f*s*a+f*i*l-n*m*l-o*i*g+n*s*g)*M,t[3]=(c*s*a-o*u*a-c*i*l+n*u*l+o*i*h-n*s*h)*M,t[4]=_*M,t[5]=(d*m*a-p*u*a+p*i*h-e*m*h-d*i*g+e*u*g)*M,t[6]=(p*s*a-r*m*a-p*i*l+e*m*l+r*i*g-e*s*g)*M,t[7]=(r*u*a-d*s*a+d*i*l-e*u*l-r*i*h+e*s*h)*M,t[8]=y*M,t[9]=(p*c*a-d*f*a-p*n*h+e*f*h+d*n*g-e*c*g)*M,t[10]=(r*f*a-p*o*a+p*n*l-e*f*l-r*n*g+e*o*g)*M,t[11]=(d*o*a-r*c*a-d*n*l+e*c*l+r*n*h-e*o*h)*M,t[12]=x*M,t[13]=(d*f*i-p*c*i+p*n*u-e*f*u-d*n*m+e*c*m)*M,t[14]=(p*o*i-r*f*i-p*n*s+e*f*s+r*n*m-e*o*m)*M,t[15]=(r*c*i-d*o*i+d*n*s-e*c*s-r*n*u+e*o*u)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,a=t.z;return e[0]*=n,e[4]*=i,e[8]*=a,e[1]*=n,e[5]*=i,e[9]*=a,e[2]*=n,e[6]*=i,e[10]*=a,e[3]*=n,e[7]*=i,e[11]*=a,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),a=1-n,r=t.x,o=t.y,s=t.z,l=a*r,d=a*o;return this.set(l*r+n,l*o-i*s,l*s+i*o,0,l*o+i*s,d*o+n,d*s-i*r,0,l*s-i*o,d*s+i*r,a*s*s+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,a,r){return this.set(1,n,a,0,t,1,r,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,a=e._x,r=e._y,o=e._z,s=e._w,l=a+a,d=r+r,c=o+o,u=a*l,h=a*d,p=a*c,f=r*d,m=r*c,g=o*c,v=s*l,_=s*d,y=s*c,x=n.x,b=n.y,M=n.z;return i[0]=(1-(f+g))*x,i[1]=(h+y)*x,i[2]=(p-_)*x,i[3]=0,i[4]=(h-y)*b,i[5]=(1-(u+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+_)*M,i[9]=(m-v)*M,i[10]=(1-(u+f))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let a=Aa.set(i[0],i[1],i[2]).length();const r=Aa.set(i[4],i[5],i[6]).length(),o=Aa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(a=-a),t.x=i[12],t.y=i[13],t.z=i[14],Ca.copy(this);const s=1/a,l=1/r,d=1/o;return Ca.elements[0]*=s,Ca.elements[1]*=s,Ca.elements[2]*=s,Ca.elements[4]*=l,Ca.elements[5]*=l,Ca.elements[6]*=l,Ca.elements[8]*=d,Ca.elements[9]*=d,Ca.elements[10]*=d,e.setFromRotationMatrix(Ca),n.x=a,n.y=r,n.z=o,this}makePerspective(t,e,n,i,a,r,o=2e3){const s=this.elements,l=2*a/(e-t),d=2*a/(n-i),c=(e+t)/(e-t),u=(n+i)/(n-i);let h,p;if(o===ui)h=-(r+a)/(r-a),p=-2*r*a/(r-a);else{if(o!==hi)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);h=-r/(r-a),p=-r*a/(r-a)}return s[0]=l,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=d,s[9]=u,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=p,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,a,r,o=2e3){const s=this.elements,l=1/(e-t),d=1/(n-i),c=1/(r-a),u=(e+t)*l,h=(n+i)*d;let p,f;if(o===ui)p=(r+a)*c,f=-2*c;else{if(o!==hi)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);p=a*c,f=-1*c}return s[0]=2*l,s[4]=0,s[8]=0,s[12]=-u,s[1]=0,s[5]=2*d,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=f,s[14]=-p,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Aa=new Ki,Ca=new wa,Ra=new Ki(0,0,0),Pa=new Ki(1,1,1),Da=new Ki,La=new Ki,Ia=new Ki,Ua=new wa,Na=new Zi;class Oa{constructor(t=0,e=0,n=0,i=Oa.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,a=i[0],r=i[4],o=i[8],s=i[1],l=i[5],d=i[9],c=i[2],u=i[6],h=i[10];switch(e){case"XYZ":this._y=Math.asin(_i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-d,h),this._z=Math.atan2(-r,a)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-_i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(o,h),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-c,a),this._z=0);break;case"ZXY":this._x=Math.asin(_i(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,h),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(s,a));break;case"ZYX":this._y=Math.asin(-_i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,h),this._z=Math.atan2(s,a)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(_i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-d,l),this._y=Math.atan2(-c,a)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-_i(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-d,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Ua.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ua,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Na.setFromEuler(this),this.setFromQuaternion(Na,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Oa.DEFAULT_ORDER="XYZ";class Fa{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return!!(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let Ba=0;const za=new Ki,ka=new Zi,Va=new wa,Ha=new Ki,Ga=new Ki,Wa=new Ki,ja=new Zi,Xa=new Ki(1,0,0),qa=new Ki(0,1,0),Ya=new Ki(0,0,1),Za={type:"added"},Ka={type:"removed"},Ja={type:"childadded",child:null},Qa={type:"childremoved",child:null};class $a extends pi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ba++}),this.uuid=vi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$a.DEFAULT_UP.clone();const t=new Ki,e=new Oa,n=new Zi,i=new Ki(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new wa},normalMatrix:{value:new Si}}),this.matrix=new wa,this.matrixWorld=new wa,this.matrixAutoUpdate=$a.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=$a.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Fa,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ka.setFromAxisAngle(t,e),this.quaternion.multiply(ka),this}rotateOnWorldAxis(t,e){return ka.setFromAxisAngle(t,e),this.quaternion.premultiply(ka),this}rotateX(t){return this.rotateOnAxis(Xa,t)}rotateY(t){return this.rotateOnAxis(qa,t)}rotateZ(t){return this.rotateOnAxis(Ya,t)}translateOnAxis(t,e){return za.copy(t).applyQuaternion(this.quaternion),this.position.add(za.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Xa,t)}translateY(t){return this.translateOnAxis(qa,t)}translateZ(t){return this.translateOnAxis(Ya,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Va.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Ha.copy(t):Ha.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ga.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Va.lookAt(Ga,Ha,this.up):Va.lookAt(Ha,Ga,this.up),this.quaternion.setFromRotationMatrix(Va),i&&(Va.extractRotation(i.matrixWorld),ka.setFromRotationMatrix(Va),this.quaternion.premultiply(ka.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Za),Ja.child=t,this.dispatchEvent(Ja),Ja.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ka),Qa.child=t,this.dispatchEvent(Qa),Qa.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Va.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Va.multiply(t.parent.matrixWorld)),t.applyMatrix4(Va),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Za),Ja.child=t,this.dispatchEvent(Ja),Ja.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let a=0,r=i.length;a<r;a++)i[a].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ga,t,Wa),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ga,ja,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function a(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),null!==this.boundingBox&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=a(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];a(t.shapes,i)}else a(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(a(t.materials,this.material[n]));i.material=e}else i.material=a(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(a(t.animations,n))}}if(e){const e=r(t.geometries),i=r(t.materials),a=r(t.textures),o=r(t.images),s=r(t.shapes),l=r(t.skeletons),d=r(t.animations),c=r(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),a.length>0&&(n.textures=a),o.length>0&&(n.images=o),s.length>0&&(n.shapes=s),l.length>0&&(n.skeletons=l),d.length>0&&(n.animations=d),c.length>0&&(n.nodes=c)}return n.object=i,n;function r(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}$a.DEFAULT_UP=new Ki(0,1,0),$a.DEFAULT_MATRIX_AUTO_UPDATE=!0,$a.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const tr=new Ki,er=new Ki,nr=new Ki,ir=new Ki,ar=new Ki,rr=new Ki,or=new Ki,sr=new Ki,lr=new Ki,dr=new Ki,cr=new Wi,ur=new Wi,hr=new Wi;class pr{constructor(t=new Ki,e=new Ki,n=new Ki){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),tr.subVectors(t,e),i.cross(tr);const a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}static getBarycoord(t,e,n,i,a){tr.subVectors(i,e),er.subVectors(n,e),nr.subVectors(t,e);const r=tr.dot(tr),o=tr.dot(er),s=tr.dot(nr),l=er.dot(er),d=er.dot(nr),c=r*l-o*o;if(0===c)return a.set(0,0,0),null;const u=1/c,h=(l*s-o*d)*u,p=(r*d-o*s)*u;return a.set(1-h-p,p,h)}static containsPoint(t,e,n,i){return null!==this.getBarycoord(t,e,n,i,ir)&&ir.x>=0&&ir.y>=0&&ir.x+ir.y<=1}static getInterpolation(t,e,n,i,a,r,o,s){return null===this.getBarycoord(t,e,n,i,ir)?(s.x=0,s.y=0,"z"in s&&(s.z=0),"w"in s&&(s.w=0),null):(s.setScalar(0),s.addScaledVector(a,ir.x),s.addScaledVector(r,ir.y),s.addScaledVector(o,ir.z),s)}static getInterpolatedAttribute(t,e,n,i,a,r){return cr.setScalar(0),ur.setScalar(0),hr.setScalar(0),cr.fromBufferAttribute(t,e),ur.fromBufferAttribute(t,n),hr.fromBufferAttribute(t,i),r.setScalar(0),r.addScaledVector(cr,a.x),r.addScaledVector(ur,a.y),r.addScaledVector(hr,a.z),r}static isFrontFacing(t,e,n,i){return tr.subVectors(n,e),er.subVectors(t,e),tr.cross(er).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return tr.subVectors(this.c,this.b),er.subVectors(this.a,this.b),.5*tr.cross(er).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return pr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return pr.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,a){return pr.getInterpolation(t,this.a,this.b,this.c,e,n,i,a)}containsPoint(t){return pr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return pr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,a=this.c;let r,o;ar.subVectors(i,n),rr.subVectors(a,n),sr.subVectors(t,n);const s=ar.dot(sr),l=rr.dot(sr);if(s<=0&&l<=0)return e.copy(n);lr.subVectors(t,i);const d=ar.dot(lr),c=rr.dot(lr);if(d>=0&&c<=d)return e.copy(i);const u=s*c-d*l;if(u<=0&&s>=0&&d<=0)return r=s/(s-d),e.copy(n).addScaledVector(ar,r);dr.subVectors(t,a);const h=ar.dot(dr),p=rr.dot(dr);if(p>=0&&h<=p)return e.copy(a);const f=h*l-s*p;if(f<=0&&l>=0&&p<=0)return o=l/(l-p),e.copy(n).addScaledVector(rr,o);const m=d*p-h*c;if(m<=0&&c-d>=0&&h-p>=0)return or.subVectors(a,i),o=(c-d)/(c-d+(h-p)),e.copy(i).addScaledVector(or,o);const g=1/(m+f+u);return r=f*g,o=u*g,e.copy(n).addScaledVector(ar,r).addScaledVector(rr,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const fr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},mr={h:0,s:0,l:0},gr={h:0,s:0,l:0};function vr(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class _r{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Xn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Ui.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Ui.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ui.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Ui.workingColorSpace){if(t=(t%(a=1)+a)%a,e=_i(e,0,1),n=_i(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,a=2*n-i;this.r=vr(a,i,t+1/3),this.g=vr(a,i,t),this.b=vr(a,i,t-1/3)}var a;return Ui.toWorkingColorSpace(this,i),this}setStyle(t,e=Xn){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let a;const r=i[1],o=i[2];switch(r){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,e);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,e);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=i[1],a=n.length;if(3===a)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(6===a)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Xn){const n=fr[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ni(t.r),this.g=Ni(t.g),this.b=Ni(t.b),this}copyLinearToSRGB(t){return this.r=Oi(t.r),this.g=Oi(t.g),this.b=Oi(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Xn){return Ui.fromWorkingColorSpace(yr.copy(this),t),65536*Math.round(_i(255*yr.r,0,255))+256*Math.round(_i(255*yr.g,0,255))+Math.round(_i(255*yr.b,0,255))}getHexString(t=Xn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ui.workingColorSpace){Ui.fromWorkingColorSpace(yr.copy(this),e);const n=yr.r,i=yr.g,a=yr.b,r=Math.max(n,i,a),o=Math.min(n,i,a);let s,l;const d=(o+r)/2;if(o===r)s=0,l=0;else{const t=r-o;switch(l=d<=.5?t/(r+o):t/(2-r-o),r){case n:s=(i-a)/t+(i<a?6:0);break;case i:s=(a-n)/t+2;break;case a:s=(n-i)/t+4}s/=6}return t.h=s,t.s=l,t.l=d,t}getRGB(t,e=Ui.workingColorSpace){return Ui.fromWorkingColorSpace(yr.copy(this),e),t.r=yr.r,t.g=yr.g,t.b=yr.b,t}getStyle(t=Xn){Ui.fromWorkingColorSpace(yr.copy(this),t);const e=yr.r,n=yr.g,i=yr.b;return t!==Xn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(mr),this.setHSL(mr.h+t,mr.s+e,mr.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(mr),t.getHSL(gr);const n=yi(mr.h,gr.h,e),i=yi(mr.s,gr.s,e),a=yi(mr.l,gr.l,e);return this.setHSL(n,i,a),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,a=t.elements;return this.r=a[0]*e+a[3]*n+a[6]*i,this.g=a[1]*e+a[4]*n+a[7]*i,this.b=a[2]*e+a[5]*n+a[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const yr=new _r;_r.NAMES=fr;let xr=0;class br extends pi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xr++}),this.uuid=vi(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=Wt,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new _r(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ti,this.stencilZFail=ti,this.stencilZPass=ti,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),this.blendEquation!==Wt&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ti&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ti&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ti&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),a=i(t.images);e.length>0&&(n.textures=e),a.length>0&&(n.images=a)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Mr extends br{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new _r(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Oa,this.combine=ge,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Sr=new Ki,Er=new Mi;class Tr{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=di,this.updateRanges=[],this.gpuType=je,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,a=this.itemSize;i<a;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Er.fromBufferAttribute(this,e),Er.applyMatrix3(t),this.setXY(e,Er.x,Er.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Sr.fromBufferAttribute(this,e),Sr.applyMatrix3(t),this.setXYZ(e,Sr.x,Sr.y,Sr.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Sr.fromBufferAttribute(this,e),Sr.applyMatrix4(t),this.setXYZ(e,Sr.x,Sr.y,Sr.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Sr.fromBufferAttribute(this,e),Sr.applyNormalMatrix(t),this.setXYZ(e,Sr.x,Sr.y,Sr.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Sr.fromBufferAttribute(this,e),Sr.transformDirection(t),this.setXYZ(e,Sr.x,Sr.y,Sr.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=xi(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=bi(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=xi(e,this.array)),e}setX(t,e){return this.normalized&&(e=bi(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=xi(e,this.array)),e}setY(t,e){return this.normalized&&(e=bi(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=xi(e,this.array)),e}setZ(t,e){return this.normalized&&(e=bi(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=xi(e,this.array)),e}setW(t,e){return this.normalized&&(e=bi(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=bi(e,this.array),n=bi(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=bi(e,this.array),n=bi(n,this.array),i=bi(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,a){return t*=this.itemSize,this.normalized&&(e=bi(e,this.array),n=bi(n,this.array),i=bi(i,this.array),a=bi(a,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=a,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==di&&(t.usage=this.usage),t}}class wr extends Tr{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Ar extends Tr{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Cr extends Tr{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Rr=0;const Pr=new wa,Dr=new $a,Lr=new Ki,Ir=new $i,Ur=new $i,Nr=new Ki;class Or extends pi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Rr++}),this.uuid=vi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ti(t)?Ar:wr)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Si).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Pr.makeRotationFromQuaternion(t),this.applyMatrix4(Pr),this}rotateX(t){return Pr.makeRotationX(t),this.applyMatrix4(Pr),this}rotateY(t){return Pr.makeRotationY(t),this.applyMatrix4(Pr),this}rotateZ(t){return Pr.makeRotationZ(t),this.applyMatrix4(Pr),this}translate(t,e,n){return Pr.makeTranslation(t,e,n),this.applyMatrix4(Pr),this}scale(t,e,n){return Pr.makeScale(t,e,n),this.applyMatrix4(Pr),this}lookAt(t){return Dr.lookAt(t),Dr.updateMatrix(),this.applyMatrix4(Dr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Lr).negate(),this.translate(Lr.x,Lr.y,Lr.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Cr(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new $i);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new Ki(-1/0,-1/0,-1/0),new Ki(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ir.setFromBufferAttribute(n),this.morphTargetsRelative?(Nr.addVectors(this.boundingBox.min,Ir.min),this.boundingBox.expandByPoint(Nr),Nr.addVectors(this.boundingBox.max,Ir.max),this.boundingBox.expandByPoint(Nr)):(this.boundingBox.expandByPoint(Ir.min),this.boundingBox.expandByPoint(Ir.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new va);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new Ki,1/0);if(t){const n=this.boundingSphere.center;if(Ir.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ur.setFromBufferAttribute(n),this.morphTargetsRelative?(Nr.addVectors(Ir.min,Ur.min),Ir.expandByPoint(Nr),Nr.addVectors(Ir.max,Ur.max),Ir.expandByPoint(Nr)):(Ir.expandByPoint(Ur.min),Ir.expandByPoint(Ur.max))}Ir.getCenter(n);let i=0;for(let e=0,a=t.count;e<a;e++)Nr.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Nr));if(e)for(let a=0,r=e.length;a<r;a++){const r=e[a],o=this.morphTargetsRelative;for(let e=0,a=r.count;e<a;e++)Nr.fromBufferAttribute(r,e),o&&(Lr.fromBufferAttribute(t,e),Nr.add(Lr)),i=Math.max(i,n.distanceToSquared(Nr))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.position,i=e.normal,a=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Tr(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),o=[],s=[];for(let t=0;t<n.count;t++)o[t]=new Ki,s[t]=new Ki;const l=new Ki,d=new Ki,c=new Ki,u=new Mi,h=new Mi,p=new Mi,f=new Ki,m=new Ki;function g(t,e,i){l.fromBufferAttribute(n,t),d.fromBufferAttribute(n,e),c.fromBufferAttribute(n,i),u.fromBufferAttribute(a,t),h.fromBufferAttribute(a,e),p.fromBufferAttribute(a,i),d.sub(l),c.sub(l),h.sub(u),p.sub(u);const r=1/(h.x*p.y-p.x*h.y);isFinite(r)&&(f.copy(d).multiplyScalar(p.y).addScaledVector(c,-h.y).multiplyScalar(r),m.copy(c).multiplyScalar(h.x).addScaledVector(d,-p.x).multiplyScalar(r),o[t].add(f),o[e].add(f),o[i].add(f),s[t].add(m),s[e].add(m),s[i].add(m))}let v=this.groups;0===v.length&&(v=[{start:0,count:t.count}]);for(let e=0,n=v.length;e<n;++e){const n=v[e],i=n.start;for(let e=i,a=i+n.count;e<a;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const _=new Ki,y=new Ki,x=new Ki,b=new Ki;function M(t){x.fromBufferAttribute(i,t),b.copy(x);const e=o[t];_.copy(e),_.sub(x.multiplyScalar(x.dot(e))).normalize(),y.crossVectors(b,e);const n=y.dot(s[t])<0?-1:1;r.setXYZW(t,_.x,_.y,_.z,n)}for(let e=0,n=v.length;e<n;++e){const n=v[e],i=n.start;for(let e=i,a=i+n.count;e<a;e+=3)M(t.getX(e+0)),M(t.getX(e+1)),M(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Tr(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Ki,a=new Ki,r=new Ki,o=new Ki,s=new Ki,l=new Ki,d=new Ki,c=new Ki;if(t)for(let u=0,h=t.count;u<h;u+=3){const h=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,h),a.fromBufferAttribute(e,p),r.fromBufferAttribute(e,f),d.subVectors(r,a),c.subVectors(i,a),d.cross(c),o.fromBufferAttribute(n,h),s.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),o.add(d),s.add(d),l.add(d),n.setXYZ(h,o.x,o.y,o.z),n.setXYZ(p,s.x,s.y,s.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,o=e.count;t<o;t+=3)i.fromBufferAttribute(e,t+0),a.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),d.subVectors(r,a),c.subVectors(i,a),d.cross(c),n.setXYZ(t+0,d.x,d.y,d.z),n.setXYZ(t+1,d.x,d.y,d.z),n.setXYZ(t+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Nr.fromBufferAttribute(t,e),Nr.normalize(),t.setXYZ(e,Nr.x,Nr.y,Nr.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,a=t.normalized,r=new n.constructor(e.length*i);let o=0,s=0;for(let a=0,l=e.length;a<l;a++){o=t.isInterleavedBufferAttribute?e[a]*t.data.stride+t.offset:e[a]*i;for(let t=0;t<i;t++)r[s++]=n[o++]}return new Tr(r,i,a)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Or,n=this.index.array,i=this.attributes;for(const a in i){const r=t(i[a],n);e.setAttribute(a,r)}const a=this.morphAttributes;for(const i in a){const r=[],o=a[i];for(let e=0,i=o.length;e<i;e++){const i=t(o[e],n);r.push(i)}e.morphAttributes[i]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,n=r.length;t<n;t++){const n=r[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let a=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],r=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];r.push(i.toJSON(t.data))}r.length>0&&(i[e]=r,a=!0)}a&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const a=t.morphAttributes;for(const t in a){const n=[],i=a[t];for(let t=0,a=i.length;t<a;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=t.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Fr=new wa,Br=new Ta,zr=new va,kr=new Ki,Vr=new Ki,Hr=new Ki,Gr=new Ki,Wr=new Ki,jr=new Ki,Xr=new Ki,qr=new Ki;class Yr extends $a{constructor(t=new Or,e=new Mr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,a=n.morphAttributes.position,r=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const o=this.morphTargetInfluences;if(a&&o){jr.set(0,0,0);for(let n=0,i=a.length;n<i;n++){const i=o[n],s=a[n];0!==i&&(Wr.fromBufferAttribute(s,t),r?jr.addScaledVector(Wr,i):jr.addScaledVector(Wr.sub(e),i))}e.add(jr)}return e}raycast(t,e){const n=this.geometry,i=this.material,a=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),zr.copy(n.boundingSphere),zr.applyMatrix4(a),Br.copy(t.ray).recast(t.near),!1===zr.containsPoint(Br.origin)){if(null===Br.intersectSphere(zr,kr))return;if(Br.origin.distanceToSquared(kr)>(t.far-t.near)**2)return}Fr.copy(a).invert(),Br.copy(t.ray).applyMatrix4(Fr),null!==n.boundingBox&&!1===Br.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Br)}}_computeIntersections(t,e,n){let i;const a=this.geometry,r=this.material,o=a.index,s=a.attributes.position,l=a.attributes.uv,d=a.attributes.uv1,c=a.attributes.normal,u=a.groups,h=a.drawRange;if(null!==o)if(Array.isArray(r))for(let a=0,s=u.length;a<s;a++){const s=u[a],p=r[s.materialIndex];for(let a=Math.max(s.start,h.start),r=Math.min(o.count,Math.min(s.start+s.count,h.start+h.count));a<r;a+=3)i=Zr(this,p,t,n,l,d,c,o.getX(a),o.getX(a+1),o.getX(a+2)),i&&(i.faceIndex=Math.floor(a/3),i.face.materialIndex=s.materialIndex,e.push(i))}else for(let a=Math.max(0,h.start),s=Math.min(o.count,h.start+h.count);a<s;a+=3)i=Zr(this,r,t,n,l,d,c,o.getX(a),o.getX(a+1),o.getX(a+2)),i&&(i.faceIndex=Math.floor(a/3),e.push(i));else if(void 0!==s)if(Array.isArray(r))for(let a=0,o=u.length;a<o;a++){const o=u[a],p=r[o.materialIndex];for(let a=Math.max(o.start,h.start),r=Math.min(s.count,Math.min(o.start+o.count,h.start+h.count));a<r;a+=3)i=Zr(this,p,t,n,l,d,c,a,a+1,a+2),i&&(i.faceIndex=Math.floor(a/3),i.face.materialIndex=o.materialIndex,e.push(i))}else for(let a=Math.max(0,h.start),o=Math.min(s.count,h.start+h.count);a<o;a+=3)i=Zr(this,r,t,n,l,d,c,a,a+1,a+2),i&&(i.faceIndex=Math.floor(a/3),e.push(i))}}function Zr(t,e,n,i,a,r,o,s,l,d){t.getVertexPosition(s,Vr),t.getVertexPosition(l,Hr),t.getVertexPosition(d,Gr);const c=function(t,e,n,i,a,r,o,s){let l;if(l=1===e.side?i.intersectTriangle(o,r,a,!0,s):i.intersectTriangle(a,r,o,0===e.side,s),null===l)return null;qr.copy(s),qr.applyMatrix4(t.matrixWorld);const d=n.ray.origin.distanceTo(qr);return d<n.near||d>n.far?null:{distance:d,point:qr.clone(),object:t}}(t,e,n,i,Vr,Hr,Gr,Xr);if(c){const t=new Ki;pr.getBarycoord(Xr,Vr,Hr,Gr,t),a&&(c.uv=pr.getInterpolatedAttribute(a,s,l,d,t,new Mi)),r&&(c.uv1=pr.getInterpolatedAttribute(r,s,l,d,t,new Mi)),o&&(c.normal=pr.getInterpolatedAttribute(o,s,l,d,t,new Ki),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const e={a:s,b:l,c:d,normal:new Ki,materialIndex:0};pr.getNormal(Vr,Hr,Gr,e.normal),c.face=e,c.barycoord=t}return c}class Kr extends Or{constructor(t=1,e=1,n=1,i=1,a=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:a,depthSegments:r};const o=this;i=Math.floor(i),a=Math.floor(a),r=Math.floor(r);const s=[],l=[],d=[],c=[];let u=0,h=0;function p(t,e,n,i,a,r,p,f,m,g,v){const _=r/m,y=p/g,x=r/2,b=p/2,M=f/2,S=m+1,E=g+1;let T=0,w=0;const A=new Ki;for(let r=0;r<E;r++){const o=r*y-b;for(let s=0;s<S;s++){const u=s*_-x;A[t]=u*i,A[e]=o*a,A[n]=M,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,d.push(A.x,A.y,A.z),c.push(s/m),c.push(1-r/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+S*t,i=u+e+S*(t+1),a=u+(e+1)+S*(t+1),r=u+(e+1)+S*t;s.push(n,i,r),s.push(i,a,r),w+=6}o.addGroup(h,w,v),h+=w,u+=T}p("z","y","x",-1,-1,n,e,t,r,a,0),p("z","y","x",1,-1,n,e,-t,r,a,1),p("x","z","y",1,1,t,n,e,i,r,2),p("x","z","y",1,-1,t,n,-e,i,r,3),p("x","y","z",1,-1,t,e,n,i,a,4),p("x","y","z",-1,-1,t,e,-n,i,a,5),this.setIndex(s),this.setAttribute("position",new Cr(l,3)),this.setAttribute("normal",new Cr(d,3)),this.setAttribute("uv",new Cr(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Kr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Jr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const a=t[n][i];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?a.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=a.clone():Array.isArray(a)?e[n][i]=a.slice():e[n][i]=a}}return e}function Qr(t){const e={};for(let n=0;n<t.length;n++){const i=Jr(t[n]);for(const t in i)e[t]=i[t]}return e}function $r(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:Ui.workingColorSpace}const to={clone:Jr,merge:Qr};class eo extends br{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Jr(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class no extends $a{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new wa,this.projectionMatrix=new wa,this.projectionMatrixInverse=new wa,this.coordinateSystem=ui}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const io=new Ki,ao=new Mi,ro=new Mi;class oo extends no{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*gi*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*mi*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*gi*Math.atan(Math.tan(.5*mi*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){io.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(io.x,io.y).multiplyScalar(-t/io.z),io.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(io.x,io.y).multiplyScalar(-t/io.z)}getViewSize(t,e){return this.getViewBounds(t,ao,ro),e.subVectors(ro,ao)}setViewOffset(t,e,n,i,a,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*mi*this.fov)/this.zoom,n=2*e,i=this.aspect*n,a=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,o=r.fullHeight;a+=r.offsetX*i/t,e-=r.offsetY*n/o,i*=r.width/t,n*=r.height/o}const o=this.filmOffset;0!==o&&(a+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const so=-90;class lo extends $a{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new oo(so,1,t,e);i.layers=this.layers,this.add(i);const a=new oo(so,1,t,e);a.layers=this.layers,this.add(a);const r=new oo(so,1,t,e);r.layers=this.layers,this.add(r);const o=new oo(so,1,t,e);o.layers=this.layers,this.add(o);const s=new oo(so,1,t,e);s.layers=this.layers,this.add(s);const l=new oo(so,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,a,r,o,s]=e;for(const t of e)this.remove(t);if(t===ui)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),s.up.set(0,1,0),s.lookAt(0,0,-1);else{if(t!==hi)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),s.up.set(0,-1,0),s.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[a,r,o,s,l,d]=this.children,c=t.getRenderTarget(),u=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,a),t.setRenderTarget(n,1,i),t.render(e,r),t.setRenderTarget(n,2,i),t.render(e,o),t.setRenderTarget(n,3,i),t.render(e,s),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5,i),t.render(e,d),t.setRenderTarget(c,u,h),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class co extends Gi{constructor(t,e,n,i,a,r,o,s,l,d){super(t=void 0!==t?t:[],e=void 0!==e?e:Ae,n,i,a,r,o,s,l,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class uo extends Xi{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new co(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:Oe}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",a="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new Kr(5,5,5),o=new eo({name:"CubemapFromEquirect",uniforms:Jr(n),vertexShader:i,fragmentShader:a,side:1,blending:0});o.uniforms.tEquirect.value=e;const s=new Yr(r,o),l=e.minFilter;return e.minFilter===Be&&(e.minFilter=Oe),new lo(1,10,this).update(t,s),e.minFilter=l,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,n,i){const a=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,i);t.setRenderTarget(a)}}const ho=new Ki,po=new Ki,fo=new Si;class mo{constructor(t=new Ki(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ho.subVectors(n,e).cross(po.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(ho),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const a=-(t.start.dot(this.normal)+this.constant)/i;return a<0||a>1?null:e.copy(t.start).addScaledVector(n,a)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||fo.getNormalMatrix(t),i=this.coplanarPoint(ho).applyMatrix4(t),a=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(a),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const go=new va,vo=new Ki;class _o{constructor(t=new mo,e=new mo,n=new mo,i=new mo,a=new mo,r=new mo){this.planes=[t,e,n,i,a,r]}set(t,e,n,i,a,r){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(i),o[4].copy(a),o[5].copy(r),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=2e3){const n=this.planes,i=t.elements,a=i[0],r=i[1],o=i[2],s=i[3],l=i[4],d=i[5],c=i[6],u=i[7],h=i[8],p=i[9],f=i[10],m=i[11],g=i[12],v=i[13],_=i[14],y=i[15];if(n[0].setComponents(s-a,u-l,m-h,y-g).normalize(),n[1].setComponents(s+a,u+l,m+h,y+g).normalize(),n[2].setComponents(s+r,u+d,m+p,y+v).normalize(),n[3].setComponents(s-r,u-d,m-p,y-v).normalize(),n[4].setComponents(s-o,u-c,m-f,y-_).normalize(),e===ui)n[5].setComponents(s+o,u+c,m+f,y+_).normalize();else{if(e!==hi)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(o,c,f,_).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),go.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),go.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(go)}intersectsSprite(t){return go.center.set(0,0,0),go.radius=.7071067811865476,go.applyMatrix4(t.matrixWorld),this.intersectsSphere(go)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(vo.x=i.normal.x>0?t.max.x:t.min.x,vo.y=i.normal.y>0?t.max.y:t.min.y,vo.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(vo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function yo(){let t=null,e=!1,n=null,i=null;function a(e,r){n(e,r),i=t.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(a),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function xo(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=e.get(n);i&&(t.deleteBuffer(i.buffer),e.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const t=e.get(n);return void((!t||t.version<n.version)&&e.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const a=e.get(n);if(void 0===a)e.set(n,function(e,n){const i=e.array,a=e.usage,r=i.byteLength,o=t.createBuffer();let s;if(t.bindBuffer(n,o),t.bufferData(n,i,a),e.onUploadCallback(),i instanceof Float32Array)s=t.FLOAT;else if(i instanceof Uint16Array)s=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(i instanceof Int16Array)s=t.SHORT;else if(i instanceof Uint32Array)s=t.UNSIGNED_INT;else if(i instanceof Int32Array)s=t.INT;else if(i instanceof Int8Array)s=t.BYTE;else if(i instanceof Uint8Array)s=t.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);s=t.UNSIGNED_BYTE}return{buffer:o,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,size:r}}(n,i));else if(a.version<n.version){if(a.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,n,i){const a=n.array,r=n.updateRanges;if(t.bindBuffer(i,e),0===r.length)t.bufferSubData(i,0,a);else{r.sort(((t,e)=>t.start-e.start));let e=0;for(let t=1;t<r.length;t++){const n=r[e],i=r[t];i.start<=n.start+n.count+1?n.count=Math.max(n.count,i.start+i.count-n.start):(++e,r[e]=i)}r.length=e+1;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.bufferSubData(i,n.start*a.BYTES_PER_ELEMENT,a,n.start,n.count)}n.clearUpdateRanges()}n.onUploadCallback()}(a.buffer,n,i),a.version=n.version}}}}class bo extends Or{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const a=t/2,r=e/2,o=Math.floor(n),s=Math.floor(i),l=o+1,d=s+1,c=t/o,u=e/s,h=[],p=[],f=[],m=[];for(let t=0;t<d;t++){const e=t*u-r;for(let n=0;n<l;n++){const i=n*c-a;p.push(i,-e,0),f.push(0,0,1),m.push(n/o),m.push(1-t/s)}}for(let t=0;t<s;t++)for(let e=0;e<o;e++){const n=e+l*t,i=e+l*(t+1),a=e+1+l*(t+1),r=e+1+l*t;h.push(n,i,r),h.push(i,a,r)}this.setIndex(h),this.setAttribute("position",new Cr(p,3)),this.setAttribute("normal",new Cr(f,3)),this.setAttribute("uv",new Cr(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new bo(t.width,t.height,t.widthSegments,t.heightSegments)}}const Mo={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t\n\t\t#else\n\t\t\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},So={common:{diffuse:{value:new _r(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Si},alphaMap:{value:null},alphaMapTransform:{value:new Si},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Si}},envmap:{envMap:{value:null},envMapRotation:{value:new Si},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Si}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Si}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Si},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Si},normalScale:{value:new Mi(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Si},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Si}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Si}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Si}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _r(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _r(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Si},alphaTest:{value:0},uvTransform:{value:new Si}},sprite:{diffuse:{value:new _r(16777215)},opacity:{value:1},center:{value:new Mi(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Si},alphaMap:{value:null},alphaMapTransform:{value:new Si},alphaTest:{value:0}}},Eo={basic:{uniforms:Qr([So.common,So.specularmap,So.envmap,So.aomap,So.lightmap,So.fog]),vertexShader:Mo.meshbasic_vert,fragmentShader:Mo.meshbasic_frag},lambert:{uniforms:Qr([So.common,So.specularmap,So.envmap,So.aomap,So.lightmap,So.emissivemap,So.bumpmap,So.normalmap,So.displacementmap,So.fog,So.lights,{emissive:{value:new _r(0)}}]),vertexShader:Mo.meshlambert_vert,fragmentShader:Mo.meshlambert_frag},phong:{uniforms:Qr([So.common,So.specularmap,So.envmap,So.aomap,So.lightmap,So.emissivemap,So.bumpmap,So.normalmap,So.displacementmap,So.fog,So.lights,{emissive:{value:new _r(0)},specular:{value:new _r(1118481)},shininess:{value:30}}]),vertexShader:Mo.meshphong_vert,fragmentShader:Mo.meshphong_frag},standard:{uniforms:Qr([So.common,So.envmap,So.aomap,So.lightmap,So.emissivemap,So.bumpmap,So.normalmap,So.displacementmap,So.roughnessmap,So.metalnessmap,So.fog,So.lights,{emissive:{value:new _r(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Mo.meshphysical_vert,fragmentShader:Mo.meshphysical_frag},toon:{uniforms:Qr([So.common,So.aomap,So.lightmap,So.emissivemap,So.bumpmap,So.normalmap,So.displacementmap,So.gradientmap,So.fog,So.lights,{emissive:{value:new _r(0)}}]),vertexShader:Mo.meshtoon_vert,fragmentShader:Mo.meshtoon_frag},matcap:{uniforms:Qr([So.common,So.bumpmap,So.normalmap,So.displacementmap,So.fog,{matcap:{value:null}}]),vertexShader:Mo.meshmatcap_vert,fragmentShader:Mo.meshmatcap_frag},points:{uniforms:Qr([So.points,So.fog]),vertexShader:Mo.points_vert,fragmentShader:Mo.points_frag},dashed:{uniforms:Qr([So.common,So.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Mo.linedashed_vert,fragmentShader:Mo.linedashed_frag},depth:{uniforms:Qr([So.common,So.displacementmap]),vertexShader:Mo.depth_vert,fragmentShader:Mo.depth_frag},normal:{uniforms:Qr([So.common,So.bumpmap,So.normalmap,So.displacementmap,{opacity:{value:1}}]),vertexShader:Mo.meshnormal_vert,fragmentShader:Mo.meshnormal_frag},sprite:{uniforms:Qr([So.sprite,So.fog]),vertexShader:Mo.sprite_vert,fragmentShader:Mo.sprite_frag},background:{uniforms:{uvTransform:{value:new Si},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Mo.background_vert,fragmentShader:Mo.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Si}},vertexShader:Mo.backgroundCube_vert,fragmentShader:Mo.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Mo.cube_vert,fragmentShader:Mo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Mo.equirect_vert,fragmentShader:Mo.equirect_frag},distanceRGBA:{uniforms:Qr([So.common,So.displacementmap,{referencePosition:{value:new Ki},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Mo.distanceRGBA_vert,fragmentShader:Mo.distanceRGBA_frag},shadow:{uniforms:Qr([So.lights,So.fog,{color:{value:new _r(0)},opacity:{value:1}}]),vertexShader:Mo.shadow_vert,fragmentShader:Mo.shadow_frag}};Eo.physical={uniforms:Qr([Eo.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Si},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Si},clearcoatNormalScale:{value:new Mi(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Si},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Si},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Si},sheen:{value:0},sheenColor:{value:new _r(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Si},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Si},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Si},transmissionSamplerSize:{value:new Mi},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Si},attenuationDistance:{value:0},attenuationColor:{value:new _r(0)},specularColor:{value:new _r(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Si},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Si},anisotropyVector:{value:new Mi},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Si}}]),vertexShader:Mo.meshphysical_vert,fragmentShader:Mo.meshphysical_frag};const To={r:0,b:0,g:0},wo=new Oa,Ao=new wa;function Co(t,e,n,i,a,r,o){const s=new _r(0);let l,d,c=!0===r?0:1,u=null,h=0,p=null;function f(t){let i=!0===t.isScene?t.background:null;return i&&i.isTexture&&(i=(t.backgroundBlurriness>0?n:e).get(i)),i}function m(e,n){e.getRGB(To,$r(t)),i.buffers.color.setClear(To.r,To.g,To.b,n,o)}return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),c=e,m(s,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,m(s,c)},render:function(e){let n=!1;const a=f(e);null===a?m(s,c):a&&a.isColor&&(m(a,1),n=!0);const r=t.xr.getEnvironmentBlendMode();"additive"===r?i.buffers.color.setClear(0,0,0,1,o):"alpha-blend"===r&&i.buffers.color.setClear(0,0,0,0,o),(t.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,n){const i=f(n);i&&(i.isCubeTexture||i.mapping===Re)?(void 0===d&&(d=new Yr(new Kr(1,1,1),new eo({name:"BackgroundCubeMaterial",uniforms:Jr(Eo.backgroundCube.uniforms),vertexShader:Eo.backgroundCube.vertexShader,fragmentShader:Eo.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),a.update(d)),wo.copy(n.backgroundRotation),wo.x*=-1,wo.y*=-1,wo.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(wo.y*=-1,wo.z*=-1),d.material.uniforms.envMap.value=i,d.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,d.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(Ao.makeRotationFromEuler(wo)),d.material.toneMapped=Ui.getTransfer(i.colorSpace)!==Jn,u===i&&h===i.version&&p===t.toneMapping||(d.material.needsUpdate=!0,u=i,h=i.version,p=t.toneMapping),d.layers.enableAll(),e.unshift(d,d.geometry,d.material,0,0,null)):i&&i.isTexture&&(void 0===l&&(l=new Yr(new bo(2,2),new eo({name:"BackgroundMaterial",uniforms:Jr(Eo.background.uniforms),vertexShader:Eo.background.vertexShader,fragmentShader:Eo.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),a.update(l)),l.material.uniforms.t2D.value=i,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=Ui.getTransfer(i.colorSpace)!==Jn,!0===i.matrixAutoUpdate&&i.updateMatrix(),l.material.uniforms.uvTransform.value.copy(i.matrix),u===i&&h===i.version&&p===t.toneMapping||(l.material.needsUpdate=!0,u=i,h=i.version,p=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))}}}function Ro(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),i={},a=d(null);let r=a,o=!1;function s(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function d(t){const e=[],i=[],a=[];for(let t=0;t<n;t++)e[t]=0,i[t]=0,a[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:a,object:t,attributes:{},index:null}}function c(){const t=r.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function u(t){h(t,0)}function h(e,n){const i=r.newAttributes,a=r.enabledAttributes,o=r.attributeDivisors;i[e]=1,0===a[e]&&(t.enableVertexAttribArray(e),a[e]=1),o[e]!==n&&(t.vertexAttribDivisor(e,n),o[e]=n)}function p(){const e=r.newAttributes,n=r.enabledAttributes;for(let i=0,a=n.length;i<a;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function f(e,n,i,a,r,o,s){!0===s?t.vertexAttribIPointer(e,n,i,r,o):t.vertexAttribPointer(e,n,i,a,r,o)}function m(){g(),o=!0,r!==a&&(r=a,s(r.object))}function g(){a.geometry=null,a.program=null,a.wireframe=!1}return{setup:function(n,a,l,m,g){let v=!1;const _=function(e,n,a){const r=!0===a.wireframe;let o=i[e.id];void 0===o&&(o={},i[e.id]=o);let s=o[n.id];void 0===s&&(s={},o[n.id]=s);let l=s[r];return void 0===l&&(l=d(t.createVertexArray()),s[r]=l),l}(m,l,a);r!==_&&(r=_,s(r.object)),v=function(t,e,n,i){const a=r.attributes,o=e.attributes;let s=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){const n=a[e];let i=o[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;s++}return r.attributesNum!==s||r.index!==i}(n,m,l,g),v&&function(t,e,n,i){const a={},o=e.attributes;let s=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){let n=o[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),a[e]=i,s++}r.attributes=a,r.attributesNum=s,r.index=i}(n,m,l,g),null!==g&&e.update(g,t.ELEMENT_ARRAY_BUFFER),(v||o)&&(o=!1,function(n,i,a,r){c();const o=r.attributes,s=a.getAttributes(),l=i.defaultAttributeValues;for(const i in s){const a=s[i];if(a.location>=0){let s=o[i];if(void 0===s&&("instanceMatrix"===i&&n.instanceMatrix&&(s=n.instanceMatrix),"instanceColor"===i&&n.instanceColor&&(s=n.instanceColor)),void 0!==s){const i=s.normalized,o=s.itemSize,l=e.get(s);if(void 0===l)continue;const d=l.buffer,c=l.type,p=l.bytesPerElement,m=c===t.INT||c===t.UNSIGNED_INT||s.gpuType===Ge;if(s.isInterleavedBufferAttribute){const e=s.data,l=e.stride,g=s.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<a.locationSize;t++)h(a.location+t,e.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<a.locationSize;t++)u(a.location+t);t.bindBuffer(t.ARRAY_BUFFER,d);for(let t=0;t<a.locationSize;t++)f(a.location+t,o/a.locationSize,c,i,l*p,(g+o/a.locationSize*t)*p,m)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<a.locationSize;t++)h(a.location+t,s.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<a.locationSize;t++)u(a.location+t);t.bindBuffer(t.ARRAY_BUFFER,d);for(let t=0;t<a.locationSize;t++)f(a.location+t,o/a.locationSize,c,i,o*p,o/a.locationSize*t*p,m)}}else if(void 0!==l){const e=l[i];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(a.location,e);break;case 3:t.vertexAttrib3fv(a.location,e);break;case 4:t.vertexAttrib4fv(a.location,e);break;default:t.vertexAttrib1fv(a.location,e)}}}}p()}(n,a,l,m),null!==g&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(g).buffer))},reset:m,resetDefaultState:g,dispose:function(){m();for(const t in i){const e=i[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t]}},releaseStatesOfGeometry:function(t){if(void 0===i[t.id])return;const e=i[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t.id]},releaseStatesOfProgram:function(t){for(const e in i){const n=i[e];if(void 0===n[t.id])continue;const a=n[t.id];for(const t in a)l(a[t].object),delete a[t];delete n[t.id]}},initAttributes:c,enableAttribute:u,disableUnusedAttributes:p}}function Po(t,e,n){let i;function a(e,a,r){0!==r&&(t.drawArraysInstanced(i,e,a,r),n.update(a,i,r))}this.setMode=function(t){i=t},this.render=function(e,a){t.drawArrays(i,e,a),n.update(a,i,1)},this.renderInstances=a,this.renderMultiDraw=function(t,a,r){if(0===r)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,t,0,a,0,r);let o=0;for(let t=0;t<r;t++)o+=a[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(t,r,o,s){if(0===o)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)a(t[e],r[e],s[e]);else{l.multiDrawArraysInstancedWEBGL(i,t,0,r,0,s,0,o);let e=0;for(let t=0;t<o;t++)e+=r[t];for(let t=0;t<s.length;t++)n.update(e,i,s[t])}}}function Do(t,e,n,i){let a;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let o=void 0!==n.precision?n.precision:"highp";const s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const l=!0===n.logarithmicDepthBuffer,d=!0===n.reverseDepthBuffer&&e.has("EXT_clip_control");if(!0===d){const t=e.get("EXT_clip_control");t.clipControlEXT(t.LOWER_LEFT_EXT,t.ZERO_TO_ONE_EXT)}const c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==a)return a;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");a=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else a=0;return a},getMaxPrecision:r,textureFormatReadable:function(e){return e===$e||i.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const a=n===Xe&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(n!==ze&&i.convert(n)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==je&&!a)},precision:o,logarithmicDepthBuffer:l,reverseDepthBuffer:d,maxTextures:c,maxVertexTextures:u,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:u>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function Lo(t){const e=this;let n=null,i=0,a=!1,r=!1;const o=new mo,s=new Si,l={value:null,needsUpdate:!1};function d(t,n,i,a){const r=null!==t?t.length:0;let d=null;if(0!==r){if(d=l.value,!0!==a||null===d){const e=i+4*r,a=n.matrixWorldInverse;s.getNormalMatrix(a),(null===d||d.length<e)&&(d=new Float32Array(e));for(let e=0,n=i;e!==r;++e,n+=4)o.copy(t[e]).applyMatrix4(a,s),o.normal.toArray(d,n),d[n+3]=o.constant}l.value=d,l.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,d}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||a;return a=e,i=t.length,n},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(t,e){n=d(t,e,0)},this.setState=function(o,s,c){const u=o.clippingPlanes,h=o.clipIntersection,p=o.clipShadows,f=t.get(o);if(!a||null===u||0===u.length||r&&!p)r?d(null):(l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0);else{const t=r?0:i,e=4*t;let a=f.clippingState||null;l.value=a,a=d(u,s,e,c);for(let t=0;t!==e;++t)a[t]=n[t];f.clippingState=a,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=t}}}function Io(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=Ae:304===e&&(t.mapping=Ce),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const a=e.get(n);void 0!==a&&(e.delete(n),a.dispose())}return{get:function(a){if(a&&a.isTexture){const r=a.mapping;if(303===r||304===r){if(e.has(a))return n(e.get(a).texture,a.mapping);{const r=a.image;if(r&&r.height>0){const o=new uo(r.height);return o.fromEquirectangularTexture(t,a),e.set(a,o),a.addEventListener("dispose",i),n(o.texture,a.mapping)}return null}}}return a},dispose:function(){e=new WeakMap}}}class Uo extends no{constructor(t=-1,e=1,n=1,i=-1,a=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=a,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,a,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let a=n-t,r=n+t,o=i+e,s=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=t*this.view.offsetX,r=a+t*this.view.width,o-=e*this.view.offsetY,s=o-e*this.view.height}this.projectionMatrix.makeOrthographic(a,r,o,s,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const No=[.125,.215,.35,.446,.526,.582],Oo=new Uo,Fo=new _r;let Bo=null,zo=0,ko=0,Vo=!1;const Ho=(1+Math.sqrt(5))/2,Go=1/Ho,Wo=[new Ki(-Ho,Go,0),new Ki(Ho,Go,0),new Ki(-Go,0,Ho),new Ki(Go,0,Ho),new Ki(0,Ho,-Go),new Ki(0,Ho,Go),new Ki(-1,1,-1),new Ki(1,1,-1),new Ki(-1,1,1),new Ki(1,1,1)];class jo{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Bo=this._renderer.getRenderTarget(),zo=this._renderer.getActiveCubeFace(),ko=this._renderer.getActiveMipmapLevel(),Vo=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(t,n,i,a),e>0&&this._blur(a,0,0,e),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Zo(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Yo(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Bo,zo,ko),this._renderer.xr.enabled=Vo,t.scissorTest=!1,qo(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Ae||t.mapping===Ce?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Bo=this._renderer.getRenderTarget(),zo=this._renderer.getActiveCubeFace(),ko=this._renderer.getActiveMipmapLevel(),Vo=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Oe,minFilter:Oe,generateMipmaps:!1,type:Xe,format:$e,colorSpace:qn,depthBuffer:!1},i=Xo(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Xo(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],i=[];let a=t;const r=t-4+1+No.length;for(let o=0;o<r;o++){const r=Math.pow(2,a);n.push(r);let s=1/r;o>t-4?s=No[o-t+4-1]:0===o&&(s=0),i.push(s);const l=1/(r-2),d=-l,c=1+l,u=[d,d,c,d,c,c,d,d,c,c,d,c],h=6,p=6,f=3,m=2,g=1,v=new Float32Array(f*p*h),_=new Float32Array(m*p*h),y=new Float32Array(g*p*h);for(let t=0;t<h;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(i,f*p*t),_.set(u,m*p*t);const a=[t,t,t,t,t,t];y.set(a,g*p*t)}const x=new Or;x.setAttribute("position",new Tr(v,f)),x.setAttribute("uv",new Tr(_,m)),x.setAttribute("faceIndex",new Tr(y,g)),e.push(x),a>4&&a--}return{lodPlanes:e,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(20),a=new Ki(0,1,0);return new eo({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:a}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(i,t,e)}return i}_compileMaterial(t){const e=new Yr(this._lodPlanes[0],t);this._renderer.compile(e,Oo)}_sceneToCubeUV(t,e,n,i){const a=new oo(90,1,e,n),r=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,d=s.toneMapping;s.getClearColor(Fo),s.toneMapping=ye,s.autoClear=!1;const c=new Mr({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new Yr(new Kr,c);let h=!1;const p=t.background;p?p.isColor&&(c.color.copy(p),t.background=null,h=!0):(c.color.copy(Fo),h=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(a.up.set(0,r[e],0),a.lookAt(o[e],0,0)):1===n?(a.up.set(0,0,r[e]),a.lookAt(0,o[e],0)):(a.up.set(0,r[e],0),a.lookAt(0,0,o[e]));const l=this._cubeSize;qo(i,n*l,e>2?l:0,l,l),s.setRenderTarget(i),h&&s.render(u,a),s.render(t,a)}u.geometry.dispose(),u.material.dispose(),s.toneMapping=d,s.autoClear=l,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Ae||t.mapping===Ce;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Zo()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Yo());const a=i?this._cubemapMaterial:this._equirectMaterial,r=new Yr(this._lodPlanes[0],a);a.uniforms.envMap.value=t;const o=this._cubeSize;qo(e,0,0,3*o,2*o),n.setRenderTarget(e),n.render(r,Oo)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let e=1;e<i;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),a=Wo[(i-e-1)%Wo.length];this._blur(t,e-1,e,n,a)}e.autoClear=n}_blur(t,e,n,i,a){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,n,i,"latitudinal",a),this._halfBlur(r,t,n,n,i,"longitudinal",a)}_halfBlur(t,e,n,i,a,r,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const d=new Yr(this._lodPlanes[i],l),c=l.uniforms,u=this._sizeLods[n]-1,h=isFinite(a)?Math.PI/(2*u):2*Math.PI/39,p=a/h,f=isFinite(a)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<20;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0===t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;c.envMap.value=t.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===r,o&&(c.poleAxis.value=o);const{_lodMax:v}=this;c.dTheta.value=h,c.mipInt.value=v-n;const _=this._sizeLods[i];qo(e,3*_*(i>v-4?i-v+4:0),4*(this._cubeSize-_),3*_,2*_),s.setRenderTarget(e),s.render(d,Oo)}}function Xo(t,e,n){const i=new Xi(t,e,n);return i.texture.mapping=Re,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function qo(t,e,n,i,a){t.viewport.set(e,n,i,a),t.scissor.set(e,n,i,a)}function Yo(){return new eo({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Zo(){return new eo({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Ko(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const a=e.get(n);void 0!==a&&(e.delete(n),a.dispose())}return{get:function(a){if(a&&a.isTexture){const r=a.mapping,o=303===r||304===r,s=r===Ae||r===Ce;if(o||s){let r=e.get(a);const l=void 0!==r?r.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==l)return null===n&&(n=new jo(t)),r=o?n.fromEquirectangular(a,r):n.fromCubemap(a,r),r.texture.pmremVersion=a.pmremVersion,e.set(a,r),r.texture;if(void 0!==r)return r.texture;{const l=a.image;return o&&l&&l.height>0||s&&l&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(l)?(null===n&&(n=new jo(t)),r=o?n.fromEquirectangular(a):n.fromCubemap(a),r.texture.pmremVersion=a.pmremVersion,e.set(a,r),a.addEventListener("dispose",i),r.texture):null}}}return a},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Jo(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(t){const e=n(t);return null===e&&Ri("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Qo(t,e,n,i){const a={},r=new WeakMap;function o(t){const s=t.target;null!==s.index&&e.remove(s.index);for(const t in s.attributes)e.remove(s.attributes[t]);for(const t in s.morphAttributes){const n=s.morphAttributes[t];for(let t=0,i=n.length;t<i;t++)e.remove(n[t])}s.removeEventListener("dispose",o),delete a[s.id];const l=r.get(s);l&&(e.remove(l),r.delete(s)),i.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,n.memory.geometries--}function s(t){const n=[],i=t.index,a=t.attributes.position;let o=0;if(null!==i){const t=i.array;o=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],a=t[e+1],r=t[e+2];n.push(i,a,a,r,r,i)}}else{if(void 0===a)return;{const t=a.array;o=a.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,a=e+2;n.push(t,i,i,a,a,t)}}}const s=new(Ti(n)?Ar:wr)(n,1);s.version=o;const l=r.get(t);l&&e.remove(l),r.set(t,s)}return{get:function(t,e){return!0===a[e.id]||(e.addEventListener("dispose",o),a[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER);const a=n.morphAttributes;for(const n in a){const i=a[n];for(let n=0,a=i.length;n<a;n++)e.update(i[n],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&s(t)}else s(t);return r.get(t)}}}function $o(t,e,n){let i,a,r;function o(e,o,s){0!==s&&(t.drawElementsInstanced(i,o,a,e*r,s),n.update(o,i,s))}this.setMode=function(t){i=t},this.setIndex=function(t){a=t.type,r=t.bytesPerElement},this.render=function(e,o){t.drawElements(i,o,a,e*r),n.update(o,i,1)},this.renderInstances=o,this.renderMultiDraw=function(t,r,o){if(0===o)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,r,0,a,t,0,o);let s=0;for(let t=0;t<o;t++)s+=r[t];n.update(s,i,1)},this.renderMultiDrawInstances=function(t,s,l,d){if(0===l)return;const c=e.get("WEBGL_multi_draw");if(null===c)for(let e=0;e<t.length;e++)o(t[e]/r,s[e],d[e]);else{c.multiDrawElementsInstancedWEBGL(i,s,0,a,t,0,d,0,l);let e=0;for(let t=0;t<l;t++)e+=s[t];for(let t=0;t<d.length;t++)n.update(e,i,d[t])}}}function ts(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,a){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=a*(n/3);break;case t.LINES:e.lines+=a*(n/2);break;case t.LINE_STRIP:e.lines+=a*(n-1);break;case t.LINE_LOOP:e.lines+=a*n;break;case t.POINTS:e.points+=a*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function es(t,e,n){const i=new WeakMap,a=new Wi;return{update:function(r,o,s){const l=r.morphTargetInfluences,d=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,c=void 0!==d?d.length:0;let u=i.get(o);if(void 0===u||u.count!==c){void 0!==u&&u.texture.dispose();const h=void 0!==o.morphAttributes.position,p=void 0!==o.morphAttributes.normal,f=void 0!==o.morphAttributes.color,m=o.morphAttributes.position||[],g=o.morphAttributes.normal||[],v=o.morphAttributes.color||[];let _=0;!0===h&&(_=1),!0===p&&(_=2),!0===f&&(_=3);let y=o.attributes.position.count*_,x=1;y>e.maxTextureSize&&(x=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const b=new Float32Array(y*x*4*c),M=new qi(b,y,x,c);M.type=je,M.needsUpdate=!0;const S=4*_;for(let T=0;T<c;T++){const w=m[T],A=g[T],C=v[T],R=y*x*4*T;for(let P=0;P<w.count;P++){const D=P*S;!0===h&&(a.fromBufferAttribute(w,P),b[R+D+0]=a.x,b[R+D+1]=a.y,b[R+D+2]=a.z,b[R+D+3]=0),!0===p&&(a.fromBufferAttribute(A,P),b[R+D+4]=a.x,b[R+D+5]=a.y,b[R+D+6]=a.z,b[R+D+7]=0),!0===f&&(a.fromBufferAttribute(C,P),b[R+D+8]=a.x,b[R+D+9]=a.y,b[R+D+10]=a.z,b[R+D+11]=4===C.itemSize?a.w:1)}}function E(){M.dispose(),i.delete(o),o.removeEventListener("dispose",E)}u={count:c,texture:M,size:new Mi(y,x)},i.set(o,u),o.addEventListener("dispose",E)}if(!0===r.isInstancedMesh&&null!==r.morphTexture)s.getUniforms().setValue(t,"morphTexture",r.morphTexture,n);else{let L=0;for(let U=0;U<l.length;U++)L+=l[U];const I=o.morphTargetsRelative?1:1-L;s.getUniforms().setValue(t,"morphTargetBaseInfluence",I),s.getUniforms().setValue(t,"morphTargetInfluences",l)}s.getUniforms().setValue(t,"morphTargetsTexture",u.texture,n),s.getUniforms().setValue(t,"morphTargetsTextureSize",u.size)}}}function ns(t,e,n,i){let a=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(o){const s=i.render.frame,l=o.geometry,d=e.get(o,l);if(a.get(d)!==s&&(e.update(d),a.set(d,s)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",r)&&o.addEventListener("dispose",r),a.get(o)!==s&&(n.update(o.instanceMatrix,t.ARRAY_BUFFER),null!==o.instanceColor&&n.update(o.instanceColor,t.ARRAY_BUFFER),a.set(o,s))),o.isSkinnedMesh){const t=o.skeleton;a.get(t)!==s&&(t.update(),a.set(t,s))}return d},dispose:function(){a=new WeakMap}}}class is extends Gi{constructor(t,e,n,i,a,r,o,s,l,d=1026){if(d!==nn&&d!==an)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&d===nn&&(n=We),void 0===n&&d===an&&(n=Ze),super(null,i,a,r,o,s,d,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==o?o:Ie,this.minFilter=void 0!==s?s:Ie,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}const as=new Gi,rs=new is(1,1),os=new qi,ss=new Yi,ls=new co,ds=[],cs=[],us=new Float32Array(16),hs=new Float32Array(9),ps=new Float32Array(4);function fs(t,e,n){const i=t[0];if(i<=0||i>0)return t;const a=e*n;let r=ds[a];if(void 0===r&&(r=new Float32Array(a),ds[a]=r),0!==e){i.toArray(r,0);for(let i=1,a=0;i!==e;++i)a+=n,t[i].toArray(r,a)}return r}function ms(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function gs(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function vs(t,e){let n=cs[e];void 0===n&&(n=new Int32Array(e),cs[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function _s(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ys(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ms(n,e))return;t.uniform2fv(this.addr,e),gs(n,e)}}function xs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(ms(n,e))return;t.uniform3fv(this.addr,e),gs(n,e)}}function bs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ms(n,e))return;t.uniform4fv(this.addr,e),gs(n,e)}}function Ms(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(ms(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),gs(n,e)}else{if(ms(n,i))return;ps.set(i),t.uniformMatrix2fv(this.addr,!1,ps),gs(n,i)}}function Ss(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(ms(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),gs(n,e)}else{if(ms(n,i))return;hs.set(i),t.uniformMatrix3fv(this.addr,!1,hs),gs(n,i)}}function Es(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(ms(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),gs(n,e)}else{if(ms(n,i))return;us.set(i),t.uniformMatrix4fv(this.addr,!1,us),gs(n,i)}}function Ts(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ws(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ms(n,e))return;t.uniform2iv(this.addr,e),gs(n,e)}}function As(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(ms(n,e))return;t.uniform3iv(this.addr,e),gs(n,e)}}function Cs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ms(n,e))return;t.uniform4iv(this.addr,e),gs(n,e)}}function Rs(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Ps(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ms(n,e))return;t.uniform2uiv(this.addr,e),gs(n,e)}}function Ds(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(ms(n,e))return;t.uniform3uiv(this.addr,e),gs(n,e)}}function Ls(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ms(n,e))return;t.uniform4uiv(this.addr,e),gs(n,e)}}function Is(t,e,n){const i=this.cache,a=n.allocateTextureUnit();let r;i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),this.type===t.SAMPLER_2D_SHADOW?(rs.compareFunction=515,r=rs):r=as,n.setTexture2D(e||r,a)}function Us(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTexture3D(e||ss,a)}function Ns(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTextureCube(e||ls,a)}function Os(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTexture2DArray(e||os,a)}function Fs(t,e){t.uniform1fv(this.addr,e)}function Bs(t,e){const n=fs(e,this.size,2);t.uniform2fv(this.addr,n)}function zs(t,e){const n=fs(e,this.size,3);t.uniform3fv(this.addr,n)}function ks(t,e){const n=fs(e,this.size,4);t.uniform4fv(this.addr,n)}function Vs(t,e){const n=fs(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Hs(t,e){const n=fs(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Gs(t,e){const n=fs(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ws(t,e){t.uniform1iv(this.addr,e)}function js(t,e){t.uniform2iv(this.addr,e)}function Xs(t,e){t.uniform3iv(this.addr,e)}function qs(t,e){t.uniform4iv(this.addr,e)}function Ys(t,e){t.uniform1uiv(this.addr,e)}function Zs(t,e){t.uniform2uiv(this.addr,e)}function Ks(t,e){t.uniform3uiv(this.addr,e)}function Js(t,e){t.uniform4uiv(this.addr,e)}function Qs(t,e,n){const i=this.cache,a=e.length,r=vs(n,a);ms(i,r)||(t.uniform1iv(this.addr,r),gs(i,r));for(let t=0;t!==a;++t)n.setTexture2D(e[t]||as,r[t])}function $s(t,e,n){const i=this.cache,a=e.length,r=vs(n,a);ms(i,r)||(t.uniform1iv(this.addr,r),gs(i,r));for(let t=0;t!==a;++t)n.setTexture3D(e[t]||ss,r[t])}function tl(t,e,n){const i=this.cache,a=e.length,r=vs(n,a);ms(i,r)||(t.uniform1iv(this.addr,r),gs(i,r));for(let t=0;t!==a;++t)n.setTextureCube(e[t]||ls,r[t])}function el(t,e,n){const i=this.cache,a=e.length,r=vs(n,a);ms(i,r)||(t.uniform1iv(this.addr,r),gs(i,r));for(let t=0;t!==a;++t)n.setTexture2DArray(e[t]||os,r[t])}class nl{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return _s;case 35664:return ys;case 35665:return xs;case 35666:return bs;case 35674:return Ms;case 35675:return Ss;case 35676:return Es;case 5124:case 35670:return Ts;case 35667:case 35671:return ws;case 35668:case 35672:return As;case 35669:case 35673:return Cs;case 5125:return Rs;case 36294:return Ps;case 36295:return Ds;case 36296:return Ls;case 35678:case 36198:case 36298:case 36306:case 35682:return Is;case 35679:case 36299:case 36307:return Us;case 35680:case 36300:case 36308:case 36293:return Ns;case 36289:case 36303:case 36311:case 36292:return Os}}(e.type)}}class il{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Fs;case 35664:return Bs;case 35665:return zs;case 35666:return ks;case 35674:return Vs;case 35675:return Hs;case 35676:return Gs;case 5124:case 35670:return Ws;case 35667:case 35671:return js;case 35668:case 35672:return Xs;case 35669:case 35673:return qs;case 5125:return Ys;case 36294:return Zs;case 36295:return Ks;case 36296:return Js;case 35678:case 36198:case 36298:case 36306:case 35682:return Qs;case 35679:case 36299:case 36307:return $s;case 35680:case 36300:case 36308:case 36293:return tl;case 36289:case 36303:case 36311:case 36292:return el}}(e.type)}}class al{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let a=0,r=i.length;a!==r;++a){const r=i[a];r.setValue(t,e[r.id],n)}}}const rl=/(\w+)(\])?(\[|\.)?/g;function ol(t,e){t.seq.push(e),t.map[e.id]=e}function sl(t,e,n){const i=t.name,a=i.length;for(rl.lastIndex=0;;){const r=rl.exec(i),o=rl.lastIndex;let s=r[1];const l="]"===r[2],d=r[3];if(l&&(s|=0),void 0===d||"["===d&&o+2===a){ol(n,void 0===d?new nl(s,t,e):new il(s,t,e));break}{let t=n.map[s];void 0===t&&(t=new al(s),ol(n,t)),n=t}}}class ll{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);sl(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const a=this.map[e];void 0!==a&&a.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let a=0,r=e.length;a!==r;++a){const r=e[a],o=n[r.id];!1!==o.needsUpdate&&r.setValue(t,o.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,a=t.length;i!==a;++i){const a=t[i];a.id in e&&n.push(a)}return n}}function dl(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}const cl=37297;let ul=0;function hl(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),a=t.getShaderInfoLog(e).trim();if(i&&""===a)return"";const r=/ERROR: 0:(\d+)/.exec(a);if(r){const i=parseInt(r[1]);return n.toUpperCase()+"\n\n"+a+"\n\n"+function(t,e){const n=t.split("\n"),i=[],a=Math.max(e-6,0),r=Math.min(e+6,n.length);for(let t=a;t<r;t++){const a=t+1;i.push(`${a===e?">":" "} ${a}: ${n[t]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return a}function pl(t,e){const n=function(t){const e=Ui.getPrimaries(Ui.workingColorSpace),n=Ui.getPrimaries(t);let i;switch(e===n?i="":e===$n&&n===Qn?i="LinearDisplayP3ToLinearSRGB":e===Qn&&n===$n&&(i="LinearSRGBToLinearDisplayP3"),t){case qn:case Zn:return[i,"LinearTransferOETF"];case Xn:case Yn:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",t),[i,"LinearTransferOETF"]}}(e);return`vec4 ${t}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function fl(t,e){let n;switch(e){case xe:n="Linear";break;case be:n="Reinhard";break;case Me:n="Cineon";break;case Se:n="ACESFilmic";break;case Te:n="AgX";break;case we:n="Neutral";break;case Ee:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const ml=new Ki;function gl(t){return""!==t}function vl(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function _l(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const yl=/^[ \t]*#include +<([\w\d./]+)>/gm;function xl(t){return t.replace(yl,Ml)}const bl=new Map;function Ml(t,e){let n=Mo[e];if(void 0===n){const t=bl.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=Mo[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return xl(n)}const Sl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function El(t){return t.replace(Sl,Tl)}function Tl(t,e,n,i){let a="";for(let t=parseInt(e);t<parseInt(n);t++)a+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return a}function wl(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Al(t,e,n,i){const a=t.getContext(),r=n.defines;let o=n.vertexShader,s=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===Bt?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===zt?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===kt&&(e="SHADOWMAP_TYPE_VSM"),e}(n),d=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Ae:case Ce:e="ENVMAP_TYPE_CUBE";break;case Re:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),c=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===Ce&&(e="ENVMAP_MODE_REFRACTION"),e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case ge:e="ENVMAP_BLENDING_MULTIPLY";break;case ve:e="ENVMAP_BLENDING_MIX";break;case _e:e="ENVMAP_BLENDING_ADD"}return e}(n),h=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),p=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(gl).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(r),m=a.createProgram();let g,v,_=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(gl).join("\n"),g.length>0&&(g+="\n"),v=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(gl).join("\n"),v.length>0&&(v+="\n")):(g=[wl(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(gl).join("\n"),v=[wl(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ye?"#define TONE_MAPPING":"",n.toneMapping!==ye?Mo.tonemapping_pars_fragment:"",n.toneMapping!==ye?fl("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Mo.colorspace_pars_fragment,pl("linearToOutputTexel",n.outputColorSpace),(Ui.getLuminanceCoefficients(ml),["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${ml.x.toFixed(4)}, ${ml.y.toFixed(4)}, ${ml.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(gl).join("\n")),o=xl(o),o=vl(o,n),o=_l(o,n),s=xl(s),s=vl(s,n),s=_l(s,n),o=El(o),s=El(s),!0!==n.isRawShaderMaterial&&(_="#version 300 es\n",g=[p,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===ci?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ci?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const y=_+g+o,x=_+v+s,b=dl(a,a.VERTEX_SHADER,y),M=dl(a,a.FRAGMENT_SHADER,x);function S(e){if(t.debug.checkShaderErrors){const n=a.getProgramInfoLog(m).trim(),i=a.getShaderInfoLog(b).trim(),r=a.getShaderInfoLog(M).trim();let o=!0,s=!0;if(!1===a.getProgramParameter(m,a.LINK_STATUS))if(o=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(a,m,b,M);else{const t=hl(a,b,"vertex"),i=hl(a,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(m,a.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+n+"\n"+t+"\n"+i)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==i&&""!==r||(s=!1);s&&(e.diagnostics={runnable:o,programLog:n,vertexShader:{log:i,prefix:g},fragmentShader:{log:r,prefix:v}})}a.deleteShader(b),a.deleteShader(M),E=new ll(a,m),T=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let a=0;a<i;a++){const i=t.getActiveAttrib(e,a),r=i.name;let o=1;i.type===t.FLOAT_MAT2&&(o=2),i.type===t.FLOAT_MAT3&&(o=3),i.type===t.FLOAT_MAT4&&(o=4),n[r]={type:i.type,location:t.getAttribLocation(e,r),locationSize:o}}return n}(a,m)}let E,T;a.attachShader(m,b),a.attachShader(m,M),void 0!==n.index0AttributeName?a.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&a.bindAttribLocation(m,0,"position"),a.linkProgram(m),this.getUniforms=function(){return void 0===E&&S(this),E},this.getAttributes=function(){return void 0===T&&S(this),T};let w=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===w&&(w=a.getProgramParameter(m,cl)),w},this.destroy=function(){i.releaseStatesOfProgram(this),a.deleteProgram(m),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=ul++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=M,this}let Cl=0;class Rl{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),a=this._getShaderStage(n),r=this._getShaderCacheForMaterial(t);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(a)&&(r.add(a),a.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new Pl(t),e.set(t,n)),n}}class Pl{constructor(t){this.id=Cl++,this.code=t,this.usedTimes=0}}function Dl(t,e,n,i,a,r,o){const s=new Fa,l=new Rl,d=new Set,c=[],u=a.logarithmicDepthBuffer,h=a.reverseDepthBuffer,p=a.vertexTextures;let f=a.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(t){return d.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(r,s,c,v,_){const y=v.fog,x=_.geometry,b=r.isMeshStandardMaterial?v.environment:null,M=(r.isMeshStandardMaterial?n:e).get(r.envMap||b),S=M&&M.mapping===Re?M.image.height:null,E=m[r.type];null!==r.precision&&(f=a.getMaxPrecision(r.precision),f!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",f,"instead."));const T=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,w=void 0!==T?T.length:0;let A,C,R,P,D=0;if(void 0!==x.morphAttributes.position&&(D=1),void 0!==x.morphAttributes.normal&&(D=2),void 0!==x.morphAttributes.color&&(D=3),E){const t=Eo[E];A=t.vertexShader,C=t.fragmentShader}else A=r.vertexShader,C=r.fragmentShader,l.update(r),R=l.getVertexShaderID(r),P=l.getFragmentShaderID(r);const L=t.getRenderTarget(),I=!0===_.isInstancedMesh,U=!0===_.isBatchedMesh,N=!!r.map,O=!!r.matcap,F=!!M,B=!!r.aoMap,z=!!r.lightMap,k=!!r.bumpMap,V=!!r.normalMap,H=!!r.displacementMap,G=!!r.emissiveMap,W=!!r.metalnessMap,j=!!r.roughnessMap,X=r.anisotropy>0,q=r.clearcoat>0,Y=r.dispersion>0,Z=r.iridescence>0,K=r.sheen>0,J=r.transmission>0,Q=X&&!!r.anisotropyMap,$=q&&!!r.clearcoatMap,tt=q&&!!r.clearcoatNormalMap,et=q&&!!r.clearcoatRoughnessMap,nt=Z&&!!r.iridescenceMap,it=Z&&!!r.iridescenceThicknessMap,at=K&&!!r.sheenColorMap,rt=K&&!!r.sheenRoughnessMap,ot=!!r.specularMap,st=!!r.specularColorMap,lt=!!r.specularIntensityMap,dt=J&&!!r.transmissionMap,ct=J&&!!r.thicknessMap,ut=!!r.gradientMap,ht=!!r.alphaMap,pt=r.alphaTest>0,ft=!!r.alphaHash,mt=!!r.extensions;let gt=ye;r.toneMapped&&(null!==L&&!0!==L.isXRRenderTarget||(gt=t.toneMapping));const vt={shaderID:E,shaderType:r.type,shaderName:r.name,vertexShader:A,fragmentShader:C,defines:r.defines,customVertexShaderID:R,customFragmentShaderID:P,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:f,batching:U,batchingColor:U&&null!==_._colorsTexture,instancing:I,instancingColor:I&&null!==_.instanceColor,instancingMorph:I&&null!==_.morphTexture,supportsVertexTextures:p,outputColorSpace:null===L?t.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:qn,alphaToCoverage:!!r.alphaToCoverage,map:N,matcap:O,envMap:F,envMapMode:F&&M.mapping,envMapCubeUVHeight:S,aoMap:B,lightMap:z,bumpMap:k,normalMap:V,displacementMap:p&&H,emissiveMap:G,normalMapObjectSpace:V&&1===r.normalMapType,normalMapTangentSpace:V&&0===r.normalMapType,metalnessMap:W,roughnessMap:j,anisotropy:X,anisotropyMap:Q,clearcoat:q,clearcoatMap:$,clearcoatNormalMap:tt,clearcoatRoughnessMap:et,dispersion:Y,iridescence:Z,iridescenceMap:nt,iridescenceThicknessMap:it,sheen:K,sheenColorMap:at,sheenRoughnessMap:rt,specularMap:ot,specularColorMap:st,specularIntensityMap:lt,transmission:J,transmissionMap:dt,thicknessMap:ct,gradientMap:ut,opaque:!1===r.transparent&&1===r.blending&&!1===r.alphaToCoverage,alphaMap:ht,alphaTest:pt,alphaHash:ft,combine:r.combine,mapUv:N&&g(r.map.channel),aoMapUv:B&&g(r.aoMap.channel),lightMapUv:z&&g(r.lightMap.channel),bumpMapUv:k&&g(r.bumpMap.channel),normalMapUv:V&&g(r.normalMap.channel),displacementMapUv:H&&g(r.displacementMap.channel),emissiveMapUv:G&&g(r.emissiveMap.channel),metalnessMapUv:W&&g(r.metalnessMap.channel),roughnessMapUv:j&&g(r.roughnessMap.channel),anisotropyMapUv:Q&&g(r.anisotropyMap.channel),clearcoatMapUv:$&&g(r.clearcoatMap.channel),clearcoatNormalMapUv:tt&&g(r.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:et&&g(r.clearcoatRoughnessMap.channel),iridescenceMapUv:nt&&g(r.iridescenceMap.channel),iridescenceThicknessMapUv:it&&g(r.iridescenceThicknessMap.channel),sheenColorMapUv:at&&g(r.sheenColorMap.channel),sheenRoughnessMapUv:rt&&g(r.sheenRoughnessMap.channel),specularMapUv:ot&&g(r.specularMap.channel),specularColorMapUv:st&&g(r.specularColorMap.channel),specularIntensityMapUv:lt&&g(r.specularIntensityMap.channel),transmissionMapUv:dt&&g(r.transmissionMap.channel),thicknessMapUv:ct&&g(r.thicknessMap.channel),alphaMapUv:ht&&g(r.alphaMap.channel),vertexTangents:!!x.attributes.tangent&&(V||X),vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,pointsUvs:!0===_.isPoints&&!!x.attributes.uv&&(N||ht),fog:!!y,useFog:!0===r.fog,fogExp2:!!y&&y.isFogExp2,flatShading:!0===r.flatShading,sizeAttenuation:!0===r.sizeAttenuation,logarithmicDepthBuffer:u,reverseDepthBuffer:h,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:w,morphTextureStride:D,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numLightProbes:s.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:gt,decodeVideoTexture:N&&!0===r.map.isVideoTexture&&Ui.getTransfer(r.map.colorSpace)===Jn,premultipliedAlpha:r.premultipliedAlpha,doubleSided:2===r.side,flipSided:1===r.side,useDepthPacking:r.depthPacking>=0,depthPacking:r.depthPacking||0,index0AttributeName:r.index0AttributeName,extensionClipCullDistance:mt&&!0===r.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(mt&&!0===r.extensions.multiDraw||U)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:r.customProgramCacheKey()};return vt.vertexUv1s=d.has(1),vt.vertexUv2s=d.has(2),vt.vertexUv3s=d.has(3),d.clear(),vt},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){s.disableAll(),e.supportsVertexTextures&&s.enable(0),e.instancing&&s.enable(1),e.instancingColor&&s.enable(2),e.instancingMorph&&s.enable(3),e.matcap&&s.enable(4),e.envMap&&s.enable(5),e.normalMapObjectSpace&&s.enable(6),e.normalMapTangentSpace&&s.enable(7),e.clearcoat&&s.enable(8),e.iridescence&&s.enable(9),e.alphaTest&&s.enable(10),e.vertexColors&&s.enable(11),e.vertexAlphas&&s.enable(12),e.vertexUv1s&&s.enable(13),e.vertexUv2s&&s.enable(14),e.vertexUv3s&&s.enable(15),e.vertexTangents&&s.enable(16),e.anisotropy&&s.enable(17),e.alphaHash&&s.enable(18),e.batching&&s.enable(19),e.dispersion&&s.enable(20),e.batchingColor&&s.enable(21),t.push(s.mask),s.disableAll(),e.fog&&s.enable(0),e.useFog&&s.enable(1),e.flatShading&&s.enable(2),e.logarithmicDepthBuffer&&s.enable(3),e.reverseDepthBuffer&&s.enable(4),e.skinning&&s.enable(5),e.morphTargets&&s.enable(6),e.morphNormals&&s.enable(7),e.morphColors&&s.enable(8),e.premultipliedAlpha&&s.enable(9),e.shadowMapEnabled&&s.enable(10),e.doubleSided&&s.enable(11),e.flipSided&&s.enable(12),e.useDepthPacking&&s.enable(13),e.dithering&&s.enable(14),e.transmission&&s.enable(15),e.sheen&&s.enable(16),e.opaque&&s.enable(17),e.pointsUvs&&s.enable(18),e.decodeVideoTexture&&s.enable(19),e.alphaToCoverage&&s.enable(20),t.push(s.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=m[t.type];let n;if(e){const t=Eo[e];n=to.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Al(t,n,e,r),c.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:c,dispose:function(){l.dispose()}}}function Ll(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Il(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ul(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Nl(){const t=[];let e=0;const n=[],i=[],a=[];function r(n,i,a,r,o,s){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:a,groupOrder:r,renderOrder:n.renderOrder,z:o,group:s},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=a,l.groupOrder=r,l.renderOrder=n.renderOrder,l.z=o,l.group=s),e++,l}return{opaque:n,transmissive:i,transparent:a,init:function(){e=0,n.length=0,i.length=0,a.length=0},push:function(t,e,o,s,l,d){const c=r(t,e,o,s,l,d);o.transmission>0?i.push(c):!0===o.transparent?a.push(c):n.push(c)},unshift:function(t,e,o,s,l,d){const c=r(t,e,o,s,l,d);o.transmission>0?i.unshift(c):!0===o.transparent?a.unshift(c):n.unshift(c)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Il),i.length>1&&i.sort(e||Ul),a.length>1&&a.sort(e||Ul)}}}function Ol(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let a;return void 0===i?(a=new Nl,t.set(e,[a])):n>=i.length?(a=new Nl,i.push(a)):a=i[n],a},dispose:function(){t=new WeakMap}}}function Fl(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Ki,color:new _r};break;case"SpotLight":n={position:new Ki,direction:new Ki,color:new _r,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Ki,color:new _r,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Ki,skyColor:new _r,groundColor:new _r};break;case"RectAreaLight":n={color:new _r,position:new Ki,halfWidth:new Ki,halfHeight:new Ki}}return t[e.id]=n,n}}}let Bl=0;function zl(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function kl(t){const e=new Fl,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Mi};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Mi,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)i.probe.push(new Ki);const a=new Ki,r=new wa,o=new wa;return{setup:function(a){let r=0,o=0,s=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let l=0,d=0,c=0,u=0,h=0,p=0,f=0,m=0,g=0,v=0,_=0;a.sort(zl);for(let t=0,y=a.length;t<y;t++){const y=a[t],x=y.color,b=y.intensity,M=y.distance,S=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)r+=x.r*b,o+=x.g*b,s+=x.b*b;else if(y.isLightProbe){for(let t=0;t<9;t++)i.probe[t].addScaledVector(y.sh.coefficients[t],b);_++}else if(y.isDirectionalLight){const t=e.get(y);if(t.color.copy(y.color).multiplyScalar(y.intensity),y.castShadow){const t=y.shadow,e=n.get(y);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,i.directionalShadow[l]=e,i.directionalShadowMap[l]=S,i.directionalShadowMatrix[l]=y.shadow.matrix,p++}i.directional[l]=t,l++}else if(y.isSpotLight){const t=e.get(y);t.position.setFromMatrixPosition(y.matrixWorld),t.color.copy(x).multiplyScalar(b),t.distance=M,t.coneCos=Math.cos(y.angle),t.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),t.decay=y.decay,i.spot[c]=t;const a=y.shadow;if(y.map&&(i.spotLightMap[g]=y.map,g++,a.updateMatrices(y),y.castShadow&&v++),i.spotLightMatrix[c]=a.matrix,y.castShadow){const t=n.get(y);t.shadowIntensity=a.intensity,t.shadowBias=a.bias,t.shadowNormalBias=a.normalBias,t.shadowRadius=a.radius,t.shadowMapSize=a.mapSize,i.spotShadow[c]=t,i.spotShadowMap[c]=S,m++}c++}else if(y.isRectAreaLight){const t=e.get(y);t.color.copy(x).multiplyScalar(b),t.halfWidth.set(.5*y.width,0,0),t.halfHeight.set(0,.5*y.height,0),i.rectArea[u]=t,u++}else if(y.isPointLight){const t=e.get(y);if(t.color.copy(y.color).multiplyScalar(y.intensity),t.distance=y.distance,t.decay=y.decay,y.castShadow){const t=y.shadow,e=n.get(y);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,i.pointShadow[d]=e,i.pointShadowMap[d]=S,i.pointShadowMatrix[d]=y.shadow.matrix,f++}i.point[d]=t,d++}else if(y.isHemisphereLight){const t=e.get(y);t.skyColor.copy(y.color).multiplyScalar(b),t.groundColor.copy(y.groundColor).multiplyScalar(b),i.hemi[h]=t,h++}}u>0&&(!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=So.LTC_FLOAT_1,i.rectAreaLTC2=So.LTC_FLOAT_2):(i.rectAreaLTC1=So.LTC_HALF_1,i.rectAreaLTC2=So.LTC_HALF_2)),i.ambient[0]=r,i.ambient[1]=o,i.ambient[2]=s;const y=i.hash;y.directionalLength===l&&y.pointLength===d&&y.spotLength===c&&y.rectAreaLength===u&&y.hemiLength===h&&y.numDirectionalShadows===p&&y.numPointShadows===f&&y.numSpotShadows===m&&y.numSpotMaps===g&&y.numLightProbes===_||(i.directional.length=l,i.spot.length=c,i.rectArea.length=u,i.point.length=d,i.hemi.length=h,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=f,i.pointShadowMap.length=f,i.spotShadow.length=m,i.spotShadowMap.length=m,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=f,i.spotLightMatrix.length=m+g-v,i.spotLightMap.length=g,i.numSpotLightShadowsWithMaps=v,i.numLightProbes=_,y.directionalLength=l,y.pointLength=d,y.spotLength=c,y.rectAreaLength=u,y.hemiLength=h,y.numDirectionalShadows=p,y.numPointShadows=f,y.numSpotShadows=m,y.numSpotMaps=g,y.numLightProbes=_,i.version=Bl++)},setupView:function(t,e){let n=0,s=0,l=0,d=0,c=0;const u=e.matrixWorldInverse;for(let e=0,h=t.length;e<h;e++){const h=t[e];if(h.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(h.matrixWorld),a.setFromMatrixPosition(h.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),n++}else if(h.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(h.matrixWorld),a.setFromMatrixPosition(h.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),l++}else if(h.isRectAreaLight){const t=i.rectArea[d];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(u),o.identity(),r.copy(h.matrixWorld),r.premultiply(u),o.extractRotation(r),t.halfWidth.set(.5*h.width,0,0),t.halfHeight.set(0,.5*h.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),d++}else if(h.isPointLight){const t=i.point[s];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(u),s++}else if(h.isHemisphereLight){const t=i.hemi[c];t.direction.setFromMatrixPosition(h.matrixWorld),t.direction.transformDirection(u),c++}}},state:i}}function Vl(t){const e=new kl(t),n=[],i=[],a={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){a.camera=t,n.length=0,i.length=0},state:a,setupLights:function(){e.setup(n)},setupLightsView:function(t){e.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){i.push(t)}}}function Hl(t){let e=new WeakMap;return{get:function(n,i=0){const a=e.get(n);let r;return void 0===a?(r=new Vl(t),e.set(n,[r])):i>=a.length?(r=new Vl(t),a.push(r)):r=a[i],r},dispose:function(){e=new WeakMap}}}class Gl extends br{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Wl extends br{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function jl(t,e,n){let i=new _o;const a=new Mi,r=new Mi,o=new Wi,s=new Gl({depthPacking:3201}),l=new Wl,d={},c=n.maxTextureSize,u={[Vt]:1,[Ht]:0,[Gt]:2},h=new eo({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Mi},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=h.clone();p.defines.HORIZONTAL_PASS=1;const f=new Or;f.setAttribute("position",new Tr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Yr(f,h),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Bt;let v=this.type;function _(n,i){const r=e.update(m);h.defines.VSM_SAMPLES!==n.blurSamples&&(h.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,h.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Xi(a.x,a.y)),h.uniforms.shadow_pass.value=n.map.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,h,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,p,m,null)}function y(e,n,i,a){let r=null;const o=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==o)r=o;else if(r=!0===i.isPointLight?l:s,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const t=r.uuid,e=n.uuid;let i=d[t];void 0===i&&(i={},d[t]=i);let a=i[e];void 0===a&&(a=r.clone(),i[e]=a,n.addEventListener("dispose",b)),r=a}return r.visible=n.visible,r.wireframe=n.wireframe,r.side=a===kt?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],r.alphaMap=n.alphaMap,r.alphaTest=n.alphaTest,r.map=n.map,r.clipShadows=n.clipShadows,r.clippingPlanes=n.clippingPlanes,r.clipIntersection=n.clipIntersection,r.displacementMap=n.displacementMap,r.displacementScale=n.displacementScale,r.displacementBias=n.displacementBias,r.wireframeLinewidth=n.wireframeLinewidth,r.linewidth=n.linewidth,!0===i.isPointLight&&!0===r.isMeshDistanceMaterial&&(t.properties.get(r).light=i),r}function x(n,a,r,o,s){if(!1===n.visible)return;if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&s===kt)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=e.update(n),l=n.material;if(Array.isArray(l)){const e=i.groups;for(let d=0,c=e.length;d<c;d++){const c=e[d],u=l[c.materialIndex];if(u&&u.visible){const e=y(n,u,o,s);n.onBeforeShadow(t,n,a,r,i,e,c),t.renderBufferDirect(r,null,i,e,n,c),n.onAfterShadow(t,n,a,r,i,e,c)}}}else if(l.visible){const e=y(n,l,o,s);n.onBeforeShadow(t,n,a,r,i,e,null),t.renderBufferDirect(r,null,i,e,n,null),n.onAfterShadow(t,n,a,r,i,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)x(l[t],a,r,o,s)}function b(t){t.target.removeEventListener("dispose",b);for(const e in d){const n=d[e],i=t.target.uuid;i in n&&(n[i].dispose(),delete n[i])}}this.render=function(e,n,s){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),d=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),h=t.state;h.setBlending(0),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);const p=v!==kt&&this.type===kt,f=v===kt&&this.type!==kt;for(let l=0,d=e.length;l<d;l++){const d=e[l],u=d.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",d,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;a.copy(u.mapSize);const m=u.getFrameExtents();if(a.multiply(m),r.copy(u.mapSize),(a.x>c||a.y>c)&&(a.x>c&&(r.x=Math.floor(c/m.x),a.x=r.x*m.x,u.mapSize.x=r.x),a.y>c&&(r.y=Math.floor(c/m.y),a.y=r.y*m.y,u.mapSize.y=r.y)),null===u.map||!0===p||!0===f){const t=this.type!==kt?{minFilter:Ie,magFilter:Ie}:{};null!==u.map&&u.map.dispose(),u.map=new Xi(a.x,a.y,t),u.map.texture.name=d.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const g=u.getViewportCount();for(let t=0;t<g;t++){const e=u.getViewport(t);o.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),h.viewport(o),u.updateMatrices(d,t),i=u.getFrustum(),x(n,s,u.camera,d,this.type)}!0!==u.isPointLightShadow&&this.type===kt&&_(u,s),u.needsUpdate=!1}v=this.type,g.needsUpdate=!1,t.setRenderTarget(l,d,u)}}const Xl={[le]:1,[ce]:6,[he]:7,[ue]:5,[de]:0,[fe]:2,[me]:4,[pe]:3};function ql(t){const e=new function(){let e=!1;const n=new Wi;let i=null;const a=new Wi(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,r,o,s){!0===s&&(e*=o,i*=o,r*=o),n.set(e,i,r,o),!1===a.equals(n)&&(t.clearColor(e,i,r,o),a.copy(n))},reset:function(){e=!1,i=null,a.set(-1,0,0,0)}}},n=new function(){let e=!1,n=!1,i=null,a=null,r=null;return{setReversed:function(t){n=t},setTest:function(e){e?z(t.DEPTH_TEST):k(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n&&(e=Xl[e]),a!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}a=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,a=null,r=null}}},i=new function(){let e=!1,n=null,i=null,a=null,r=null,o=null,s=null,l=null,d=null;return{setTest:function(n){e||(n?z(t.STENCIL_TEST):k(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,o){i===e&&a===n&&r===o||(t.stencilFunc(e,n,o),i=e,a=n,r=o)},setOp:function(e,n,i){o===e&&s===n&&l===i||(t.stencilOp(e,n,i),o=e,s=n,l=i)},setLocked:function(t){e=t},setClear:function(e){d!==e&&(t.clearStencil(e),d=e)},reset:function(){e=!1,n=null,i=null,a=null,r=null,o=null,s=null,l=null,d=null}}},a=new WeakMap,r=new WeakMap;let o={},s={},l=new WeakMap,d=[],c=null,u=!1,h=null,p=null,f=null,m=null,g=null,v=null,_=null,y=new _r(0,0,0),x=0,b=!1,M=null,S=null,E=null,T=null,w=null;const A=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let C=!1,R=0;const P=t.getParameter(t.VERSION);-1!==P.indexOf("WebGL")?(R=parseFloat(/^WebGL (\d)/.exec(P)[1]),C=R>=1):-1!==P.indexOf("OpenGL ES")&&(R=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]),C=R>=2);let D=null,L={};const I=t.getParameter(t.SCISSOR_BOX),U=t.getParameter(t.VIEWPORT),N=(new Wi).fromArray(I),O=(new Wi).fromArray(U);function F(e,n,i,a){const r=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let o=0;o<i;o++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(n,0,t.RGBA,1,1,a,0,t.RGBA,t.UNSIGNED_BYTE,r):t.texImage2D(n+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return o}const B={};function z(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function k(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}B[t.TEXTURE_2D]=F(t.TEXTURE_2D,t.TEXTURE_2D,1),B[t.TEXTURE_CUBE_MAP]=F(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),B[t.TEXTURE_2D_ARRAY]=F(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),B[t.TEXTURE_3D]=F(t.TEXTURE_3D,t.TEXTURE_3D,1,1),e.setClear(0,0,0,1),n.setClear(1),i.setClear(0),z(t.DEPTH_TEST),n.setFunc(3),W(!1),j(1),z(t.CULL_FACE),G(0);const V={[Wt]:t.FUNC_ADD,[jt]:t.FUNC_SUBTRACT,[Xt]:t.FUNC_REVERSE_SUBTRACT};V[103]=t.MIN,V[104]=t.MAX;const H={[qt]:t.ZERO,[Yt]:t.ONE,[Zt]:t.SRC_COLOR,[Jt]:t.SRC_ALPHA,[ie]:t.SRC_ALPHA_SATURATE,[ee]:t.DST_COLOR,[$t]:t.DST_ALPHA,[Kt]:t.ONE_MINUS_SRC_COLOR,[Qt]:t.ONE_MINUS_SRC_ALPHA,[ne]:t.ONE_MINUS_DST_COLOR,[te]:t.ONE_MINUS_DST_ALPHA,[ae]:t.CONSTANT_COLOR,[re]:t.ONE_MINUS_CONSTANT_COLOR,[oe]:t.CONSTANT_ALPHA,[se]:t.ONE_MINUS_CONSTANT_ALPHA};function G(e,n,i,a,r,o,s,l,d,c){if(0!==e){if(!1===u&&(z(t.BLEND),u=!0),5===e)r=r||n,o=o||i,s=s||a,n===p&&r===g||(t.blendEquationSeparate(V[n],V[r]),p=n,g=r),i===f&&a===m&&o===v&&s===_||(t.blendFuncSeparate(H[i],H[a],H[o],H[s]),f=i,m=a,v=o,_=s),!1!==l.equals(y)&&d===x||(t.blendColor(l.r,l.g,l.b,d),y.copy(l),x=d),h=e,b=!1;else if(e!==h||c!==b){if(p===Wt&&g===Wt||(t.blendEquation(t.FUNC_ADD),p=Wt,g=Wt),c)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}f=null,m=null,v=null,_=null,y.set(0,0,0),x=0,h=e,b=c}}else!0===u&&(k(t.BLEND),u=!1)}function W(e){M!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),M=e)}function j(e){0!==e?(z(t.CULL_FACE),e!==S&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):k(t.CULL_FACE),S=e}function X(e,n,i){e?(z(t.POLYGON_OFFSET_FILL),T===n&&w===i||(t.polygonOffset(n,i),T=n,w=i)):k(t.POLYGON_OFFSET_FILL)}return{buffers:{color:e,depth:n,stencil:i},enable:z,disable:k,bindFramebuffer:function(e,n){return s[e]!==n&&(t.bindFramebuffer(e,n),s[e]=n,e===t.DRAW_FRAMEBUFFER&&(s[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(s[t.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(e,n){let i=d,a=!1;if(e){i=l.get(n),void 0===i&&(i=[],l.set(n,i));const r=e.textures;if(i.length!==r.length||i[0]!==t.COLOR_ATTACHMENT0){for(let e=0,n=r.length;e<n;e++)i[e]=t.COLOR_ATTACHMENT0+e;i.length=r.length,a=!0}}else i[0]!==t.BACK&&(i[0]=t.BACK,a=!0);a&&t.drawBuffers(i)},useProgram:function(e){return c!==e&&(t.useProgram(e),c=e,!0)},setBlending:G,setMaterial:function(a,r){2===a.side?k(t.CULL_FACE):z(t.CULL_FACE);let o=1===a.side;r&&(o=!o),W(o),1===a.blending&&!1===a.transparent?G(0):G(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.blendColor,a.blendAlpha,a.premultipliedAlpha),n.setFunc(a.depthFunc),n.setTest(a.depthTest),n.setMask(a.depthWrite),e.setMask(a.colorWrite);const s=a.stencilWrite;i.setTest(s),s&&(i.setMask(a.stencilWriteMask),i.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),i.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),X(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits),!0===a.alphaToCoverage?z(t.SAMPLE_ALPHA_TO_COVERAGE):k(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:W,setCullFace:j,setLineWidth:function(e){e!==E&&(C&&t.lineWidth(e),E=e)},setPolygonOffset:X,setScissorTest:function(e){e?z(t.SCISSOR_TEST):k(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+A-1),D!==e&&(t.activeTexture(e),D=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===D?t.TEXTURE0+A-1:D);let a=L[i];void 0===a&&(a={type:void 0,texture:void 0},L[i]=a),a.type===e&&a.texture===n||(D!==i&&(t.activeTexture(i),D=i),t.bindTexture(e,n||B[e]),a.type=e,a.texture=n)},unbindTexture:function(){const e=L[D];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let i=r.get(n);void 0===i&&(i=new WeakMap,r.set(n,i));let a=i.get(e);void 0===a&&(a=t.getUniformBlockIndex(n,e.name),i.set(e,a))},uniformBlockBinding:function(e,n){const i=r.get(n).get(e);a.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),a.set(n,i))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===N.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),N.copy(e))},viewport:function(e){!1===O.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),O.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},D=null,L={},s={},l=new WeakMap,d=[],c=null,u=!1,h=null,p=null,f=null,m=null,g=null,v=null,_=null,y=new _r(0,0,0),x=0,b=!1,M=null,S=null,E=null,T=null,w=null,N.set(0,0,t.canvas.width,t.canvas.height),O.set(0,0,t.canvas.width,t.canvas.height),e.reset(),n.reset(),i.reset()}}}function Yl(t,e,n,i){const a=function(t){switch(t){case ze:case ke:return{byteLength:1,components:1};case He:case Ve:case Xe:return{byteLength:2,components:1};case qe:case Ye:return{byteLength:2,components:4};case We:case Ge:case je:return{byteLength:4,components:1};case Ke:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(i);switch(n){case Je:case tn:return t*e;case en:return t*e*2;case rn:case on:return t*e/a.components*a.byteLength;case sn:case ln:return t*e*2/a.components*a.byteLength;case Qe:return t*e*3/a.components*a.byteLength;case $e:case dn:return t*e*4/a.components*a.byteLength;case cn:case un:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case hn:case pn:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case mn:case vn:return Math.max(t,16)*Math.max(e,8)/4;case fn:case gn:return Math.max(t,8)*Math.max(e,8)/2;case _n:case yn:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case xn:case bn:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case Mn:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case Sn:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case En:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case Tn:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case wn:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case An:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case Cn:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case Rn:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case Pn:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case Dn:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case Ln:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case In:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Un:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case Nn:case On:case Fn:return Math.ceil(t/4)*Math.ceil(e/4)*16;case Bn:case zn:return Math.ceil(t/4)*Math.ceil(e/4)*8;case kn:case Vn:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function Zl(t,e,n,i,a,r,o){const s=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),d=new Mi,c=new WeakMap;let u;const h=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function f(t,e){return p?new OffscreenCanvas(t,e):wi("canvas")}function m(t,e,n){let i=1;const a=k(t);if((a.width>n||a.height>n)&&(i=n/Math.max(a.width,a.height)),i<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const n=Math.floor(i*a.width),r=Math.floor(i*a.height);void 0===u&&(u=f(n,r));const o=e?f(n,r):u;return o.width=n,o.height=r,o.getContext("2d").drawImage(t,0,0,n,r),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+n+"x"+r+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+")."),t}return t}function g(t){return t.generateMipmaps&&t.minFilter!==Ie&&t.minFilter!==Oe}function v(e){t.generateMipmap(e)}function _(n,i,a,r,o=!1){if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let s=i;if(i===t.RED&&(a===t.FLOAT&&(s=t.R32F),a===t.HALF_FLOAT&&(s=t.R16F),a===t.UNSIGNED_BYTE&&(s=t.R8)),i===t.RED_INTEGER&&(a===t.UNSIGNED_BYTE&&(s=t.R8UI),a===t.UNSIGNED_SHORT&&(s=t.R16UI),a===t.UNSIGNED_INT&&(s=t.R32UI),a===t.BYTE&&(s=t.R8I),a===t.SHORT&&(s=t.R16I),a===t.INT&&(s=t.R32I)),i===t.RG&&(a===t.FLOAT&&(s=t.RG32F),a===t.HALF_FLOAT&&(s=t.RG16F),a===t.UNSIGNED_BYTE&&(s=t.RG8)),i===t.RG_INTEGER&&(a===t.UNSIGNED_BYTE&&(s=t.RG8UI),a===t.UNSIGNED_SHORT&&(s=t.RG16UI),a===t.UNSIGNED_INT&&(s=t.RG32UI),a===t.BYTE&&(s=t.RG8I),a===t.SHORT&&(s=t.RG16I),a===t.INT&&(s=t.RG32I)),i===t.RGB_INTEGER&&(a===t.UNSIGNED_BYTE&&(s=t.RGB8UI),a===t.UNSIGNED_SHORT&&(s=t.RGB16UI),a===t.UNSIGNED_INT&&(s=t.RGB32UI),a===t.BYTE&&(s=t.RGB8I),a===t.SHORT&&(s=t.RGB16I),a===t.INT&&(s=t.RGB32I)),i===t.RGBA_INTEGER&&(a===t.UNSIGNED_BYTE&&(s=t.RGBA8UI),a===t.UNSIGNED_SHORT&&(s=t.RGBA16UI),a===t.UNSIGNED_INT&&(s=t.RGBA32UI),a===t.BYTE&&(s=t.RGBA8I),a===t.SHORT&&(s=t.RGBA16I),a===t.INT&&(s=t.RGBA32I)),i===t.RGB&&a===t.UNSIGNED_INT_5_9_9_9_REV&&(s=t.RGB9_E5),i===t.RGBA){const e=o?Kn:Ui.getTransfer(r);a===t.FLOAT&&(s=t.RGBA32F),a===t.HALF_FLOAT&&(s=t.RGBA16F),a===t.UNSIGNED_BYTE&&(s=e===Jn?t.SRGB8_ALPHA8:t.RGBA8),a===t.UNSIGNED_SHORT_4_4_4_4&&(s=t.RGBA4),a===t.UNSIGNED_SHORT_5_5_5_1&&(s=t.RGB5_A1)}return s!==t.R16F&&s!==t.R32F&&s!==t.RG16F&&s!==t.RG32F&&s!==t.RGBA16F&&s!==t.RGBA32F||e.get("EXT_color_buffer_float"),s}function y(e,n){let i;return e?null===n||n===We||n===Ze?i=t.DEPTH24_STENCIL8:n===je?i=t.DEPTH32F_STENCIL8:n===He&&(i=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===We||n===Ze?i=t.DEPTH_COMPONENT24:n===je?i=t.DEPTH_COMPONENT32F:n===He&&(i=t.DEPTH_COMPONENT16),i}function x(t,e){return!0===g(t)||t.isFramebufferTexture&&t.minFilter!==Ie&&t.minFilter!==Oe?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function b(t){const e=t.target;e.removeEventListener("dispose",b),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,a=h.get(n);if(a){const i=a[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&S(t),0===Object.keys(a).length&&h.delete(n)}i.remove(t)}(e),e.isVideoTexture&&c.delete(e)}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=i.get(e);if(e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(n.__webglFramebuffer[e]))for(let i=0;i<n.__webglFramebuffer[e].length;i++)t.deleteFramebuffer(n.__webglFramebuffer[e][i]);else t.deleteFramebuffer(n.__webglFramebuffer[e]);n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e])}else{if(Array.isArray(n.__webglFramebuffer))for(let e=0;e<n.__webglFramebuffer.length;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const a=e.textures;for(let e=0,n=a.length;e<n;e++){const n=i.get(a[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),o.memory.textures--),i.remove(a[e])}i.remove(e)}(n)}function S(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const a=e.source;delete h.get(a)[n.__cacheKey],o.memory.textures--}let E=0;function T(e,a){const r=i.get(e);if(e.isVideoTexture&&function(t){const e=o.render.frame;c.get(t)!==e&&(c.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void D(r,e,a);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(t.TEXTURE_2D,r.__webglTexture,t.TEXTURE0+a)}const w={[Pe]:t.REPEAT,[De]:t.CLAMP_TO_EDGE,[Le]:t.MIRRORED_REPEAT},A={[Ie]:t.NEAREST,[Ue]:t.NEAREST_MIPMAP_NEAREST,[Ne]:t.NEAREST_MIPMAP_LINEAR,[Oe]:t.LINEAR,[Fe]:t.LINEAR_MIPMAP_NEAREST,[Be]:t.LINEAR_MIPMAP_LINEAR},C={[ei]:t.NEVER,[li]:t.ALWAYS,[ni]:t.LESS,[ai]:t.LEQUAL,[ii]:t.EQUAL,[si]:t.GEQUAL,[ri]:t.GREATER,[oi]:t.NOTEQUAL};function R(n,r){if(r.type!==je||!1!==e.has("OES_texture_float_linear")||r.magFilter!==Oe&&r.magFilter!==Fe&&r.magFilter!==Ne&&r.magFilter!==Be&&r.minFilter!==Oe&&r.minFilter!==Fe&&r.minFilter!==Ne&&r.minFilter!==Be||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(n,t.TEXTURE_WRAP_S,w[r.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,w[r.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,w[r.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,A[r.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,A[r.minFilter]),r.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,C[r.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(r.magFilter===Ie)return;if(r.minFilter!==Ne&&r.minFilter!==Be)return;if(r.type===je&&!1===e.has("OES_texture_float_linear"))return;if(r.anisotropy>1||i.get(r).__currentAnisotropy){const o=e.get("EXT_texture_filter_anisotropic");t.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,a.getMaxAnisotropy())),i.get(r).__currentAnisotropy=r.anisotropy}}}function P(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",b));const a=n.source;let r=h.get(a);void 0===r&&(r={},h.set(a,r));const s=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(s!==e.__cacheKey){void 0===r[s]&&(r[s]={texture:t.createTexture(),usedTimes:0},o.memory.textures++,i=!0),r[s].usedTimes++;const a=r[e.__cacheKey];void 0!==a&&(r[e.__cacheKey].usedTimes--,0===a.usedTimes&&S(n)),e.__cacheKey=s,e.__webglTexture=r[s].texture}return i}function D(e,o,s){let l=t.TEXTURE_2D;(o.isDataArrayTexture||o.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),o.isData3DTexture&&(l=t.TEXTURE_3D);const d=P(e,o),c=o.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+s);const u=i.get(c);if(c.version!==u.__version||!0===d){n.activeTexture(t.TEXTURE0+s);const e=Ui.getPrimaries(Ui.workingColorSpace),i=o.colorSpace===jn?null:Ui.getPrimaries(o.colorSpace),h=o.colorSpace===jn||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,o.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,o.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);let p=m(o.image,!1,a.maxTextureSize);p=z(o,p);const f=r.convert(o.format,o.colorSpace),b=r.convert(o.type);let M,S=_(o.internalFormat,f,b,o.colorSpace,o.isVideoTexture);R(l,o);const E=o.mipmaps,T=!0!==o.isVideoTexture,w=void 0===u.__version||!0===d,A=c.dataReady,C=x(o,p);if(o.isDepthTexture)S=y(o.format===an,o.type),w&&(T?n.texStorage2D(t.TEXTURE_2D,1,S,p.width,p.height):n.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,f,b,null));else if(o.isDataTexture)if(E.length>0){T&&w&&n.texStorage2D(t.TEXTURE_2D,C,S,E[0].width,E[0].height);for(let e=0,i=E.length;e<i;e++)M=E[e],T?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,M.width,M.height,f,b,M.data):n.texImage2D(t.TEXTURE_2D,e,S,M.width,M.height,0,f,b,M.data);o.generateMipmaps=!1}else T?(w&&n.texStorage2D(t.TEXTURE_2D,C,S,p.width,p.height),A&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,p.width,p.height,f,b,p.data)):n.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,f,b,p.data);else if(o.isCompressedTexture)if(o.isCompressedArrayTexture){T&&w&&n.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,E[0].width,E[0].height,p.depth);for(let e=0,i=E.length;e<i;e++)if(M=E[e],o.format!==$e)if(null!==f)if(T){if(A)if(o.layerUpdates.size>0){const i=Yl(M.width,M.height,o.format,o.type);for(const a of o.layerUpdates){const r=M.data.subarray(a*i/M.data.BYTES_PER_ELEMENT,(a+1)*i/M.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,a,M.width,M.height,1,f,r,0,0)}o.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,M.width,M.height,p.depth,f,M.data,0,0)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,S,M.width,M.height,p.depth,0,M.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else T?A&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,M.width,M.height,p.depth,f,b,M.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,S,M.width,M.height,p.depth,0,f,b,M.data)}else{T&&w&&n.texStorage2D(t.TEXTURE_2D,C,S,E[0].width,E[0].height);for(let e=0,i=E.length;e<i;e++)M=E[e],o.format!==$e?null!==f?T?A&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,M.width,M.height,f,M.data):n.compressedTexImage2D(t.TEXTURE_2D,e,S,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,M.width,M.height,f,b,M.data):n.texImage2D(t.TEXTURE_2D,e,S,M.width,M.height,0,f,b,M.data)}else if(o.isDataArrayTexture)if(T){if(w&&n.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,p.width,p.height,p.depth),A)if(o.layerUpdates.size>0){const e=Yl(p.width,p.height,o.format,o.type);for(const i of o.layerUpdates){const a=p.data.subarray(i*e/p.data.BYTES_PER_ELEMENT,(i+1)*e/p.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,i,p.width,p.height,1,f,b,a)}o.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,f,b,p.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,S,p.width,p.height,p.depth,0,f,b,p.data);else if(o.isData3DTexture)T?(w&&n.texStorage3D(t.TEXTURE_3D,C,S,p.width,p.height,p.depth),A&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,f,b,p.data)):n.texImage3D(t.TEXTURE_3D,0,S,p.width,p.height,p.depth,0,f,b,p.data);else if(o.isFramebufferTexture){if(w)if(T)n.texStorage2D(t.TEXTURE_2D,C,S,p.width,p.height);else{let e=p.width,i=p.height;for(let a=0;a<C;a++)n.texImage2D(t.TEXTURE_2D,a,S,e,i,0,f,b,null),e>>=1,i>>=1}}else if(E.length>0){if(T&&w){const e=k(E[0]);n.texStorage2D(t.TEXTURE_2D,C,S,e.width,e.height)}for(let e=0,i=E.length;e<i;e++)M=E[e],T?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,f,b,M):n.texImage2D(t.TEXTURE_2D,e,S,f,b,M);o.generateMipmaps=!1}else if(T){if(w){const e=k(p);n.texStorage2D(t.TEXTURE_2D,C,S,e.width,e.height)}A&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,f,b,p)}else n.texImage2D(t.TEXTURE_2D,0,S,f,b,p);g(o)&&v(l),u.__version=c.version,o.onUpdate&&o.onUpdate(o)}e.__version=o.version}function L(e,a,o,l,d,c){const u=r.convert(o.format,o.colorSpace),h=r.convert(o.type),p=_(o.internalFormat,u,h,o.colorSpace);if(!i.get(a).__hasExternalTextures){const e=Math.max(1,a.width>>c),i=Math.max(1,a.height>>c);d===t.TEXTURE_3D||d===t.TEXTURE_2D_ARRAY?n.texImage3D(d,c,p,e,i,a.depth,0,u,h,null):n.texImage2D(d,c,p,e,i,0,u,h,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),B(a)?s.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,d,i.get(o).__webglTexture,0,F(a)):(d===t.TEXTURE_2D||d>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&d<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,d,i.get(o).__webglTexture,c),n.bindFramebuffer(t.FRAMEBUFFER,null)}function I(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer){const a=n.depthTexture,r=a&&a.isDepthTexture?a.type:null,o=y(n.stencilBuffer,r),l=n.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,d=F(n);B(n)?s.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,d,o,n.width,n.height):i?t.renderbufferStorageMultisample(t.RENDERBUFFER,d,o,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,o,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=n.textures;for(let a=0;a<e.length;a++){const o=e[a],l=r.convert(o.format,o.colorSpace),d=r.convert(o.type),c=_(o.internalFormat,l,d,o.colorSpace),u=F(n);i&&!1===B(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,u,c,n.width,n.height):B(n)?s.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,u,c,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,c,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function U(e){const a=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(a.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(a.__depthDisposeCallback&&a.__depthDisposeCallback(),t){const e=()=>{delete a.__boundDepthTexture,delete a.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),a.__depthDisposeCallback=e}a.__boundDepthTexture=t}if(e.depthTexture&&!a.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,a){if(a&&a.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!a.depthTexture||!a.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(a.depthTexture).__webglTexture&&a.depthTexture.image.width===a.width&&a.depthTexture.image.height===a.height||(a.depthTexture.image.width=a.width,a.depthTexture.image.height=a.height,a.depthTexture.needsUpdate=!0),T(a.depthTexture,0);const r=i.get(a.depthTexture).__webglTexture,o=F(a);if(a.depthTexture.format===nn)B(a)?s.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0,o):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(a.depthTexture.format!==an)throw new Error("Unknown depthTexture format");B(a)?s.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0,o):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(a.__webglFramebuffer,e)}else if(r){a.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer[i]),void 0===a.__webglDepthbuffer[i])a.__webglDepthbuffer[i]=t.createRenderbuffer(),I(a.__webglDepthbuffer[i],e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,r=a.__webglDepthbuffer[i];t.bindRenderbuffer(t.RENDERBUFFER,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,r)}}else if(n.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer),void 0===a.__webglDepthbuffer)a.__webglDepthbuffer=t.createRenderbuffer(),I(a.__webglDepthbuffer,e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,i=a.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,i)}n.bindFramebuffer(t.FRAMEBUFFER,null)}const N=[],O=[];function F(t){return Math.min(a.maxSamples,t.samples)}function B(t){const n=i.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function z(t,e){const n=t.colorSpace,i=t.format,a=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||n!==qn&&n!==jn&&(Ui.getTransfer(n)===Jn?i===$e&&a===ze||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),e}function k(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(d.width=t.naturalWidth||t.width,d.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(d.width=t.displayWidth,d.height=t.displayHeight):(d.width=t.width,d.height=t.height),d}this.allocateTextureUnit=function(){const t=E;return t>=a.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+a.maxTextures),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=T,this.setTexture2DArray=function(e,a){const r=i.get(e);e.version>0&&r.__version!==e.version?D(r,e,a):n.bindTexture(t.TEXTURE_2D_ARRAY,r.__webglTexture,t.TEXTURE0+a)},this.setTexture3D=function(e,a){const r=i.get(e);e.version>0&&r.__version!==e.version?D(r,e,a):n.bindTexture(t.TEXTURE_3D,r.__webglTexture,t.TEXTURE0+a)},this.setTextureCube=function(e,o){const s=i.get(e);e.version>0&&s.__version!==e.version?function(e,o,s){if(6!==o.image.length)return;const l=P(e,o),d=o.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+s);const c=i.get(d);if(d.version!==c.__version||!0===l){n.activeTexture(t.TEXTURE0+s);const e=Ui.getPrimaries(Ui.workingColorSpace),i=o.colorSpace===jn?null:Ui.getPrimaries(o.colorSpace),u=o.colorSpace===jn||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,o.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,o.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);const h=o.isCompressedTexture||o.image[0].isCompressedTexture,p=o.image[0]&&o.image[0].isDataTexture,f=[];for(let t=0;t<6;t++)f[t]=h||p?p?o.image[t].image:o.image[t]:m(o.image[t],!0,a.maxCubemapSize),f[t]=z(o,f[t]);const y=f[0],b=r.convert(o.format,o.colorSpace),M=r.convert(o.type),S=_(o.internalFormat,b,M,o.colorSpace),E=!0!==o.isVideoTexture,T=void 0===c.__version||!0===l,w=d.dataReady;let A,C=x(o,y);if(R(t.TEXTURE_CUBE_MAP,o),h){E&&T&&n.texStorage2D(t.TEXTURE_CUBE_MAP,C,S,y.width,y.height);for(let e=0;e<6;e++){A=f[e].mipmaps;for(let i=0;i<A.length;i++){const a=A[i];o.format!==$e?null!==b?E?w&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,a.width,a.height,b,a.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,S,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,a.width,a.height,b,M,a.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,S,a.width,a.height,0,b,M,a.data)}}}else{if(A=o.mipmaps,E&&T){A.length>0&&C++;const e=k(f[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,C,S,e.width,e.height)}for(let e=0;e<6;e++)if(p){E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,f[e].width,f[e].height,b,M,f[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,f[e].width,f[e].height,0,b,M,f[e].data);for(let i=0;i<A.length;i++){const a=A[i].image[e].image;E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,a.width,a.height,b,M,a.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,S,a.width,a.height,0,b,M,a.data)}}else{E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,b,M,f[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,b,M,f[e]);for(let i=0;i<A.length;i++){const a=A[i];E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,b,M,a.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,S,b,M,a.image[e])}}}g(o)&&v(t.TEXTURE_CUBE_MAP),c.__version=d.version,o.onUpdate&&o.onUpdate(o)}e.__version=o.version}(s,e,o):n.bindTexture(t.TEXTURE_CUBE_MAP,s.__webglTexture,t.TEXTURE0+o)},this.rebindTextures=function(e,n,a){const r=i.get(e);void 0!==n&&L(r.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==a&&U(e)},this.setupRenderTarget=function(e){const a=e.texture,s=i.get(e),l=i.get(a);e.addEventListener("dispose",M);const d=e.textures,c=!0===e.isWebGLCubeRenderTarget,u=d.length>1;if(u||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=a.version,o.memory.textures++),c){s.__webglFramebuffer=[];for(let e=0;e<6;e++)if(a.mipmaps&&a.mipmaps.length>0){s.__webglFramebuffer[e]=[];for(let n=0;n<a.mipmaps.length;n++)s.__webglFramebuffer[e][n]=t.createFramebuffer()}else s.__webglFramebuffer[e]=t.createFramebuffer()}else{if(a.mipmaps&&a.mipmaps.length>0){s.__webglFramebuffer=[];for(let e=0;e<a.mipmaps.length;e++)s.__webglFramebuffer[e]=t.createFramebuffer()}else s.__webglFramebuffer=t.createFramebuffer();if(u)for(let e=0,n=d.length;e<n;e++){const n=i.get(d[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),o.memory.textures++)}if(e.samples>0&&!1===B(e)){s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,s.__webglMultisampledFramebuffer);for(let n=0;n<d.length;n++){const i=d[n];s.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,s.__webglColorRenderbuffer[n]);const a=r.convert(i.format,i.colorSpace),o=r.convert(i.type),l=_(i.internalFormat,a,o,i.colorSpace,!0===e.isXRRenderTarget),c=F(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,c,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,s.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),I(s.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(c){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),R(t.TEXTURE_CUBE_MAP,a);for(let n=0;n<6;n++)if(a.mipmaps&&a.mipmaps.length>0)for(let i=0;i<a.mipmaps.length;i++)L(s.__webglFramebuffer[n][i],e,a,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else L(s.__webglFramebuffer[n],e,a,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);g(a)&&v(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(u){for(let a=0,r=d.length;a<r;a++){const r=d[a],o=i.get(r);n.bindTexture(t.TEXTURE_2D,o.__webglTexture),R(t.TEXTURE_2D,r),L(s.__webglFramebuffer,e,r,t.COLOR_ATTACHMENT0+a,t.TEXTURE_2D,0),g(r)&&v(t.TEXTURE_2D)}n.unbindTexture()}else{let i=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),R(i,a),a.mipmaps&&a.mipmaps.length>0)for(let n=0;n<a.mipmaps.length;n++)L(s.__webglFramebuffer[n],e,a,t.COLOR_ATTACHMENT0,i,n);else L(s.__webglFramebuffer,e,a,t.COLOR_ATTACHMENT0,i,0);g(a)&&v(i),n.unbindTexture()}e.depthBuffer&&U(e)},this.updateRenderTargetMipmap=function(e){const a=e.textures;for(let r=0,o=a.length;r<o;r++){const o=a[r];if(g(o)){const a=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,r=i.get(o).__webglTexture;n.bindTexture(a,r),v(a),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===B(e)){const a=e.textures,r=e.width,o=e.height;let s=t.COLOR_BUFFER_BIT;const d=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=i.get(e),u=a.length>1;if(u)for(let e=0;e<a.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,c.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let n=0;n<a.length;n++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(s|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(s|=t.STENCIL_BUFFER_BIT)),u){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const e=i.get(a[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,r,o,0,0,r,o,s,t.NEAREST),!0===l&&(N.length=0,O.length=0,N.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&!1===e.resolveDepthBuffer&&(N.push(d),O.push(d),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,O)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,N))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),u)for(let e=0;e<a.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,c.__webglColorRenderbuffer[e]);const r=i.get(a[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,c.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,r,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=U,this.setupFrameBufferTexture=L,this.useMultisampledRTT=B}function Kl(t,e){return{convert:function(n,i=""){let a;const r=Ui.getTransfer(i);if(n===ze)return t.UNSIGNED_BYTE;if(n===qe)return t.UNSIGNED_SHORT_4_4_4_4;if(n===Ye)return t.UNSIGNED_SHORT_5_5_5_1;if(n===Ke)return t.UNSIGNED_INT_5_9_9_9_REV;if(n===ke)return t.BYTE;if(n===Ve)return t.SHORT;if(n===He)return t.UNSIGNED_SHORT;if(n===Ge)return t.INT;if(n===We)return t.UNSIGNED_INT;if(n===je)return t.FLOAT;if(n===Xe)return t.HALF_FLOAT;if(n===Je)return t.ALPHA;if(n===Qe)return t.RGB;if(n===$e)return t.RGBA;if(n===tn)return t.LUMINANCE;if(n===en)return t.LUMINANCE_ALPHA;if(n===nn)return t.DEPTH_COMPONENT;if(n===an)return t.DEPTH_STENCIL;if(n===rn)return t.RED;if(n===on)return t.RED_INTEGER;if(n===sn)return t.RG;if(n===ln)return t.RG_INTEGER;if(n===dn)return t.RGBA_INTEGER;if(n===cn||n===un||n===hn||n===pn)if(r===Jn){if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===cn)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===un)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===hn)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===pn)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=e.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===cn)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===un)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===hn)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===pn)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===fn||n===mn||n===gn||n===vn){if(a=e.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(n===fn)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===mn)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===gn)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===vn)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===_n||n===yn||n===xn){if(a=e.get("WEBGL_compressed_texture_etc"),null===a)return null;if(n===_n||n===yn)return r===Jn?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===xn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(n===bn||n===Mn||n===Sn||n===En||n===Tn||n===wn||n===An||n===Cn||n===Rn||n===Pn||n===Dn||n===Ln||n===In||n===Un){if(a=e.get("WEBGL_compressed_texture_astc"),null===a)return null;if(n===bn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Mn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Sn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===En)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Tn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===wn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===An)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Cn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Rn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Pn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Dn)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ln)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===In)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Un)return r===Jn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Nn||n===On||n===Fn){if(a=e.get("EXT_texture_compression_bptc"),null===a)return null;if(n===Nn)return r===Jn?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===On)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Fn)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===Bn||n===zn||n===kn||n===Vn){if(a=e.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===Nn)return a.COMPRESSED_RED_RGTC1_EXT;if(n===zn)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===kn)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Vn)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===Ze?t.UNSIGNED_INT_24_8:void 0!==t[n]?t[n]:null}}}class Jl extends oo{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Ql extends $a{constructor(){super(),this.isGroup=!0,this.type="Group"}}const $l={type:"move"};class td{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Ql,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Ql,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ki,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ki),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Ql,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ki,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ki),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,a=null,r=null;const o=this._targetRay,s=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){r=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n),a=this._getHandJoint(l,i);null!==t&&(a.matrix.fromArray(t.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,a.jointRadius=t.radius),a.visible=null!==t}const i=l.joints["index-finger-tip"],a=l.joints["thumb-tip"],o=i.position.distanceTo(a.position),s=.02,d=.005;l.inputState.pinching&&o>s+d?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&o<=s-d&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==s&&t.gripSpace&&(a=e.getPose(t.gripSpace,n),null!==a&&(s.matrix.fromArray(a.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,a.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(a.linearVelocity)):s.hasLinearVelocity=!1,a.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(a.angularVelocity)):s.hasAngularVelocity=!1));null!==o&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==a&&(i=a),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent($l)))}return null!==o&&(o.visible=null!==i),null!==s&&(s.visible=null!==a),null!==l&&(l.visible=null!==r),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new Ql;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class ed{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(null===this.texture){const i=new Gi;t.properties.get(i).__webglTexture=e.texture,e.depthNear==n.depthNear&&e.depthFar==n.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,n=new eo({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Yr(new bo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class nd extends pi{constructor(t,e){super();const n=this;let i=null,a=1,r=null,o="local-floor",s=1,l=null,d=null,c=null,u=null,h=null,p=null;const f=new ed,m=e.getContextAttributes();let g=null,v=null;const _=[],y=[],x=new Mi;let b=null;const M=new oo;M.layers.enable(1),M.viewport=new Wi;const S=new oo;S.layers.enable(2),S.viewport=new Wi;const E=[M,S],T=new Jl;T.layers.enable(1),T.layers.enable(2);let w=null,A=null;function C(t){const e=y.indexOf(t.inputSource);if(-1===e)return;const n=_[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||r),n.dispatchEvent({type:t.type,data:t.inputSource}))}function R(){i.removeEventListener("select",C),i.removeEventListener("selectstart",C),i.removeEventListener("selectend",C),i.removeEventListener("squeeze",C),i.removeEventListener("squeezestart",C),i.removeEventListener("squeezeend",C),i.removeEventListener("end",R),i.removeEventListener("inputsourceschange",P);for(let t=0;t<_.length;t++){const e=y[t];null!==e&&(y[t]=null,_[t].disconnect(e))}w=null,A=null,f.reset(),t.setRenderTarget(g),h=null,u=null,c=null,i=null,v=null,N.stop(),n.isPresenting=!1,t.setPixelRatio(b),t.setSize(x.width,x.height,!1),n.dispatchEvent({type:"sessionend"})}function P(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=y.indexOf(n);i>=0&&(y[i]=null,_[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=y.indexOf(n);if(-1===i){for(let t=0;t<_.length;t++){if(t>=y.length){y.push(n),i=t;break}if(null===y[t]){y[t]=n,i=t;break}}if(-1===i)break}const a=_[i];a&&a.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=_[t];return void 0===e&&(e=new td,_[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=_[t];return void 0===e&&(e=new td,_[t]=e),e.getGripSpace()},this.getHand=function(t){let e=_[t];return void 0===e&&(e=new td,_[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||r},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==u?u:h},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(d){if(i=d,null!==i){if(g=t.getRenderTarget(),i.addEventListener("select",C),i.addEventListener("selectstart",C),i.addEventListener("selectend",C),i.addEventListener("squeeze",C),i.addEventListener("squeezestart",C),i.addEventListener("squeezeend",C),i.addEventListener("end",R),i.addEventListener("inputsourceschange",P),!0!==m.xrCompatible&&await e.makeXRCompatible(),b=t.getPixelRatio(),t.getSize(x),void 0===i.renderState.layers){const n={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:a};h=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:h}),t.setPixelRatio(1),t.setSize(h.framebufferWidth,h.framebufferHeight,!1),v=new Xi(h.framebufferWidth,h.framebufferHeight,{format:$e,type:ze,colorSpace:t.outputColorSpace,stencilBuffer:m.stencil})}else{let n=null,r=null,o=null;m.depth&&(o=m.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=m.stencil?an:nn,r=m.stencil?Ze:We);const s={colorFormat:e.RGBA8,depthFormat:o,scaleFactor:a};c=new XRWebGLBinding(i,e),u=c.createProjectionLayer(s),i.updateRenderState({layers:[u]}),t.setPixelRatio(1),t.setSize(u.textureWidth,u.textureHeight,!1),v=new Xi(u.textureWidth,u.textureHeight,{format:$e,type:ze,depthTexture:new is(u.textureWidth,u.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:t.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues})}v.isXRRenderTarget=!0,this.setFoveation(s),l=null,r=await i.requestReferenceSpace(o),N.setContext(i),N.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};const D=new Ki,L=new Ki;function I(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;let e=t.near,n=t.far;null!==f.texture&&(f.depthNear>0&&(e=f.depthNear),f.depthFar>0&&(n=f.depthFar)),T.near=S.near=M.near=e,T.far=S.far=M.far=n,w===T.near&&A===T.far||(i.updateRenderState({depthNear:T.near,depthFar:T.far}),w=T.near,A=T.far);const a=t.parent,r=T.cameras;I(T,a);for(let t=0;t<r.length;t++)I(r[t],a);2===r.length?function(t,e,n){D.setFromMatrixPosition(e.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const i=D.distanceTo(L),a=e.projectionMatrix.elements,r=n.projectionMatrix.elements,o=a[14]/(a[10]-1),s=a[14]/(a[10]+1),l=(a[9]+1)/a[5],d=(a[9]-1)/a[5],c=(a[8]-1)/a[0],u=(r[8]+1)/r[0],h=o*c,p=o*u,f=i/(-c+u),m=f*-c;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===a[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=o+f,n=s+f,a=h-m,r=p+(i-m),c=l*s/n*e,u=d*s/n*e;t.projectionMatrix.makePerspective(a,r,c,u,e,n),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(T,M,S):T.projectionMatrix.copy(M.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld)),t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*gi*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,T,a)},this.getCamera=function(){return T},this.getFoveation=function(){if(null!==u||null!==h)return s},this.setFoveation=function(t){s=t,null!==u&&(u.fixedFoveation=t),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(T)};let U=null;const N=new yo;N.setAnimationLoop((function(e,a){if(d=a.getViewerPose(l||r),p=a,null!==d){const e=d.views;null!==h&&(t.setRenderTargetFramebuffer(v,h.framebuffer),t.setRenderTarget(v));let n=!1;e.length!==T.cameras.length&&(T.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const a=e[i];let r=null;if(null!==h)r=h.getViewport(a);else{const e=c.getViewSubImage(u,a);r=e.viewport,0===i&&(t.setRenderTargetTextures(v,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(v))}let o=E[i];void 0===o&&(o=new oo,o.layers.enable(i),o.viewport=new Wi,E[i]=o),o.matrix.fromArray(a.transform.matrix),o.matrix.decompose(o.position,o.quaternion,o.scale),o.projectionMatrix.fromArray(a.projectionMatrix),o.projectionMatrixInverse.copy(o.projectionMatrix).invert(),o.viewport.set(r.x,r.y,r.width,r.height),0===i&&(T.matrix.copy(o.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),!0===n&&T.cameras.push(o)}const a=i.enabledFeatures;if(a&&a.includes("depth-sensing")){const n=c.getDepthInformation(e[0]);n&&n.isValid&&n.texture&&f.init(t,n,i.renderState)}}for(let t=0;t<_.length;t++){const e=y[t],n=_[t];null!==e&&void 0!==n&&n.update(e,a,l||r)}U&&U(e,a),a.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:a}),p=null})),this.setAnimationLoop=function(t){U=t},this.dispose=function(){}}}const id=new Oa,ad=new wa;function rd(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map,n(i.map,t.mapTransform)),i.alphaMap&&(t.alphaMap.value=i.alphaMap,n(i.alphaMap,t.alphaMapTransform)),i.bumpMap&&(t.bumpMap.value=i.bumpMap,n(i.bumpMap,t.bumpMapTransform),t.bumpScale.value=i.bumpScale,1===i.side&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,n(i.normalMap,t.normalMapTransform),t.normalScale.value.copy(i.normalScale),1===i.side&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,n(i.displacementMap,t.displacementMapTransform),t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,t.emissiveMapTransform)),i.specularMap&&(t.specularMap.value=i.specularMap,n(i.specularMap,t.specularMapTransform)),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);const a=e.get(i),r=a.envMap,o=a.envMapRotation;r&&(t.envMap.value=r,id.copy(o),id.x*=-1,id.y*=-1,id.z*=-1,r.isCubeTexture&&!1===r.isRenderTargetTexture&&(id.y*=-1,id.z*=-1),t.envMapRotation.value.setFromMatrix4(ad.makeRotationFromEuler(id)),t.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,t.lightMapTransform)),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,$r(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,a,r,o,s){a.isMeshBasicMaterial||a.isMeshLambertMaterial?i(t,a):a.isMeshToonMaterial?(i(t,a),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,a)):a.isMeshPhongMaterial?(i(t,a),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,a)):a.isMeshStandardMaterial?(i(t,a),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,n(e.metalnessMap,t.metalnessMapTransform)),t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,n(e.roughnessMap,t.roughnessMapTransform)),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,a),a.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform))),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),1===e.side&&t.clearcoatNormalScale.value.negate())),e.dispersion>0&&(t.dispersion.value=e.dispersion),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform))),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform))),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform)),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,a,s)):a.isMeshMatcapMaterial?(i(t,a),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,a)):a.isMeshDepthMaterial?i(t,a):a.isMeshDistanceMaterial?(i(t,a),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,a)):a.isMeshNormalMaterial?i(t,a):a.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,a),a.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,a)):a.isPointsMaterial?function(t,e,i,a){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*a,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,a,r,o):a.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,a):a.isShadowMaterial?(t.color.value.copy(a.color),t.opacity.value=a.opacity):a.isShaderMaterial&&(a.uniformsNeedUpdate=!1)}}}function od(t,e,n,i){let a={},r={},o=[];const s=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,n,i){const a=t.value,r=e+"_"+n;if(void 0===i[r])return i[r]="number"==typeof a||"boolean"==typeof a?a:a.clone(),!0;{const t=i[r];if("number"==typeof a||"boolean"==typeof a){if(t!==a)return i[r]=a,!0}else if(!1===t.equals(a))return t.copy(a),!0}return!1}function d(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function c(e){const n=e.target;n.removeEventListener("dispose",c);const i=o.indexOf(n.__bindingPointIndex);o.splice(i,1),t.deleteBuffer(a[n.id]),delete a[n.id],delete r[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,u){let h=a[n.id];void 0===h&&(function(t){const e=t.uniforms;let n=0;for(let t=0,i=e.length;t<i;t++){const i=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=i.length;t<e;t++){const e=i[t],a=Array.isArray(e.value)?e.value:[e.value];for(let t=0,i=a.length;t<i;t++){const i=d(a[t]),r=n%16,o=r%i.boundary,s=r+o;n+=o,0!==s&&16-s<i.storage&&(n+=16-s),e.__data=new Float32Array(i.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=n,n+=i.storage}}}const i=n%16;i>0&&(n+=16-i),t.__size=n,t.__cache={}}(n),h=function(e){const n=function(){for(let t=0;t<s;t++)if(-1===o.indexOf(t))return o.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const i=t.createBuffer(),a=e.__size,r=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,a,r),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),a[n.id]=h,n.addEventListener("dispose",c));const p=u.program;i.updateUBOMapping(n,p);const f=e.render.frame;r[n.id]!==f&&(function(e){const n=a[e.id],i=e.uniforms,r=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let e=0,n=i.length;e<n;e++){const n=Array.isArray(i[e])?i[e]:[i[e]];for(let i=0,a=n.length;i<a;i++){const a=n[i];if(!0===l(a,e,i,r)){const e=a.__offset,n=Array.isArray(a.value)?a.value:[a.value];let i=0;for(let r=0;r<n.length;r++){const o=n[r],s=d(o);"number"==typeof o||"boolean"==typeof o?(a.__data[0]=o,t.bufferSubData(t.UNIFORM_BUFFER,e+i,a.__data)):o.isMatrix3?(a.__data[0]=o.elements[0],a.__data[1]=o.elements[1],a.__data[2]=o.elements[2],a.__data[3]=0,a.__data[4]=o.elements[3],a.__data[5]=o.elements[4],a.__data[6]=o.elements[5],a.__data[7]=0,a.__data[8]=o.elements[6],a.__data[9]=o.elements[7],a.__data[10]=o.elements[8],a.__data[11]=0):(o.toArray(a.__data,i),i+=s.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,a.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),r[n.id]=f)},dispose:function(){for(const e in a)t.deleteBuffer(a[e]);o=[],a={},r={}}}}class sd{constructor(t={}){const{canvas:e=Ai(),context:n=null,depth:i=!0,stencil:a=!1,alpha:r=!1,antialias:o=!1,premultipliedAlpha:s=!0,preserveDrawingBuffer:l=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:c=!1}=t;let u;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!=typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");u=n.getContextAttributes().alpha}else u=r;const h=new Uint32Array(4),p=new Int32Array(4);let f=null,m=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Xn,this.toneMapping=ye,this.toneMappingExposure=1;const _=this;let y=!1,x=0,b=0,M=null,S=-1,E=null;const T=new Wi,w=new Wi;let A=null;const C=new _r(0);let R=0,P=e.width,D=e.height,L=1,I=null,U=null;const N=new Wi(0,0,P,D),O=new Wi(0,0,P,D);let F=!1;const B=new _o;let z=!1,k=!1;const V=new wa,H=new wa,G=new Ki,W=new Wi,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let X=!1;function q(){return null===M?L:1}let Y,Z,K,J,Q,$,tt,et,nt,it,at,rt,ot,st,lt,dt,ct,ut,ht,pt,ft,mt,gt,vt,_t=n;function yt(t,n){return e.getContext(t,n)}try{const t={alpha:!0,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:d,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ft}`),e.addEventListener("webglcontextlost",Mt,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",Et,!1),null===_t){const e="webgl2";if(_t=yt(e,t),null===_t)throw yt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function xt(){Y=new Jo(_t),Y.init(),mt=new Kl(_t,Y),Z=new Do(_t,Y,t,mt),K=new ql(_t),Z.reverseDepthBuffer&&K.buffers.depth.setReversed(!0),J=new ts(_t),Q=new Ll,$=new Zl(_t,Y,K,Q,Z,mt,J),tt=new Io(_),et=new Ko(_),nt=new xo(_t),gt=new Ro(_t,nt),it=new Qo(_t,nt,J,gt),at=new ns(_t,it,nt,J),ht=new es(_t,Z,$),dt=new Lo(Q),rt=new Dl(_,tt,et,Y,Z,gt,dt),ot=new rd(_,Q),st=new Ol,lt=new Hl(Y),ut=new Co(_,tt,et,K,at,u,s),ct=new jl(_,at,Z),vt=new od(_t,J,Z,K),pt=new Po(_t,Y,J),ft=new $o(_t,Y,J),J.programs=rt.programs,_.capabilities=Z,_.extensions=Y,_.properties=Q,_.renderLists=st,_.shadowMap=ct,_.state=K,_.info=J}xt();const bt=new nd(_,_t);function Mt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const t=J.autoReset,e=ct.enabled,n=ct.autoUpdate,i=ct.needsUpdate,a=ct.type;xt(),J.autoReset=t,ct.enabled=e,ct.autoUpdate=n,ct.needsUpdate=i,ct.type=a}function Et(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Tt(t){const e=t.target;e.removeEventListener("dispose",Tt),function(t){(function(t){const e=Q.get(t).programs;void 0!==e&&(e.forEach((function(t){rt.releaseProgram(t)})),t.isShaderMaterial&&rt.releaseShaderCache(t))})(t),Q.remove(t)}(e)}function wt(t,e,n){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=1,t.needsUpdate=!0,Ot(t,e,n),t.side=0,t.needsUpdate=!0,Ot(t,e,n),t.side=2):Ot(t,e,n)}this.xr=bt,this.getContext=function(){return _t},this.getContextAttributes=function(){return _t.getContextAttributes()},this.forceContextLoss=function(){const t=Y.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Y.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(t){void 0!==t&&(L=t,this.setSize(P,D,!1))},this.getSize=function(t){return t.set(P,D)},this.setSize=function(t,n,i=!0){bt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(P=t,D=n,e.width=Math.floor(t*L),e.height=Math.floor(n*L),!0===i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(P*L,D*L).floor()},this.setDrawingBufferSize=function(t,n,i){P=t,D=n,L=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(T)},this.getViewport=function(t){return t.copy(N)},this.setViewport=function(t,e,n,i){t.isVector4?N.set(t.x,t.y,t.z,t.w):N.set(t,e,n,i),K.viewport(T.copy(N).multiplyScalar(L).round())},this.getScissor=function(t){return t.copy(O)},this.setScissor=function(t,e,n,i){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,i),K.scissor(w.copy(O).multiplyScalar(L).round())},this.getScissorTest=function(){return F},this.setScissorTest=function(t){K.setScissorTest(F=t)},this.setOpaqueSort=function(t){I=t},this.setTransparentSort=function(t){U=t},this.getClearColor=function(t){return t.copy(ut.getClearColor())},this.setClearColor=function(){ut.setClearColor.apply(ut,arguments)},this.getClearAlpha=function(){return ut.getClearAlpha()},this.setClearAlpha=function(){ut.setClearAlpha.apply(ut,arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==M){const e=M.texture.format;t=e===dn||e===ln||e===on}if(t){const t=M.texture.type,e=t===ze||t===We||t===He||t===Ze||t===qe||t===Ye,n=ut.getClearColor(),i=ut.getClearAlpha(),a=n.r,r=n.g,o=n.b;e?(h[0]=a,h[1]=r,h[2]=o,h[3]=i,_t.clearBufferuiv(_t.COLOR,0,h)):(p[0]=a,p[1]=r,p[2]=o,p[3]=i,_t.clearBufferiv(_t.COLOR,0,p))}else i|=_t.COLOR_BUFFER_BIT}e&&(i|=_t.DEPTH_BUFFER_BIT,_t.clearDepth(this.capabilities.reverseDepthBuffer?0:1)),n&&(i|=_t.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),_t.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Mt,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",Et,!1),st.dispose(),lt.dispose(),Q.dispose(),tt.dispose(),et.dispose(),at.dispose(),gt.dispose(),vt.dispose(),rt.dispose(),bt.dispose(),bt.removeEventListener("sessionstart",Ct),bt.removeEventListener("sessionend",Rt),Pt.stop()},this.renderBufferDirect=function(t,e,n,i,a,r){null===e&&(e=j);const o=a.isMesh&&a.matrixWorld.determinant()<0,s=function(t,e,n,i,a){!0!==e.isScene&&(e=j),$.resetTextureUnits();const r=e.fog,o=i.isMeshStandardMaterial?e.environment:null,s=null===M?_.outputColorSpace:!0===M.isXRRenderTarget?M.texture.colorSpace:qn,l=(i.isMeshStandardMaterial?et:tt).get(i.envMap||o),d=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),u=!!n.morphAttributes.position,h=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let f=ye;i.toneMapped&&(null!==M&&!0!==M.isXRRenderTarget||(f=_.toneMapping));const g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,v=void 0!==g?g.length:0,y=Q.get(i),x=m.state.lights;if(!0===z&&(!0===k||t!==E)){const e=t===E&&i.id===S;dt.setState(i,t,e)}let b=!1;i.version===y.__version?y.needsLights&&y.lightsStateVersion!==x.state.version||y.outputColorSpace!==s||a.isBatchedMesh&&!1===y.batching?b=!0:a.isBatchedMesh||!0!==y.batching?a.isBatchedMesh&&!0===y.batchingColor&&null===a.colorTexture||a.isBatchedMesh&&!1===y.batchingColor&&null!==a.colorTexture||a.isInstancedMesh&&!1===y.instancing?b=!0:a.isInstancedMesh||!0!==y.instancing?a.isSkinnedMesh&&!1===y.skinning?b=!0:a.isSkinnedMesh||!0!==y.skinning?a.isInstancedMesh&&!0===y.instancingColor&&null===a.instanceColor||a.isInstancedMesh&&!1===y.instancingColor&&null!==a.instanceColor||a.isInstancedMesh&&!0===y.instancingMorph&&null===a.morphTexture||a.isInstancedMesh&&!1===y.instancingMorph&&null!==a.morphTexture||y.envMap!==l||!0===i.fog&&y.fog!==r?b=!0:void 0===y.numClippingPlanes||y.numClippingPlanes===dt.numPlanes&&y.numIntersection===dt.numIntersection?(y.vertexAlphas!==d||y.vertexTangents!==c||y.morphTargets!==u||y.morphNormals!==h||y.morphColors!==p||y.toneMapping!==f||y.morphTargetsCount!==v)&&(b=!0):b=!0:b=!0:b=!0:b=!0:(b=!0,y.__version=i.version);let T=y.currentProgram;!0===b&&(T=Ot(i,e,a));let w=!1,A=!1,C=!1;const R=T.getUniforms(),P=y.uniforms;if(K.useProgram(T.program)&&(w=!0,A=!0,C=!0),i.id!==S&&(S=i.id,A=!0),w||E!==t){Z.reverseDepthBuffer?(V.copy(t.projectionMatrix),function(t){const e=t.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}(V),function(t){const e=t.elements;-1===e[11]?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=1-e[14])}(V),R.setValue(_t,"projectionMatrix",V)):R.setValue(_t,"projectionMatrix",t.projectionMatrix),R.setValue(_t,"viewMatrix",t.matrixWorldInverse);const e=R.map.cameraPosition;void 0!==e&&e.setValue(_t,G.setFromMatrixPosition(t.matrixWorld)),Z.logarithmicDepthBuffer&&R.setValue(_t,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(_t,"isOrthographic",!0===t.isOrthographicCamera),E!==t&&(E=t,A=!0,C=!0)}if(a.isSkinnedMesh){R.setOptional(_t,a,"bindMatrix"),R.setOptional(_t,a,"bindMatrixInverse");const t=a.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(_t,"boneTexture",t.boneTexture,$))}a.isBatchedMesh&&(R.setOptional(_t,a,"batchingTexture"),R.setValue(_t,"batchingTexture",a._matricesTexture,$),R.setOptional(_t,a,"batchingIdTexture"),R.setValue(_t,"batchingIdTexture",a._indirectTexture,$),R.setOptional(_t,a,"batchingColorTexture"),null!==a._colorsTexture&&R.setValue(_t,"batchingColorTexture",a._colorsTexture,$));const I=n.morphAttributes;var U,N;if(void 0===I.position&&void 0===I.normal&&void 0===I.color||ht.update(a,n,T),(A||y.receiveShadow!==a.receiveShadow)&&(y.receiveShadow=a.receiveShadow,R.setValue(_t,"receiveShadow",a.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),i.isMeshStandardMaterial&&null===i.envMap&&null!==e.environment&&(P.envMapIntensity.value=e.environmentIntensity),A&&(R.setValue(_t,"toneMappingExposure",_.toneMappingExposure),y.needsLights&&(N=C,(U=P).ambientLightColor.needsUpdate=N,U.lightProbe.needsUpdate=N,U.directionalLights.needsUpdate=N,U.directionalLightShadows.needsUpdate=N,U.pointLights.needsUpdate=N,U.pointLightShadows.needsUpdate=N,U.spotLights.needsUpdate=N,U.spotLightShadows.needsUpdate=N,U.rectAreaLights.needsUpdate=N,U.hemisphereLights.needsUpdate=N),r&&!0===i.fog&&ot.refreshFogUniforms(P,r),ot.refreshMaterialUniforms(P,i,L,D,m.state.transmissionRenderTarget[t.id]),ll.upload(_t,Bt(y),P,$)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(ll.upload(_t,Bt(y),P,$),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&R.setValue(_t,"center",a.center),R.setValue(_t,"modelViewMatrix",a.modelViewMatrix),R.setValue(_t,"normalMatrix",a.normalMatrix),R.setValue(_t,"modelMatrix",a.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++){const n=t[e];vt.update(n,T),vt.bind(n,T)}}return T}(t,e,n,i,a);K.setMaterial(i,o);let l=n.index,d=1;if(!0===i.wireframe){if(l=it.getWireframeAttribute(n),void 0===l)return;d=2}const c=n.drawRange,u=n.attributes.position;let h=c.start*d,p=(c.start+c.count)*d;null!==r&&(h=Math.max(h,r.start*d),p=Math.min(p,(r.start+r.count)*d)),null!==l?(h=Math.max(h,0),p=Math.min(p,l.count)):null!=u&&(h=Math.max(h,0),p=Math.min(p,u.count));const f=p-h;if(f<0||f===1/0)return;let g;gt.setup(a,i,s,n,l);let v=pt;if(null!==l&&(g=nt.get(l),v=ft,v.setIndex(g)),a.isMesh)!0===i.wireframe?(K.setLineWidth(i.wireframeLinewidth*q()),v.setMode(_t.LINES)):v.setMode(_t.TRIANGLES);else if(a.isLine){let t=i.linewidth;void 0===t&&(t=1),K.setLineWidth(t*q()),a.isLineSegments?v.setMode(_t.LINES):a.isLineLoop?v.setMode(_t.LINE_LOOP):v.setMode(_t.LINE_STRIP)}else a.isPoints?v.setMode(_t.POINTS):a.isSprite&&v.setMode(_t.TRIANGLES);if(a.isBatchedMesh)if(null!==a._multiDrawInstances)v.renderMultiDrawInstances(a._multiDrawStarts,a._multiDrawCounts,a._multiDrawCount,a._multiDrawInstances);else if(Y.get("WEBGL_multi_draw"))v.renderMultiDraw(a._multiDrawStarts,a._multiDrawCounts,a._multiDrawCount);else{const t=a._multiDrawStarts,e=a._multiDrawCounts,n=a._multiDrawCount,r=l?nt.get(l).bytesPerElement:1,o=Q.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)o.setValue(_t,"_gl_DrawID",i),v.render(t[i]/r,e[i])}else if(a.isInstancedMesh)v.renderInstances(h,f,a.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);v.renderInstances(h,f,e)}else v.render(h,f)},this.compile=function(t,e,n=null){null===n&&(n=t),m=lt.get(n),m.init(e),v.push(m),n.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),t!==n&&t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights();const i=new Set;return t.traverse((function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let a=0;a<e.length;a++){const r=e[a];wt(r,n,t),i.add(r)}else wt(e,n,t),i.add(e)})),v.pop(),m=null,i},this.compileAsync=function(t,e,n=null){const i=this.compile(t,e,n);return new Promise((e=>{function n(){i.forEach((function(t){Q.get(t).currentProgram.isReady()&&i.delete(t)})),0!==i.size?setTimeout(n,10):e(t)}null!==Y.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let At=null;function Ct(){Pt.stop()}function Rt(){Pt.start()}const Pt=new yo;function Dt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||B.intersectsSprite(t)){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);const e=at.update(t),a=t.material;a.visible&&f.push(t,e,a,n,W.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||B.intersectsObject(t))){const e=at.update(t),a=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),W.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),W.copy(e.boundingSphere.center)),W.applyMatrix4(t.matrixWorld).applyMatrix4(H)),Array.isArray(a)){const i=e.groups;for(let r=0,o=i.length;r<o;r++){const o=i[r],s=a[o.materialIndex];s&&s.visible&&f.push(t,e,s,n,W.z,o)}}else a.visible&&f.push(t,e,a,n,W.z,null)}const a=t.children;for(let t=0,r=a.length;t<r;t++)Dt(a[t],e,n,i)}function Lt(t,e,n,i){const a=t.opaque,r=t.transmissive,o=t.transparent;m.setupLightsView(n),!0===z&&dt.setGlobalState(_.clippingPlanes,n),i&&K.viewport(T.copy(i)),a.length>0&&Ut(a,e,n),r.length>0&&Ut(r,e,n),o.length>0&&Ut(o,e,n),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function It(t,e,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===m.state.transmissionRenderTarget[i.id]&&(m.state.transmissionRenderTarget[i.id]=new Xi(1,1,{generateMipmaps:!0,type:Y.has("EXT_color_buffer_half_float")||Y.has("EXT_color_buffer_float")?Xe:ze,minFilter:Be,samples:4,stencilBuffer:a,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ui.workingColorSpace}));const r=m.state.transmissionRenderTarget[i.id],o=i.viewport||T;r.setSize(o.z,o.w);const s=_.getRenderTarget();_.setRenderTarget(r),_.getClearColor(C),R=_.getClearAlpha(),R<1&&_.setClearColor(16777215,.5),_.clear(),X&&ut.render(n);const l=_.toneMapping;_.toneMapping=ye;const d=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),m.setupLightsView(i),!0===z&&dt.setGlobalState(_.clippingPlanes,i),Ut(t,n,i),$.updateMultisampleRenderTarget(r),$.updateRenderTargetMipmap(r),!1===Y.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let a=0,r=e.length;a<r;a++){const r=e[a],o=r.object,s=r.geometry,l=r.material,d=r.group;if(2===l.side&&o.layers.test(i.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,Nt(o,n,i,s,l,d),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&($.updateMultisampleRenderTarget(r),$.updateRenderTargetMipmap(r))}_.setRenderTarget(s),_.setClearColor(C,R),void 0!==d&&(i.viewport=d),_.toneMapping=l}function Ut(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let a=0,r=t.length;a<r;a++){const r=t[a],o=r.object,s=r.geometry,l=null===i?r.material:i,d=r.group;o.layers.test(n.layers)&&Nt(o,e,n,s,l,d)}}function Nt(t,e,n,i,a,r){t.onBeforeRender(_,e,n,i,a,r),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),a.onBeforeRender(_,e,n,i,t,r),!0===a.transparent&&2===a.side&&!1===a.forceSinglePass?(a.side=1,a.needsUpdate=!0,_.renderBufferDirect(n,e,i,a,t,r),a.side=0,a.needsUpdate=!0,_.renderBufferDirect(n,e,i,a,t,r),a.side=2):_.renderBufferDirect(n,e,i,a,t,r),t.onAfterRender(_,e,n,i,a,r)}function Ot(t,e,n){!0!==e.isScene&&(e=j);const i=Q.get(t),a=m.state.lights,r=m.state.shadowsArray,o=a.state.version,s=rt.getParameters(t,a.state,r,e,n),l=rt.getProgramCacheKey(s);let d=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?et:tt).get(t.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===d&&(t.addEventListener("dispose",Tt),d=new Map,i.programs=d);let c=d.get(l);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===o)return zt(t,s),c}else s.uniforms=rt.getUniforms(t),t.onBeforeCompile(s,_),c=rt.acquireProgram(s,l),d.set(l,c),i.uniforms=s.uniforms;const u=i.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=dt.uniform),zt(t,s),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=o,i.needsLights&&(u.ambientLightColor.value=a.state.ambient,u.lightProbe.value=a.state.probe,u.directionalLights.value=a.state.directional,u.directionalLightShadows.value=a.state.directionalShadow,u.spotLights.value=a.state.spot,u.spotLightShadows.value=a.state.spotShadow,u.rectAreaLights.value=a.state.rectArea,u.ltc_1.value=a.state.rectAreaLTC1,u.ltc_2.value=a.state.rectAreaLTC2,u.pointLights.value=a.state.point,u.pointLightShadows.value=a.state.pointShadow,u.hemisphereLights.value=a.state.hemi,u.directionalShadowMap.value=a.state.directionalShadowMap,u.directionalShadowMatrix.value=a.state.directionalShadowMatrix,u.spotShadowMap.value=a.state.spotShadowMap,u.spotLightMatrix.value=a.state.spotLightMatrix,u.spotLightMap.value=a.state.spotLightMap,u.pointShadowMap.value=a.state.pointShadowMap,u.pointShadowMatrix.value=a.state.pointShadowMatrix),i.currentProgram=c,i.uniformsList=null,c}function Bt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=ll.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function zt(t,e){const n=Q.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.batchingColor=e.batchingColor,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.instancingMorph=e.instancingMorph,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Pt.setAnimationLoop((function(t){At&&At(t)})),"undefined"!=typeof self&&Pt.setContext(self),this.setAnimationLoop=function(t){At=t,bt.setAnimationLoop(t),null===t?Pt.stop():Pt.start()},bt.addEventListener("sessionstart",Ct),bt.addEventListener("sessionend",Rt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===y)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===bt.enabled&&!0===bt.isPresenting&&(!0===bt.cameraAutoUpdate&&bt.updateCamera(e),e=bt.getCamera()),!0===t.isScene&&t.onBeforeRender(_,t,e,M),m=lt.get(t,v.length),m.init(e),v.push(m),H.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),B.setFromProjectionMatrix(H),k=this.localClippingEnabled,z=dt.init(this.clippingPlanes,k),f=st.get(t,g.length),f.init(),g.push(f),!0===bt.enabled&&!0===bt.isPresenting){const t=_.xr.getDepthSensingMesh();null!==t&&Dt(t,e,-1/0,_.sortObjects)}Dt(t,e,0,_.sortObjects),f.finish(),!0===_.sortObjects&&f.sort(I,U),X=!1===bt.enabled||!1===bt.isPresenting||!1===bt.hasDepthSensing(),X&&ut.addToRenderList(f,t),this.info.render.frame++,!0===z&&dt.beginShadows();const n=m.state.shadowsArray;ct.render(n,t,e),!0===z&&dt.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=f.opaque,a=f.transmissive;if(m.setupLights(),e.isArrayCamera){const n=e.cameras;if(a.length>0)for(let e=0,r=n.length;e<r;e++)It(i,a,t,n[e]);X&&ut.render(t);for(let e=0,i=n.length;e<i;e++){const i=n[e];Lt(f,t,i,i.viewport)}}else a.length>0&&It(i,a,t,e),X&&ut.render(t),Lt(f,t,e);null!==M&&($.updateMultisampleRenderTarget(M),$.updateRenderTargetMipmap(M)),!0===t.isScene&&t.onAfterRender(_,t,e),gt.resetDefaultState(),S=-1,E=null,v.pop(),v.length>0?(m=v[v.length-1],!0===z&&dt.setGlobalState(_.clippingPlanes,m.state.camera)):m=null,g.pop(),f=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(t,e,n){Q.get(t.texture).__webglTexture=e,Q.get(t.depthTexture).__webglTexture=n;const i=Q.get(t);i.__hasExternalTextures=!0,i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===Y.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(t,e){const n=Q.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){M=t,x=e,b=n;let i=!0,a=null,r=!1,o=!1;if(t){const s=Q.get(t);if(void 0!==s.__useDefaultFramebuffer)K.bindFramebuffer(_t.FRAMEBUFFER,null),i=!1;else if(void 0===s.__webglFramebuffer)$.setupRenderTarget(t);else if(s.__hasExternalTextures)$.rebindTextures(t,Q.get(t.texture).__webglTexture,Q.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(s.__boundDepthTexture!==e){if(null!==e&&Q.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");$.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(o=!0);const d=Q.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(a=Array.isArray(d[e])?d[e][n]:d[e],r=!0):a=t.samples>0&&!1===$.useMultisampledRTT(t)?Q.get(t).__webglMultisampledFramebuffer:Array.isArray(d)?d[n]:d,T.copy(t.viewport),w.copy(t.scissor),A=t.scissorTest}else T.copy(N).multiplyScalar(L).floor(),w.copy(O).multiplyScalar(L).floor(),A=F;if(K.bindFramebuffer(_t.FRAMEBUFFER,a)&&i&&K.drawBuffers(t,a),K.viewport(T),K.scissor(w),K.setScissorTest(A),r){const i=Q.get(t.texture);_t.framebufferTexture2D(_t.FRAMEBUFFER,_t.COLOR_ATTACHMENT0,_t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(o){const i=Q.get(t.texture),a=e||0;_t.framebufferTextureLayer(_t.FRAMEBUFFER,_t.COLOR_ATTACHMENT0,i.__webglTexture,n||0,a)}S=-1},this.readRenderTargetPixels=function(t,e,n,i,a,r,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=Q.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){K.bindFramebuffer(_t.FRAMEBUFFER,s);try{const o=t.texture,s=o.format,l=o.type;if(!Z.textureFormatReadable(s))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!Z.textureTypeReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&n>=0&&n<=t.height-a&&_t.readPixels(e,n,i,a,mt.convert(s),mt.convert(l),r)}finally{const t=null!==M?Q.get(M).__webglFramebuffer:null;K.bindFramebuffer(_t.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,n,i,a,r,o){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=Q.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){const o=t.texture,l=o.format,d=o.type;if(!Z.textureFormatReadable(l))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Z.textureTypeReadable(d))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(e>=0&&e<=t.width-i&&n>=0&&n<=t.height-a){K.bindFramebuffer(_t.FRAMEBUFFER,s);const t=_t.createBuffer();_t.bindBuffer(_t.PIXEL_PACK_BUFFER,t),_t.bufferData(_t.PIXEL_PACK_BUFFER,r.byteLength,_t.STREAM_READ),_t.readPixels(e,n,i,a,mt.convert(l),mt.convert(d),0);const o=null!==M?Q.get(M).__webglFramebuffer:null;K.bindFramebuffer(_t.FRAMEBUFFER,o);const c=_t.fenceSync(_t.SYNC_GPU_COMMANDS_COMPLETE,0);return _t.flush(),await function(t,e){return new Promise((function(n,i){setTimeout((function a(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:i();break;case t.TIMEOUT_EXPIRED:setTimeout(a,4);break;default:n()}}),4)}))}(_t,c),_t.bindBuffer(_t.PIXEL_PACK_BUFFER,t),_t.getBufferSubData(_t.PIXEL_PACK_BUFFER,0,r),_t.deleteBuffer(t),_t.deleteSync(c),r}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,n=0){!0!==t.isTexture&&(Ri("WebGLRenderer: copyFramebufferToTexture function signature has changed."),e=arguments[0]||null,t=arguments[1]);const i=Math.pow(2,-n),a=Math.floor(t.image.width*i),r=Math.floor(t.image.height*i),o=null!==e?e.x:0,s=null!==e?e.y:0;$.setTexture2D(t,0),_t.copyTexSubImage2D(_t.TEXTURE_2D,n,0,0,o,s,a,r),K.unbindTexture()},this.copyTextureToTexture=function(t,e,n=null,i=null,a=0){let r,o,s,l,d,c;!0!==t.isTexture&&(Ri("WebGLRenderer: copyTextureToTexture function signature has changed."),i=arguments[0]||null,t=arguments[1],e=arguments[2],a=arguments[3]||0,n=null),null!==n?(r=n.max.x-n.min.x,o=n.max.y-n.min.y,s=n.min.x,l=n.min.y):(r=t.image.width,o=t.image.height,s=0,l=0),null!==i?(d=i.x,c=i.y):(d=0,c=0);const u=mt.convert(e.format),h=mt.convert(e.type);$.setTexture2D(e,0),_t.pixelStorei(_t.UNPACK_FLIP_Y_WEBGL,e.flipY),_t.pixelStorei(_t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),_t.pixelStorei(_t.UNPACK_ALIGNMENT,e.unpackAlignment);const p=_t.getParameter(_t.UNPACK_ROW_LENGTH),f=_t.getParameter(_t.UNPACK_IMAGE_HEIGHT),m=_t.getParameter(_t.UNPACK_SKIP_PIXELS),g=_t.getParameter(_t.UNPACK_SKIP_ROWS),v=_t.getParameter(_t.UNPACK_SKIP_IMAGES),_=t.isCompressedTexture?t.mipmaps[a]:t.image;_t.pixelStorei(_t.UNPACK_ROW_LENGTH,_.width),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,_.height),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,s),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,l),t.isDataTexture?_t.texSubImage2D(_t.TEXTURE_2D,a,d,c,r,o,u,h,_.data):t.isCompressedTexture?_t.compressedTexSubImage2D(_t.TEXTURE_2D,a,d,c,_.width,_.height,u,_.data):_t.texSubImage2D(_t.TEXTURE_2D,a,d,c,r,o,u,h,_),_t.pixelStorei(_t.UNPACK_ROW_LENGTH,p),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,f),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,m),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,g),_t.pixelStorei(_t.UNPACK_SKIP_IMAGES,v),0===a&&e.generateMipmaps&&_t.generateMipmap(_t.TEXTURE_2D),K.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n=null,i=null,a=0){let r,o,s,l,d,c,u,h,p;!0!==t.isTexture&&(Ri("WebGLRenderer: copyTextureToTexture3D function signature has changed."),n=arguments[0]||null,i=arguments[1]||null,t=arguments[2],e=arguments[3],a=arguments[4]||0);const f=t.isCompressedTexture?t.mipmaps[a]:t.image;null!==n?(r=n.max.x-n.min.x,o=n.max.y-n.min.y,s=n.max.z-n.min.z,l=n.min.x,d=n.min.y,c=n.min.z):(r=f.width,o=f.height,s=f.depth,l=0,d=0,c=0),null!==i?(u=i.x,h=i.y,p=i.z):(u=0,h=0,p=0);const m=mt.convert(e.format),g=mt.convert(e.type);let v;if(e.isData3DTexture)$.setTexture3D(e,0),v=_t.TEXTURE_3D;else{if(!e.isDataArrayTexture&&!e.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(e,0),v=_t.TEXTURE_2D_ARRAY}_t.pixelStorei(_t.UNPACK_FLIP_Y_WEBGL,e.flipY),_t.pixelStorei(_t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),_t.pixelStorei(_t.UNPACK_ALIGNMENT,e.unpackAlignment);const _=_t.getParameter(_t.UNPACK_ROW_LENGTH),y=_t.getParameter(_t.UNPACK_IMAGE_HEIGHT),x=_t.getParameter(_t.UNPACK_SKIP_PIXELS),b=_t.getParameter(_t.UNPACK_SKIP_ROWS),M=_t.getParameter(_t.UNPACK_SKIP_IMAGES);_t.pixelStorei(_t.UNPACK_ROW_LENGTH,f.width),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,f.height),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,l),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,d),_t.pixelStorei(_t.UNPACK_SKIP_IMAGES,c),t.isDataTexture||t.isData3DTexture?_t.texSubImage3D(v,a,u,h,p,r,o,s,m,g,f.data):e.isCompressedArrayTexture?_t.compressedTexSubImage3D(v,a,u,h,p,r,o,s,m,f.data):_t.texSubImage3D(v,a,u,h,p,r,o,s,m,g,f),_t.pixelStorei(_t.UNPACK_ROW_LENGTH,_),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,y),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,x),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,b),_t.pixelStorei(_t.UNPACK_SKIP_IMAGES,M),0===a&&e.generateMipmaps&&_t.generateMipmap(v),K.unbindTexture()},this.initRenderTarget=function(t){void 0===Q.get(t).__webglFramebuffer&&$.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?$.setTextureCube(t,0):t.isData3DTexture?$.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?$.setTexture2DArray(t,0):$.setTexture2D(t,0),K.unbindTexture()},this.resetState=function(){x=0,b=0,M=null,K.reset(),gt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ui}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===Yn?"display-p3":"srgb",e.unpackColorSpace=Ui.workingColorSpace===Zn?"display-p3":"srgb"}}class ld extends $a{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Oa,this.environmentIntensity=1,this.environmentRotation=new Oa,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class dd{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=di,this.updateRanges=[],this.version=0,this.uuid=vi()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,a=this.stride;i<a;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=vi()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=vi()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const cd=new Ki;class ud{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)cd.fromBufferAttribute(this,e),cd.applyMatrix4(t),this.setXYZ(e,cd.x,cd.y,cd.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)cd.fromBufferAttribute(this,e),cd.applyNormalMatrix(t),this.setXYZ(e,cd.x,cd.y,cd.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)cd.fromBufferAttribute(this,e),cd.transformDirection(t),this.setXYZ(e,cd.x,cd.y,cd.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=xi(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=bi(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=bi(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=bi(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=bi(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=bi(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=xi(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=xi(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=xi(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=xi(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=bi(e,this.array),n=bi(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=bi(e,this.array),n=bi(n,this.array),i=bi(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,a){return t=t*this.data.stride+this.offset,this.normalized&&(e=bi(e,this.array),n=bi(n,this.array),i=bi(i,this.array),a=bi(a,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=a,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Tr(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ud(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class hd extends br{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new _r(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let pd;const fd=new Ki,md=new Ki,gd=new Ki,vd=new Mi,_d=new Mi,yd=new wa,xd=new Ki,bd=new Ki,Md=new Ki,Sd=new Mi,Ed=new Mi,Td=new Mi;class wd extends $a{constructor(t=new hd){if(super(),this.isSprite=!0,this.type="Sprite",void 0===pd){pd=new Or;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new dd(t,5);pd.setIndex([0,1,2,0,2,3]),pd.setAttribute("position",new ud(e,3,0,!1)),pd.setAttribute("uv",new ud(e,2,3,!1))}this.geometry=pd,this.material=t,this.center=new Mi(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),md.setFromMatrixScale(this.matrixWorld),yd.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),gd.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&md.multiplyScalar(-gd.z);const n=this.material.rotation;let i,a;0!==n&&(a=Math.cos(n),i=Math.sin(n));const r=this.center;Ad(xd.set(-.5,-.5,0),gd,r,md,i,a),Ad(bd.set(.5,-.5,0),gd,r,md,i,a),Ad(Md.set(.5,.5,0),gd,r,md,i,a),Sd.set(0,0),Ed.set(1,0),Td.set(1,1);let o=t.ray.intersectTriangle(xd,bd,Md,!1,fd);if(null===o&&(Ad(bd.set(-.5,.5,0),gd,r,md,i,a),Ed.set(0,1),o=t.ray.intersectTriangle(xd,Md,bd,!1,fd),null===o))return;const s=t.ray.origin.distanceTo(fd);s<t.near||s>t.far||e.push({distance:s,point:fd.clone(),uv:pr.getInterpolation(fd,xd,bd,Md,Sd,Ed,Td,new Mi),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Ad(t,e,n,i,a,r){vd.subVectors(t,n).addScalar(.5).multiply(i),void 0!==a?(_d.x=r*vd.x-a*vd.y,_d.y=a*vd.x+r*vd.y):_d.copy(vd),t.copy(e),t.x+=_d.x,t.y+=_d.y,t.applyMatrix4(yd)}class Cd extends Gi{constructor(t,e,n,i,a,r,o,s,l){super(t,e,n,i,a,r,o,s,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}function Rd(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}class Pd{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],a=e[n-1];t:{e:{let r;n:{i:if(!(t<i)){for(let r=n+2;;){if(void 0===i){if(t<a)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===r)break;if(a=i,i=e[++n],t<i)break e}r=e.length;break n}if(t>=a)break t;{const o=e[1];t<o&&(n=2,a=o);for(let r=n-2;;){if(void 0===a)return this._cachedIndex=0,this.copySampleValue_(0);if(n===r)break;if(i=a,a=e[--n-1],t>=a)break e}r=n,n=0}}for(;n<r;){const i=n+r>>>1;t<e[i]?r=i:n=i+1}if(i=e[n],a=e[n-1],void 0===a)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,a=t*i;for(let t=0;t!==i;++t)e[t]=n[a+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Dd extends Pd{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,n){const i=this.parameterPositions;let a=t-2,r=t+1,o=i[a],s=i[r];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:a=t,o=2*e-n;break;case 2402:a=i.length-2,o=e+i[a]-i[a+1];break;default:a=t,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:r=t,s=2*n-e;break;case 2402:r=1,s=n+i[1]-i[0];break;default:r=t-1,s=e}const l=.5*(n-e),d=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(s-n),this._offsetPrev=a*d,this._offsetNext=r*d}interpolate_(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,o=this.valueSize,s=t*o,l=s-o,d=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,h=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,_=(-1-h)*m+(1.5+h)*f+.5*p,y=h*m-h*f;for(let t=0;t!==o;++t)a[t]=g*r[d+t]+v*r[l+t]+_*r[s+t]+y*r[c+t];return a}}class Ld extends Pd{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,o=this.valueSize,s=t*o,l=s-o,d=(n-e)/(i-e),c=1-d;for(let t=0;t!==o;++t)a[t]=r[l+t]*c+r[s+t]*d;return a}}class Id extends Pd{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Ud{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Rd(e,this.TimeBufferType),this.values=Rd(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Rd(t.times,Array),values:Rd(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Id(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Ld(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Dd(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Hn:e=this.InterpolantFactoryMethodDiscrete;break;case Gn:e=this.InterpolantFactoryMethodLinear;break;case Wn:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Hn;case this.InterpolantFactoryMethodLinear:return Gn;case this.InterpolantFactoryMethodSmooth:return Wn}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let a=0,r=i-1;for(;a!==i&&n[a]<t;)++a;for(;-1!==r&&n[r]>e;)--r;if(++r,0!==a||r!==i){a>=r&&(r=Math.max(r,1),a=r-1);const t=this.getValueSize();this.times=n.slice(a,r),this.values=this.values.slice(a*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,a=n.length;0===a&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==a;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,r),t=!1;break}r=i}if(void 0!==i&&(o=i,ArrayBuffer.isView(o)&&!(o instanceof DataView)))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}var o;return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Wn,a=t.length-1;let r=1;for(let o=1;o<a;++o){let a=!1;const s=t[o];if(s!==t[o+1]&&(1!==o||s!==t[0]))if(i)a=!0;else{const t=o*n,i=t-n,r=t+n;for(let o=0;o!==n;++o){const n=e[t+o];if(n!==e[i+o]||n!==e[r+o]){a=!0;break}}}if(a){if(o!==r){t[r]=t[o];const i=o*n,a=r*n;for(let t=0;t!==n;++t)e[a+t]=e[i+t]}++r}}if(a>0){t[r]=t[a];for(let t=a*n,i=r*n,o=0;o!==n;++o)e[i+o]=e[t+o];++r}return r!==t.length?(this.times=t.slice(0,r),this.values=e.slice(0,r*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Ud.prototype.TimeBufferType=Float32Array,Ud.prototype.ValueBufferType=Float32Array,Ud.prototype.DefaultInterpolation=Gn;class Nd extends Ud{constructor(t,e,n){super(t,e,n)}}Nd.prototype.ValueTypeName="bool",Nd.prototype.ValueBufferType=Array,Nd.prototype.DefaultInterpolation=Hn,Nd.prototype.InterpolantFactoryMethodLinear=void 0,Nd.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends Ud{}).prototype.ValueTypeName="color";(class extends Ud{}).prototype.ValueTypeName="number";class Od extends Pd{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,o=this.valueSize,s=(n-e)/(i-e);let l=t*o;for(let t=l+o;l!==t;l+=4)Zi.slerpFlat(a,0,r,l-o,r,l,s);return a}}class Fd extends Ud{InterpolantFactoryMethodLinear(t){return new Od(this.times,this.values,this.getValueSize(),t)}}Fd.prototype.ValueTypeName="quaternion",Fd.prototype.InterpolantFactoryMethodSmooth=void 0;class Bd extends Ud{constructor(t,e,n){super(t,e,n)}}Bd.prototype.ValueTypeName="string",Bd.prototype.ValueBufferType=Array,Bd.prototype.DefaultInterpolation=Hn,Bd.prototype.InterpolantFactoryMethodLinear=void 0,Bd.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends Ud{}).prototype.ValueTypeName="vector";Error;const zd="\\[\\]\\.:\\/",kd=new RegExp("["+zd+"]","g"),Vd="[^"+zd+"]",Hd="[^"+zd.replace("\\.","")+"]",Gd=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Vd)+/(WCOD+)?/.source.replace("WCOD",Hd)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Vd)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Vd)+"$"),Wd=["material","materials","bones","map"];class jd{constructor(t,e,n){this.path=e,this.parsedPath=n||jd.parseTrackName(e),this.node=jd.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new jd.Composite(t,e,n):new jd(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(kd,"")}static parseTrackName(t){const e=Gd.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Wd.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const a=t[i];if(a.name===e||a.uuid===e)return a;const r=n(a.children);if(r)return r}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(t||(t=jd.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const r=t[i];if(void 0===r){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}s=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=a}else void 0!==r.fromArray&&void 0!==r.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(s=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}jd.Composite=class{constructor(t,e,n){const i=n||jd.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=n.length;i!==a;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},jd.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},jd.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},jd.prototype.GetterByBindingType=[jd.prototype._getValue_direct,jd.prototype._getValue_array,jd.prototype._getValue_arrayElement,jd.prototype._getValue_toArray],jd.prototype.SetterByBindingTypeAndVersioning=[[jd.prototype._setValue_direct,jd.prototype._setValue_direct_setNeedsUpdate,jd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[jd.prototype._setValue_array,jd.prototype._setValue_array_setNeedsUpdate,jd.prototype._setValue_array_setMatrixWorldNeedsUpdate],[jd.prototype._setValue_arrayElement,jd.prototype._setValue_arrayElement_setNeedsUpdate,jd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[jd.prototype._setValue_fromArray,jd.prototype._setValue_fromArray_setNeedsUpdate,jd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ft}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ft);var Xd=n(172),qd={};qd.styleTagTransform=mt(),qd.setAttributes=ut(),qd.insert=dt().bind(null,"head"),qd.domAPI=st(),qd.insertStyleElement=pt(),rt()(Xd.A,qd);const Yd=Xd.A&&Xd.A.locals?Xd.A.locals:void 0;var Zd=X("<div id=skills><div>My Skills</div><div></div><button>Download Resume");function Kd(){let t=null;const e=["JavaScript","TypeScript","C#","MongoDB","MySQL","React","Next.js","Unity","Phaser.js","Three.js","Node.js","Express","Framer","PHP","Laravel","Supabase","Solid.js","Webpack","NPM"];return S((()=>{const n=new ld;n.background=new _r(16777215);const i=new oo(75,window.innerWidth/window.innerHeight,.1,1e3),a=new sd({antialias:!0});a.setSize(window.innerWidth,window.innerHeight),t&&t.appendChild(a.domElement);const r=e.map((t=>{const e=document.createElement("canvas"),i=e.getContext("2d"),a=40*Math.random()+20;i.font=`Bold ${a}px Arial`,i.fillStyle="green",i.fillText(t,0,a);const r=new Cd(e),o=new hd({map:r}),s=new wd(o);return s.position.set(4*(Math.random()-.5),8.5*(Math.random()-.5),10*(Math.random()-.5)),s.scale.set(3,1.5,1),n.add(s),s}));i.position.z=10;const o=()=>{requestAnimationFrame(o),r.forEach((t=>{t.rotation.y+=.05,t.position.x+=.03*(Math.random()-.5),t.position.y+=.03*(Math.random()-.5),t.position.z+=.03*(Math.random()-.5)})),a.render(n,i)};o();const s=()=>{const t=window.innerWidth,e=window.innerHeight;a.setSize(t,e),i.aspect=t/e,i.updateProjectionMatrix()};window.addEventListener("resize",s),E((()=>{window.removeEventListener("resize",s),a.dispose()}))})),n=Zd(),i=n.firstChild,a=i.nextSibling,r=a.nextSibling,K((e=>t=e),a),a.style.setProperty("position","relative"),a.style.setProperty("width","100%"),a.style.setProperty("height","100vh"),r.$$click=()=>{window.open("../static/files/resume.pdf","_blank")},y((t=>{var e=Yd.skills,o="custom-font-1 "+Yd.title,s=Yd.container,l=Yd.downloadButton+" custom-font-1";return e!==t.e&&Z(n,t.e=e),o!==t.t&&Z(i,t.t=o),s!==t.a&&Z(a,t.a=s),l!==t.o&&Z(r,t.o=l),t}),{e:void 0,t:void 0,a:void 0,o:void 0}),n;var n,i,a,r}q(["click"]);var Jd=n(928),Qd={};Qd.styleTagTransform=mt(),Qd.setAttributes=ut(),Qd.insert=dt().bind(null,"head"),Qd.domAPI=st(),Qd.insertStyleElement=pt(),rt()(Jd.A,Qd);const $d=Jd.A&&Jd.A.locals?Jd.A.locals:void 0;var tc=n(214),ec={};ec.styleTagTransform=mt(),ec.setAttributes=ut(),ec.insert=dt().bind(null,"head"),ec.domAPI=st(),ec.insertStyleElement=pt(),rt()(tc.A,ec);const nc=tc.A&&tc.A.locals?tc.A.locals:void 0;var ic=X('<svg version=1.1 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink viewBox="-50 0 500 458.4"><defs><filter id=f1 x=0 y=0 width=200% height=200%><feGaussianBlur stdDeviation=7></feGaussianBlur></filter></defs><g id=shadow filter=url(#f1)><path fill=#151618 d=m14,318l149,86l235,-136l-150,-87l-234,137z></path></g><g id=computer><g id=screen><g id=corner-top-right><defs><path id=SVGID_1_ d="M240.8,9.2l4.5,2.6c-1-0.6-2.4-0.5-3.9,0.4l-4.5-2.6 C238.4,8.7,239.8,8.6,240.8,9.2z"></path></defs><clipPath id=SVGID_2_><use href=#SVGID_1_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_2_)><path fill=#C7C8CA d=M241.4,12.2l-4.5-2.6c0.3-0.1,0.5-0.3,0.8-0.4l4.5,2.6C241.9,11.9,241.7,12,241.4,12.2></path><path fill=#C3C4C6 d=M242.2,11.8l-4.5-2.6c0.2-0.1,0.4-0.2,0.6-0.2l4.5,2.6C242.6,11.6,242.4,11.7,242.2,11.8></path><path fill=#BFC0C2 d=M242.8,11.6l-4.5-2.6c0.2,0,0.3-0.1,0.5-0.1l4.5,2.6C243.1,11.5,243,11.5,242.8,11.6></path><path fill=#BBBCBE d=M243.3,11.5l-4.5-2.6c0.1,0,0.3,0,0.4,0l4.5,2.6C243.6,11.4,243.4,11.4,243.3,11.5></path><path fill=#B7B9BA d=M243.7,11.4l-4.5-2.6c0.1,0,0.2,0,0.4,0l4.5,2.6C243.9,11.4,243.8,11.4,243.7,11.4></path><path fill=#B3B5B6 d=M244.1,11.4l-4.5-2.6c0.1,0,0.2,0,0.3,0l4.5,2.6C244.3,11.4,244.2,11.4,244.1,11.4></path><path fill=#AFB1B3 d=M244.4,11.5l-4.5-2.6c0.1,0,0.2,0,0.3,0.1l4.5,2.6C244.6,11.5,244.5,11.5,244.4,11.5></path><path fill=#ABADAF d=M244.7,11.5l-4.5-2.6c0.1,0,0.2,0.1,0.3,0.1l4.5,2.6C244.9,11.6,244.8,11.6,244.7,11.5></path><path fill=#A7A9AB d=M245,11.6L240.5,9c0.1,0,0.2,0.1,0.3,0.1l4.5,2.6C245.2,11.7,245.1,11.7,245,11.6></path><path fill=#A3A5A7 d=M245.3,11.8l-4.5-2.6c0,0,0,0,0,0L245.3,11.8C245.3,11.8,245.3,11.8,245.3,11.8></path></g></g><g id=corner-bottom-left><defs><path id=SVGID_3_ d="M16.3,315.7l-4.5-2.6c-1-0.6-1.6-1.8-1.6-3.5l4.5,2.6\r\n                 C14.7,313.9,15.4,315.1,16.3,315.7z"></path></defs><clipPath id=SVGID_4_><use href=#SVGID_3_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_4_)><path fill=#909294 d=M16.3,315.7l-4.5-2.6c-1-0.6-1.6-1.8-1.6-3.5l4.5,2.6C14.7,313.9,15.4,315.1,16.3,315.7></path></g></g><polygon id=border-left fill=#939497 points="14.7,312.2 10.2,309.5 9.8,147 14.3,149.6"></polygon><polygon id=border-top fill=#D3D4D5 points="19.8,140.1 15.2,137.5 236.9,9.5 241.4,12.2"></polygon><path id=frame fill=#606161 d="M241.4,12.2c3-1.7,5.5-0.3,5.5,3.1l0.5,162.5c0,3.5-2.5,7.7-5.5,9.5l-221.6,128c-3,1.7-5.5,0.3-5.5-3.1\r\n             l-0.5-162.5c0-3.5,2.5-7.7,5.5-9.5L241.4,12.2z"></path><g id=corner-top-left><defs><path id=SVGID_5_ d="M14.3,149.6L9.8,147c0-3.5,2.5-7.7,5.5-9.5l4.5,2.6\r\n                 C16.7,141.9,14.3,146.2,14.3,149.6z"></path></defs><clipPath id=SVGID_6_><use href=#SVGID_5_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_6_)><path fill=#909294 d=M14.3,149.6L9.8,147c0-0.3,0-0.7,0.1-1.1l4.5,2.6C14.3,148.9,14.3,149.3,14.3,149.6></path><path fill=#949598 d=M14.3,148.6l-4.5-2.6c0-0.3,0.1-0.5,0.1-0.8l4.5,2.6C14.4,148.1,14.4,148.3,14.3,148.6></path><path fill=#98999C d=M14.5,147.8l-4.5-2.6c0-0.2,0.1-0.4,0.2-0.6l4.5,2.6C14.6,147.4,14.5,147.6,14.5,147.8></path><path fill=#9B9D9F d=M14.6,147.2l-4.5-2.6c0.1-0.2,0.1-0.4,0.2-0.6l4.5,2.6C14.7,146.8,14.7,147,14.6,147.2></path><path fill=#9FA1A3 d=M14.8,146.6l-4.5-2.6c0.1-0.2,0.1-0.3,0.2-0.5l4.5,2.6C14.9,146.3,14.9,146.4,14.8,146.6></path><path fill=#A3A5A7 d=M15,146.1l-4.5-2.6c0.1-0.2,0.1-0.3,0.2-0.5l4.5,2.6C15.1,145.8,15.1,145.9,15,146.1></path><path fill=#A7A9AB d=M15.2,145.6l-4.5-2.6c0.1-0.2,0.1-0.3,0.2-0.5l4.5,2.6C15.3,145.3,15.3,145.4,15.2,145.6></path><path fill=#ABADAF d=M15.4,145.1l-4.5-2.6c0.1-0.2,0.2-0.3,0.2-0.5l4.5,2.6C15.6,144.8,15.5,145,15.4,145.1></path><path fill=#AFB1B3 d=M15.7,144.6l-4.5-2.6c0.1-0.2,0.2-0.3,0.3-0.5l4.5,2.6C15.8,144.3,15.7,144.5,15.7,144.6></path><path fill=#B3B5B6 d=M15.9,144.2l-4.5-2.6c0.1-0.2,0.2-0.3,0.3-0.5l4.5,2.6C16.1,143.9,16,144,15.9,144.2></path><path fill=#B7B9BA d=M16.2,143.7l-4.5-2.6c0.1-0.2,0.2-0.3,0.3-0.5l4.5,2.6C16.4,143.4,16.3,143.6,16.2,143.7></path><path fill=#BBBCBE d=M16.5,143.2l-4.5-2.6c0.1-0.2,0.2-0.3,0.4-0.5l4.5,2.6C16.8,142.9,16.6,143.1,16.5,143.2></path><path fill=#BFC0C2 d=M16.9,142.7l-4.5-2.6c0.1-0.2,0.3-0.4,0.4-0.5l4.5,2.6C17.2,142.4,17,142.5,16.9,142.7></path><path fill=#C3C4C6 d=M17.3,142.2l-4.5-2.6c0.2-0.2,0.4-0.4,0.6-0.6l4.5,2.6C17.7,141.8,17.5,142,17.3,142.2></path><path fill=#C7C8CA d=M17.9,141.6l-4.5-2.6c0.6-0.6,1.2-1,1.8-1.4l4.5,2.6C19.1,140.5,18.5,141,17.9,141.6></path></g></g><polygon id=code-blue-bg fill=#8ED4DC points="238.5,22.8 239,174 23.3,298.5 22.9,147.3"></polygon><path class=screen fill=#11191A d="M239.6,23.2c0-2.3-0.4-2.3-1.7-1.6c-0.5,0.3-1.2,0.7-2,1.2l-211.3,122c-0.8,0.5-1.3,0.7-1.7,0.9 c-0.8,0.5-0.5,0.6-0.5,2.9L22.9,302c0,2.2-0.3,2.7,0.5,2.3c0.3-0.2,0.9-0.6,1.7-1l212-122.4c0.8-0.5,1.4-0.8,1.8-1 c1-0.6,1.1-1,1.1-3.2L239.6,23.2z"></path><g><defs><path id=code-cover-screen-1 d=m26.5,210l209.5,-118.5l2,89l-213,123l1.5,-93.5z></path></defs><clipPath id=clip-path-screen-2><use href=#code-cover-screen-1 overflow=hidden></use></clipPath><g clip-path=url(#clip-path-screen-2><g id=scrolling-code><polygon class="code line-1"fill=#7D7E7E points="93.9,176.3 93.9,182.2 56.6,203.8 56.5,197.9"></polygon><polygon class="code line-1"fill=#3B963D points="47.6,203 47.7,208.9 34.6,216.4 34.6,210.5"></polygon><polygon class="code line-1"fill=#7D7E7E points="144.7,147 144.7,152.9 98.2,179.7 98.2,173.8"></polygon><polygon class="code line-1"fill=#7D7E7E points="187.7,122.1 187.7,128 149,150.4 149,144.5"></polygon><polygon class="code line-2"fill=#3A4488 points="51.9,211.8 51.9,217.7 29.2,230.8 29.2,224.9"></polygon><polygon class="code line-2"fill=#7D7E7E points="179.5,138.1 179.5,144 140.8,166.3 140.8,160.4"></polygon><polygon class="code line-2"fill=#7D7E7E points="136.2,163.1 136.2,169 98.2,191 98.2,185.1"></polygon><polygon class="code line-2"fill=#7D7E7E points="88.5,190.6 88.5,196.5 56.6,215 56.6,209.1"></polygon><polygon class="code line-3"fill=#CA9733 points="47.7,224.8 47.7,230.7 34.7,238.3 34.7,232.4"></polygon><polygon class="code line-3"fill=#7D7E7E points="151.4,165 151.4,170.9 126,185.6 126,179.7"></polygon><polygon class="code line-3"fill=#7D7E7E points="121.2,182.4 121.2,188.3 98.2,201.6 98.2,195.7"></polygon><polygon class="code line-3"fill=#7D7E7E points="183.9,146.2 183.9,152.1 158.5,166.8 158.5,160.9"></polygon><polygon class="code line-3"fill=#7D7E7E points="93.9,198.2 93.9,204.1 56.6,225.6 56.6,219.7"></polygon><polygon class="code line-4"fill=#3A4488 points="52,231.8 52,237.7 29.3,250.8 29.3,244.9"></polygon><polygon class="code line-4"fill=#7D7E7E points="169.8,163.8 169.8,169.7 131.1,192 131.1,186.1"></polygon><polygon class="code line-4"fill=#7D7E7E points="126.9,188.6 126.9,194.5 98.3,211 98.2,205.1"></polygon><polygon class="code line-4"fill=#7D7E7E points="89.3,210.3 89.3,216.2 56.7,235.1 56.6,229.1"></polygon><polygon class="code line-5"fill=#3B963D points="47.8,246.1 47.8,252 34.7,259.5 34.7,253.6"></polygon><polygon class="code line-5"fill=#7D7E7E points="186.3,166.1 186.4,172 167.8,182.7 167.8,176.8"></polygon><polygon class="code line-5"fill=#7D7E7E points="163.1,179.5 163.1,185.4 135.4,201.4 135.4,195.5"></polygon><polygon class="code line-5"fill=#7D7E7E points="93.3,219.8 93.3,225.7 56.7,246.9 56.7,241"></polygon><polygon class="code line-5"fill=#7D7E7E points="130.7,198.2 130.7,204.1 98.3,222.8 98.3,216.9"></polygon><polygon class="code line-6"fill=#3B963D points="47.8,256.7 47.8,262.6 34.8,270.2 34.8,264.2"></polygon><polygon class="code line-6"fill=#7D7E7E points="182.1,178.6 182.1,184.5 158.6,198.1 158.6,192.2"></polygon><polygon class="code line-6"fill=#7D7E7E points="131.2,208.6 131.2,214.5 98.3,233.5 98.3,227.6"></polygon><polygon class="code line-6"fill=#7D7E7E points="154.1,195.3 154.2,201.2 135.4,212.1 135.4,206.1"></polygon><polygon class="code line-6"fill=#7D7E7E points="94,230 94,235.9 56.7,257.5 56.7,251.6"></polygon><polygon class="code line-7"fill=#7D7E7E points="163.1,200.2 163.1,206.1 131.2,224.5 131.2,218.6"></polygon><polygon class="code line-7"fill=#7D7E7E points="186.4,186.8 186.4,192.7 167.9,203.4 167.9,197.5"></polygon><polygon class="code line-7"fill=#7D7E7E points="127,221.1 127,227 98.4,243.5 98.3,237.6"></polygon><polygon class="code line-8"fill=#7D7E7E points="121.3,235.6 121.4,241.5 98.4,254.7 98.4,248.8"></polygon><polygon class="code line-8"fill=#7D7E7E points="184.1,199.3 184.1,205.2 158.7,219.9 158.6,214"></polygon><polygon class="code line-8"fill=#7D7E7E points="151.5,218.1 126.1,232.8 126.1,238.7 151.6,224"></polygon></g></g><g clip-path=url(#clip-path-screen-2><g id=scrolling-code-2><polygon class="code line-1"fill=#7D7E7E points="93.9,176.3 93.9,182.2 56.6,203.8 56.5,197.9"></polygon><polygon class="code line-1"fill=#3B963D points="47.6,203 47.7,208.9 34.6,216.4 34.6,210.5"></polygon><polygon class="code line-1"fill=#7D7E7E points="144.7,147 144.7,152.9 98.2,179.7 98.2,173.8"></polygon><polygon class="code line-1"fill=#7D7E7E points="187.7,122.1 187.7,128 149,150.4 149,144.5"></polygon><polygon class="code line-2"fill=#3A4488 points="51.9,211.8 51.9,217.7 29.2,230.8 29.2,224.9"></polygon><polygon class="code line-2"fill=#7D7E7E points="179.5,138.1 179.5,144 140.8,166.3 140.8,160.4"></polygon><polygon class="code line-2"fill=#7D7E7E points="136.2,163.1 136.2,169 98.2,191 98.2,185.1"></polygon><polygon class="code line-2"fill=#7D7E7E points="88.5,190.6 88.5,196.5 56.6,215 56.6,209.1"></polygon><polygon class="code line-3"fill=#CA9733 points="47.7,224.8 47.7,230.7 34.7,238.3 34.7,232.4"></polygon><polygon class="code line-3"fill=#7D7E7E points="151.4,165 151.4,170.9 126,185.6 126,179.7"></polygon><polygon class="code line-3"fill=#7D7E7E points="121.2,182.4 121.2,188.3 98.2,201.6 98.2,195.7"></polygon><polygon class="code line-3"fill=#7D7E7E points="183.9,146.2 183.9,152.1 158.5,166.8 158.5,160.9"></polygon><polygon class="code line-3"fill=#7D7E7E points="93.9,198.2 93.9,204.1 56.6,225.6 56.6,219.7"></polygon><polygon class="code line-4"fill=#3A4488 points="52,231.8 52,237.7 29.3,250.8 29.3,244.9"></polygon><polygon class="code line-4"fill=#7D7E7E points="169.8,163.8 169.8,169.7 131.1,192 131.1,186.1"></polygon><polygon class="code line-4"fill=#7D7E7E points="126.9,188.6 126.9,194.5 98.3,211 98.2,205.1"></polygon><polygon class="code line-4"fill=#7D7E7E points="89.3,210.3 89.3,216.2 56.7,235.1 56.6,229.1"></polygon><polygon class="code line-5"fill=#3B963D points="47.8,246.1 47.8,252 34.7,259.5 34.7,253.6"></polygon><polygon class="code line-5"fill=#7D7E7E points="186.3,166.1 186.4,172 167.8,182.7 167.8,176.8"></polygon><polygon class="code line-5"fill=#7D7E7E points="163.1,179.5 163.1,185.4 135.4,201.4 135.4,195.5"></polygon><polygon class="code line-5"fill=#7D7E7E points="93.3,219.8 93.3,225.7 56.7,246.9 56.7,241"></polygon><polygon class="code line-5"fill=#7D7E7E points="130.7,198.2 130.7,204.1 98.3,222.8 98.3,216.9"></polygon><polygon class="code line-6"fill=#3B963D points="47.8,256.7 47.8,262.6 34.8,270.2 34.8,264.2"></polygon><polygon class="code line-6"fill=#7D7E7E points="182.1,178.6 182.1,184.5 158.6,198.1 158.6,192.2"></polygon><polygon class="code line-6"fill=#7D7E7E points="131.2,208.6 131.2,214.5 98.3,233.5 98.3,227.6"></polygon><polygon class="code line-6"fill=#7D7E7E points="154.1,195.3 154.2,201.2 135.4,212.1 135.4,206.1"></polygon><polygon class="code line-6"fill=#7D7E7E points="94,230 94,235.9 56.7,257.5 56.7,251.6"></polygon><polygon class="code line-7"fill=#7D7E7E points="163.1,200.2 163.1,206.1 131.2,224.5 131.2,218.6"></polygon><polygon class="code line-7"fill=#7D7E7E points="186.4,186.8 186.4,192.7 167.9,203.4 167.9,197.5"></polygon><polygon class="code line-7"fill=#7D7E7E points="127,221.1 127,227 98.4,243.5 98.3,237.6"></polygon><polygon class="code line-8"fill=#7D7E7E points="121.3,235.6 121.4,241.5 98.4,254.7 98.4,248.8"></polygon><polygon class="code line-8"fill=#7D7E7E points="184.1,199.3 184.1,205.2 158.7,219.9 158.6,214"></polygon><polygon class="code line-8"fill=#7D7E7E points="151.5,218.1 126.1,232.8 126.1,238.7 151.6,224"></polygon></g></g></g><polygon class="code line-0"fill=#A2A75C points="33.7,158.5 33.7,164.4 29.1,167.1 29,161.2"></polygon><polygon class="code line-0"fill=#7D7E7E points="114.3,111.9 114.3,117.9 101.3,125.4 101.3,119.5"></polygon><polygon class="code line-0"fill=#7D7E7E points="156.9,87.3 156.9,93.2 119.6,114.8 119.6,108.9"></polygon><polygon class="code line-0"fill=#7D7E7E points="97.1,121.9 97.1,127.8 73.8,141.3 73.7,135.4"></polygon><polygon class="code line-0"fill=#C1426F points="69,138.1 69,144 37,162.5 36.9,156.6"></polygon><polygon class="code core"fill=#5CA6AB points="54.5,177.5 54.5,180.5 51.6,182.3 51.6,179.3"></polygon><polygon class="code core"fill=#5CA6AB points="62.4,177.2 62.4,180.2 52.9,185.6 52.9,182.6"></polygon><polygon class="code core"fill=#5CA6AB points="110.9,140.9 110.9,143.9 107.9,145.7 107.9,142.7"></polygon><polygon class="code core"fill=#5CA6AB points="109.6,133.6 109.6,136.6 100.2,142 100.1,139"></polygon><polygon class="code core"fill=#5CA6AB points="63.7,164.1 63.7,167.1 60.7,168.8 60.7,165.8"></polygon><polygon class="code core"fill=#5CA6AB points="75.8,157.1 75.8,160.1 72.8,161.8 72.8,158.8"></polygon><polygon class="code core"fill=#5CA6AB points="75.8,165.3 75.8,168.3 72.8,170 72.8,167"></polygon><polygon class="code core"fill=#5CA6AB points="110.9,136.9 110.9,139.9 107.9,141.6 107.9,138.6"></polygon><polygon class="code core"fill=#5CA6AB points="97.2,140.6 97.2,143.6 94.3,145.4 94.2,142.4"></polygon><polygon class="code core"fill=#5CA6AB points="97.2,148.8 97.3,151.8 94.3,153.5 94.3,150.5"></polygon><polygon class="code core"fill=#5CA6AB points="97.2,144.7 97.2,147.7 94.3,149.4 94.3,146.4"></polygon><polygon class="code core"fill=#5CA6AB points="110.9,145 110.9,148 107.9,149.7 107.9,146.7"></polygon><polygon class="code core"fill=#5CA6AB points="101.7,150.3 101.7,153.3 98.8,155 98.8,152"></polygon><polygon class="code core"fill=#5CA6AB points="97.3,156.9 97.3,159.9 94.3,161.7 94.3,158.7"></polygon><polygon class="code core"fill=#5CA6AB points="109.6,149.9 109.6,152.9 100.2,158.3 100.2,155.3"></polygon><polygon class="code core"fill=#5CA6AB points="101.7,146.2 101.7,149.2 98.8,150.9 98.7,147.9"></polygon><polygon class="code core"fill=#5CA6AB points="97.3,152.9 97.3,155.9 94.3,157.6 94.3,154.6"></polygon><polygon class="code core"fill=#5CA6AB points="92.6,159.6 92.6,162.6 89.6,164.4 89.6,161.4"></polygon><polygon class="code core"fill=#5CA6AB points="101.7,142.1 101.7,145.1 98.7,146.9 98.7,143.9"></polygon><polygon class="code core"fill=#5CA6AB points="88.1,162.3 88.1,165.3 77.3,171.5 77.3,168.5"></polygon><polygon class="code core"fill=#5CA6AB points="80.5,162.6 80.5,165.6 77.5,167.3 77.5,164.3"></polygon><polygon class="code core"fill=#5CA6AB points="75.8,169.3 75.8,172.3 72.8,174.1 72.8,171"></polygon><polygon class="code core"fill=#5CA6AB points="80.4,154.4 80.5,157.4 77.5,159.1 77.5,156.1"></polygon><polygon class="code core"fill=#5CA6AB points="68.2,173.7 68.2,176.7 65.2,178.5 65.2,175.5"></polygon><polygon class="code core"fill=#5CA6AB points="68.2,169.7 68.2,172.7 65.2,174.4 65.2,171.4"></polygon><polygon class="code core"fill=#5CA6AB points="74.3,162.1 74.3,165.1 64.9,170.6 64.8,167.6"></polygon><polygon class="code core"fill=#5CA6AB points="63.7,172.3 63.7,175.3 60.7,177 60.7,174"></polygon><polygon class="code core"fill=#5CA6AB points="68.1,161.5 68.1,164.5 65.2,166.2 65.2,163.3"></polygon><polygon class="code core"fill=#5CA6AB points="63.7,168.2 63.7,171.2 60.7,172.9 60.7,169.9"></polygon><polygon class="code core"fill=#5CA6AB points="74.3,154 74.3,157 64.8,162.4 64.8,159.4"></polygon><polygon class="code core"fill=#5CA6AB points="54.5,173.5 54.5,176.5 51.6,178.2 51.5,175.2"></polygon><polygon class="code core"fill=#5CA6AB points="115.1,155.1 115.2,156.5 35,202.7 35,201.4"></polygon><polygon class="code core"fill=#5CA6AB points="54.5,169.4 54.5,172.4 51.5,174.1 51.5,171.1"></polygon><polygon class="code core"fill=#5CA6AB points="50.1,184.3 50.1,187.3 40.6,192.7 40.6,189.7"></polygon><polygon class="code core"fill=#5CA6AB points="62.3,160.9 62.3,163.9 52.9,169.3 52.9,166.3"></polygon><polygon class="code core"fill=#5CA6AB points="42.2,184.6 42.2,187.6 39.3,189.4 39.2,186.4"></polygon><polygon class="code core"fill=#5CA6AB points="42.2,176.5 42.2,179.5 39.2,181.2 39.2,178.2"></polygon><polygon class="code core"fill=#5CA6AB points="50,168 50,171 40.6,176.4 40.6,173.4"></polygon><polygon class="code core"fill=#5CA6AB points="115.1,125.6 115.1,127 35,173.2 35,171.8"></polygon><polygon class="code core"fill=#5CA6AB points="85,155.9 85,158.9 77.5,163.3 77.5,160.3"></polygon><polygon class="code core"fill=#5CA6AB points="88.1,146 88.1,149 77.3,155.2 77.3,152.2"></polygon><polygon class="code core"fill=#5CA6AB points="42.2,180.6 42.2,183.6 39.2,185.3 39.2,182.3"></polygon><g><defs><path id=code-cover-screen-0 d="M239.6,23.2c0-2.3-0.4-2.3-1.7-1.6c-0.5,0.3-1.2,0.7-2,1.2l-211.3,122c-0.8,0.5-1.3,0.7-1.7,0.9 c-0.8,0.5-0.5,0.6-0.5,2.9L22.9,302c0,2.2-0.3,2.7,0.5,2.3c0.3-0.2,0.9-0.6,1.7-1l212-122.4c0.8-0.5,1.4-0.8,1.8-1 c1-0.6,1.1-1,1.1-3.2L239.6,23.2z"></path></defs><clipPath id=clip-path-screen><use href=#code-cover-screen-0 overflow=hidden></use></clipPath><g clip-path=url(#clip-path-screen)><path id=code-cover-screen fill=#11191A d="M239.6,23.2c0-2.3-0.4-2.3-1.7-1.6c-0.5,0.3-1.2,0.7-2,1.2l-211.3,122c-0.8,0.5-1.3,0.7-1.7,0.9 c-0.8,0.5-0.5,0.6-0.5,2.9L22.9,302c0,2.2-0.3,2.7,0.5,2.3c0.3-0.2,0.9-0.6,1.7-1l212-122.4c0.8-0.5,1.4-0.8,1.8-1 c1-0.6,1.1-1,1.1-3.2L239.6,23.2z"></path></g></g><path class="control red"fill=#C24C4B d="M31.8,145.3c1.4-0.8,2.6-0.2,2.6,1.5c0,1.6-1.1,3.6-2.6,4.5c-1.4,0.8-2.6,0.2-2.6-1.5\r\n       C29.3,148.2,30.4,146.2,31.8,145.3z"></path><path class="control yellow"fill=#CA9733 d="M40.5,140.4c1.4-0.8,2.6-0.2,2.6,1.5c0,1.6-1.1,3.6-2.6,4.5c-1.4,0.8-2.6,0.2-2.6-1.5 C37.9,143.2,39,141.2,40.5,140.4z"></path><path class="control green"fill=#3B963D d=M49.1,135.4c1.4-0.8,2.6-0.2,2.6,1.5s-1.1,3.6-2.6,4.5c-1.4,0.8-2.6,0.2-2.6-1.5S47.7,136.2,49.1,135.4z></path><polygon class="control title"fill=#646565 points="142,81.7 142.1,87.6 118.7,101.1 118.7,95.2"></polygon><path id=reflex opacity=0.27 fill=#A9A8A8 d="M237,14.7l-85.7,49.5L147,74.8l-22.7,152.2l31.7-25.3l-13.4,27.8l96.7-55.4l-0.8-151.2 C238.5,22.9,247,7.6,237,14.7z"></path></g><g id=bottom><g><defs><path id=SVGID_7_ d="M397.2,268.3l0,7.3c0,1.2-0.8,2.3-2.3,3.2l0-7.3 C396.4,270.6,397.2,269.4,397.2,268.3z"></path></defs><clipPath id=SVGID_8_><use href=#SVGID_7_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_8_)><path fill=#9B9D9F d=M397.2,268.3l0,7.3c0,0,0,0,0,0.1L397.2,268.3C397.2,268.3,397.2,268.3,397.2,268.3></path><path fill=#9FA1A3 d=M397.2,268.3l0,7.3c0,0.2,0,0.3-0.1,0.5l0-7.3C397.2,268.6,397.2,268.5,397.2,268.3></path><path fill=#A3A5A7 d=M397.1,268.8l0,7.3c0,0.1-0.1,0.3-0.1,0.4l0-7.3C397.1,269.1,397.1,268.9,397.1,268.8></path><path fill=#A7A9AB d=M397,269.2l0,7.3c-0.1,0.2-0.1,0.3-0.2,0.4l0-7.3C396.9,269.5,396.9,269.4,397,269.2></path><path fill=#ABADAF d=M396.8,269.7l0,7.3c-0.1,0.2-0.2,0.3-0.3,0.5l0-7.3C396.6,270,396.7,269.8,396.8,269.7></path><path fill=#AFB1B3 d=M396.5,270.1l0,7.3c-0.1,0.2-0.3,0.4-0.5,0.5l0-7.3C396.2,270.5,396.3,270.3,396.5,270.1></path><path fill=#B3B5B6 d=M396,270.7l0,7.3c-0.3,0.3-0.6,0.5-1,0.7l0-7.3C395.4,271.2,395.7,270.9,396,270.7></path><path fill=#B7B9BA d=M395,271.4l0,7.3c0,0-0.1,0-0.1,0.1L395,271.4C394.9,271.4,395,271.4,395,271.4></path></g></g><g><defs><path id=SVGID_9_ d="M14.4,325.2l0-7.3c0,1.2,0.8,2.3,2.3,3.2l0,7.3 C15.2,327.5,14.4,326.3,14.4,325.2z"></path></defs><clipPath id=SVGID_10_><use href=#SVGID_9_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_10_)><path fill=#909294 d=M16.8,321.1l0,7.3c-1.5-0.9-2.3-2.1-2.3-3.2l0-7.3C14.5,319,15.2,320.2,16.8,321.1></path></g></g><polygon fill=#C1C3C4 points="394.9,271.4 394.9,278.8 169.1,410 169.2,402.6"></polygon><polygon fill=#939597 points="158.1,402.6 158.1,410 16.7,328.4 16.8,321.1                 "></polygon><path fill=#D3D4D5 d="M394.9,265c3.1,1.8,3.1,4.7,0,6.4L169.2,402.6c-3,1.8-8,1.8-11.1,0L16.8,321.1c-3.1-1.8-3.1-4.7,0-6.4 l225.8-131.2c3-1.8,8-1.8,11.1,0L394.9,265z"></path><g><defs><path id=SVGID_11_ d="M169.2,402.6l0,7.3c-3,1.8-8,1.8-11.1,0l0-7.3 C161.1,404.4,166.1,404.4,169.2,402.6z"></path></defs><clipPath id=SVGID_12_><use href=#SVGID_11_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_12_)><path fill=#B7B9BA d=M169.2,402.6l0,7.3c-0.5,0.3-1.1,0.6-1.7,0.7l0-7.3C168.1,403.2,168.6,402.9,169.2,402.6></path><path fill=#B3B5B6 d=M167.5,403.4l0,7.3c-0.5,0.2-1,0.3-1.5,0.4l0-7.3C166.5,403.7,167,403.5,167.5,403.4></path><path fill=#AFB1B3 d=M166,403.8l0,7.3c-0.3,0.1-0.7,0.1-1,0.1l0-7.3C165.3,403.9,165.6,403.8,166,403.8></path><path fill=#ABADAF d=M165,403.9l0,7.3c-0.3,0-0.6,0-0.9,0.1l0-7.3C164.4,403.9,164.7,403.9,165,403.9></path><path fill=#A7A9AB d=M164.1,404l0,7.3c-0.3,0-0.5,0-0.8,0l0-7.3C163.5,404,163.8,404,164.1,404></path><path fill=#A3A5A7 d=M163.3,404l0,7.3c-0.3,0-0.5,0-0.8,0l0-7.3C162.8,403.9,163,404,163.3,404></path><path fill=#9FA1A3 d=M162.5,403.9l0,7.3c-0.3,0-0.5,0-0.8-0.1l0-7.3C162,403.9,162.2,403.9,162.5,403.9></path><path fill=#9B9D9F d=M161.7,403.8l0,7.3c-0.3,0-0.5-0.1-0.8-0.1l0-7.3C161.2,403.8,161.5,403.8,161.7,403.8></path><path fill=#98999C d=M161,403.7l0,7.3c-0.3-0.1-0.6-0.1-0.8-0.2l0-7.3C160.4,403.6,160.7,403.6,161,403.7></path><path fill=#949598 d=M160.1,403.5l0,7.3c-0.3-0.1-0.6-0.2-0.9-0.3l0-7.3C159.5,403.3,159.8,403.4,160.1,403.5></path><path fill=#909294 d=M159.2,403.2l0,7.3c-0.4-0.2-0.8-0.3-1.1-0.5l0-7.3C158.4,402.8,158.8,403,159.2,403.2></path></g></g><polygon fill=#595959 points="223.2,205.3 71.8,293.3 60.3,286.7 211.8,198.7"></polygon><polygon fill=#545454 points="223.2,205.3 223.2,206.1 71.8,294.1 71.8,293.3"></polygon><polygon fill=#464848 points="71.8,293.3 71.8,294.1 60.3,287.5 60.3,286.7"></polygon><g><defs><path id=SVGID_13_ d="M306.5,310.4l0,0.8c0,0.2-0.2,0.5-0.5,0.6l0-0.8 C306.3,310.9,306.5,310.7,306.5,310.4z"></path></defs><clipPath id=SVGID_14_><use href=#SVGID_13_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_14_)><polyline fill=#6E6F6F points="306.5,310.4 306.5,311.3 306.5,311.3 306.5,310.4 306.5,310.4"></polyline><path fill=#707172 d=M306.5,310.4l0,0.8c0,0,0,0.1,0,0.1L306.5,310.4C306.5,310.5,306.5,310.5,306.5,310.4></path><path fill=#737475 d=M306.5,310.5l0,0.8c0,0,0,0.1,0,0.1L306.5,310.5C306.5,310.6,306.5,310.6,306.5,310.5></path><path fill=#767777 d=M306.5,310.6l0,0.8c0,0,0,0.1,0,0.1L306.5,310.6C306.4,310.7,306.4,310.7,306.5,310.6></path><path fill=#797A7A d=M306.4,310.7l0,0.8c0,0,0,0.1-0.1,0.1L306.4,310.7C306.4,310.8,306.4,310.8,306.4,310.7></path><path fill=#7C7D7D d=M306.3,310.8l0,0.8c0,0-0.1,0.1-0.1,0.1l0-0.8C306.3,310.9,306.3,310.9,306.3,310.8></path><path fill=#7F7F80 d=M306.3,310.9l0,0.8c-0.1,0.1-0.1,0.1-0.2,0.1l0-0.8C306.1,311,306.2,311,306.3,310.9></path><path fill=#828283 d=M306,311.1l0,0.8c0,0,0,0,0,0L306,311.1C306,311.1,306,311.1,306,311.1></path></g></g><g><defs><path id=SVGID_15_ d="M193.3,323.5l0-0.8c0,0.2,0.2,0.5,0.5,0.7l0,0.8 C193.4,324,193.3,323.7,193.3,323.5z"></path></defs><clipPath id=SVGID_16_><use href=#SVGID_15_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_16_)><path fill=#656667 d=M193.8,323.3l0,0.8c-0.3-0.2-0.5-0.4-0.5-0.7l0-0.8C193.3,322.9,193.4,323.2,193.8,323.3></path></g></g><polygon fill=#898989 points="306,311.1 306,311.9 240.6,349.9 240.6,349.1"></polygon><polygon fill=#686969 points="238.4,349.1 238.4,349.9 193.7,324.2 193.8,323.3"></polygon><path fill=#959595 d="M306,309.8c0.6,0.4,0.6,0.9,0,1.3l-65.4,38c-0.6,0.4-1.6,0.4-2.3,0l-44.6-25.8c-0.6-0.4-0.6-0.9,0-1.3 l65.4-38c0.6-0.4,1.6-0.4,2.3,0L306,309.8z"></path><g><defs><path id=SVGID_17_ d="M240.6,349.1l0,0.8c-0.6,0.4-1.6,0.4-2.3,0l0-0.8 C239,349.5,240,349.5,240.6,349.1z"></path></defs><clipPath id=SVGID_18_><use href=#SVGID_17_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_18_)><path fill=#828283 d=M240.6,349.1l0,0.8c-0.1,0.1-0.2,0.1-0.4,0.2l0-0.8C240.4,349.2,240.5,349.2,240.6,349.1></path><path fill=#7F7F80 d=M240.3,349.2l0,0.8c-0.1,0-0.2,0.1-0.3,0.1l0-0.8C240.1,349.3,240.2,349.3,240.3,349.2></path><path fill=#7C7D7D d=M240,349.3l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C239.8,349.3,239.9,349.3,240,349.3></path><path fill=#797A7A d=M239.8,349.3l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C239.6,349.4,239.7,349.4,239.8,349.3></path><path fill=#767777 d=M239.6,349.4l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C239.5,349.4,239.5,349.4,239.6,349.4></path><path fill=#737475 d=M239.4,349.4l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C239.3,349.4,239.4,349.4,239.4,349.4></path><path fill=#707172 d=M239.3,349.4l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C239.2,349.3,239.2,349.3,239.3,349.4></path><path fill=#6E6F6F d=M239.1,349.3l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C239,349.3,239.1,349.3,239.1,349.3></path><path fill=#6B6C6C d=M239,349.3l0,0.8c-0.1,0-0.1,0-0.2,0l0-0.8C238.8,349.3,238.9,349.3,239,349.3></path><path fill=#68696A d=M238.8,349.3l0,0.8c-0.1,0-0.1,0-0.2-0.1l0-0.8C238.7,349.2,238.7,349.2,238.8,349.3></path><path fill=#656667 d=M238.6,349.2l0,0.8c-0.1,0-0.2-0.1-0.2-0.1l0-0.8C238.4,349.1,238.5,349.2,238.6,349.2></path></g></g><g><defs><path id=SVGID_19_ d="M261.1,344.6l0-1.6c0-0.4,0.3-0.8,0.8-1.1l0,1.6 C261.4,343.8,261.1,344.2,261.1,344.6z"></path></defs><clipPath id=SVGID_20_><use href=#SVGID_19_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_20_)><path fill=#909294 d=M261.1,344.6l0-1.6c0-0.3,0.2-0.6,0.5-0.9l0,1.6C261.3,344,261.1,344.3,261.1,344.6></path><path fill=#949598 d=M261.6,343.7l0-1.6c0,0,0.1-0.1,0.1-0.1l0,1.6C261.7,343.6,261.6,343.7,261.6,343.7></path><path fill=#98999C d=M261.7,343.6l0-1.6c0,0,0.1-0.1,0.1-0.1l0,1.6C261.8,343.5,261.8,343.6,261.7,343.6></path><polyline fill=#9B9D9F points="261.9,343.5 261.9,341.9 261.9,341.9 261.9,343.5 261.9,343.5"></polyline></g></g><polygon fill=#A4A5A7 points="261.9,343.5 261.9,341.9 293.7,323.4 293.7,325"></polygon><g><defs><path id=SVGID_21_ d="M298.3,324.5l0,1.6c0-0.4-0.3-0.8-0.8-1.1l0-1.6 C298,323.7,298.3,324.1,298.3,324.5z"></path></defs><clipPath id=SVGID_22_><use href=#SVGID_21_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_22_)><path fill=#DFDFE0 d=M297.5,325l0-1.6c0,0,0.1,0,0.1,0L297.5,325C297.5,325,297.5,325,297.5,325></path><path fill=#DBDBDC d=M297.5,325.1l0-1.6c0,0,0.1,0,0.1,0.1L297.5,325.1C297.6,325.1,297.6,325.1,297.5,325.1></path><path fill=#D7D8D9 d=M297.6,325.1l0-1.6c0,0,0.1,0,0.1,0.1L297.6,325.1C297.7,325.2,297.7,325.1,297.6,325.1></path><path fill=#D3D4D5 d=M297.7,325.2l0-1.6c0,0,0,0,0.1,0.1L297.7,325.2C297.8,325.2,297.7,325.2,297.7,325.2></path><path fill=#CFD0D1 d=M297.8,325.2l0-1.6c0,0,0,0,0.1,0.1L297.8,325.2C297.8,325.3,297.8,325.3,297.8,325.2></path><path fill=#CBCCCD d=M297.9,325.3l0-1.6c0,0,0,0,0.1,0.1L297.9,325.3C297.9,325.3,297.9,325.3,297.9,325.3></path><path fill=#C7C8CA d=M297.9,325.4l0-1.6c0,0,0,0,0.1,0.1L297.9,325.4C298,325.4,297.9,325.4,297.9,325.4></path><path fill=#C3C4C6 d=M298,325.4l0-1.6c0,0,0,0,0,0.1L298,325.4C298,325.5,298,325.4,298,325.4></path><path fill=#BFC0C2 d=M298,325.5l0-1.6c0,0,0,0,0,0.1L298,325.5C298,325.5,298,325.5,298,325.5></path><path fill=#BBBCBE d=M298.1,325.5l0-1.6c0,0,0,0,0,0.1L298.1,325.5C298.1,325.6,298.1,325.6,298.1,325.5></path><path fill=#B7B9BA d=M298.1,325.6l0-1.6c0,0,0,0,0,0.1L298.1,325.6C298.1,325.6,298.1,325.6,298.1,325.6></path><path fill=#B3B5B6 d=M298.1,325.7l0-1.6c0,0,0,0,0,0.1L298.1,325.7C298.2,325.7,298.1,325.7,298.1,325.7></path><path fill=#AFB1B3 d=M298.2,325.7l0-1.6c0,0,0,0,0,0.1L298.2,325.7C298.2,325.8,298.2,325.7,298.2,325.7></path><path fill=#ABADAF d=M298.2,325.8l0-1.6c0,0,0,0,0,0.1L298.2,325.8C298.2,325.8,298.2,325.8,298.2,325.8></path><path fill=#A7A9AB d=M298.2,325.9l0-1.6c0,0,0,0,0,0.1L298.2,325.9C298.2,325.9,298.2,325.9,298.2,325.9></path><path fill=#A3A5A7 d=M298.2,325.9l0-1.6c0,0,0,0.1,0,0.1L298.2,325.9C298.2,326,298.2,326,298.2,325.9></path><path fill=#9FA1A3 d=M298.2,326l0-1.6c0,0,0,0.1,0,0.1L298.2,326C298.2,326.1,298.2,326,298.2,326></path><polyline fill=#9B9D9F points="298.2,326.1 298.3,324.5 298.3,324.5 298.2,326.1 298.2,326.1"></polyline></g></g><path fill=#9B9C9F d="M297.5,325c1,0.6,1,1.6,0,2.2l-31.8,18.5c-1,0.6-2.7,0.6-3.8,0c-1-0.6-1-1.6,0-2.2l31.8-18.5 C294.7,324.4,296.4,324.4,297.5,325z"></path><g><defs><path id=SVGID_23_ d="M293.7,325l0-1.6c1-0.6,2.7-0.6,3.8,0l0,1.6 C296.4,324.4,294.7,324.4,293.7,325z"></path></defs><clipPath id=SVGID_24_><use href=#SVGID_23_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_24_)><path fill=#9B9D9F d=M293.7,325l0-1.6c0,0,0.1,0,0.1-0.1l0,1.6C293.8,325,293.7,325,293.7,325></path><path fill=#9FA1A3 d=M293.8,325l0-1.6c0,0,0.1,0,0.1-0.1l0,1.6C293.9,324.9,293.8,324.9,293.8,325></path><path fill=#A3A5A7 d=M293.9,324.9l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294,324.9,293.9,324.9,293.9,324.9></path><path fill=#A7A9AB d=M294,324.9l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.1,324.8,294,324.8,294,324.9></path><path fill=#ABADAF d=M294.1,324.8l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.2,324.8,294.2,324.8,294.1,324.8></path><path fill=#AFB1B3 d=M294.2,324.8l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.3,324.8,294.3,324.8,294.2,324.8></path><path fill=#B3B5B6 d=M294.3,324.7l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.4,324.7,294.4,324.7,294.3,324.7></path><path fill=#B7B9BA d=M294.4,324.7l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.5,324.7,294.5,324.7,294.4,324.7></path><path fill=#BBBCBE d=M294.5,324.7l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.6,324.7,294.6,324.7,294.5,324.7></path><path fill=#BFC0C2 d=M294.6,324.7l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.7,324.6,294.7,324.7,294.6,324.7></path><path fill=#C3C4C6 d=M294.7,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.8,324.6,294.8,324.6,294.7,324.6></path><path fill=#C7C8CA d=M294.8,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C294.9,324.6,294.9,324.6,294.8,324.6></path><path fill=#CBCCCD d=M295,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295,324.6,295,324.6,295,324.6></path><path fill=#CFD0D1 d=M295.1,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.1,324.6,295.1,324.6,295.1,324.6></path><path fill=#D3D4D5 d=M295.2,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.2,324.6,295.2,324.6,295.2,324.6></path><path fill=#D7D8D9 d=M295.3,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.4,324.6,295.3,324.6,295.3,324.6></path><path fill=#DBDBDC d=M295.4,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.5,324.6,295.4,324.6,295.4,324.6></path><path fill=#DFDFE0 d=M295.5,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.6,324.6,295.5,324.6,295.5,324.6></path><path fill=#E3E3E4 d=M295.6,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.7,324.6,295.7,324.6,295.6,324.6></path><path fill=#E7E7E7 d=M295.7,324.6l0-1.6c0,0,0.1,0,0.1,0l0,1.6C295.8,324.6,295.8,324.6,295.7,324.6></path><path fill=#EBEBEB d=M295.9,324.6l0-1.6c0.1,0,0.1,0,0.2,0l0,1.6C296,324.6,295.9,324.6,295.9,324.6></path><path fill=#F2F2F2 d=M296,324.6l0-1.6c0.1,0,0.2,0,0.3,0l0,1.6C296.2,324.6,296.1,324.6,296,324.6></path><path fill=#F3F3F3 d=M296.3,324.6l0-1.6c0.1,0,0.2,0,0.3,0.1l0,1.6C296.5,324.7,296.4,324.6,296.3,324.6></path><path fill=#F2F2F2 d=M296.6,324.7l0-1.6c0.1,0,0.2,0.1,0.3,0.1l0,1.6C296.8,324.7,296.7,324.7,296.6,324.7></path><path fill=#EBEBEB d=M296.9,324.8l0-1.6c0.1,0,0.1,0.1,0.2,0.1l0,1.6C297.1,324.8,297,324.8,296.9,324.8></path><path fill=#E7E7E7 d=M297.1,324.8l0-1.6c0.1,0,0.1,0,0.2,0.1l0,1.6C297.2,324.9,297.2,324.9,297.1,324.8></path><path fill=#E3E3E4 d=M297.3,324.9l0-1.6c0,0,0.1,0,0.1,0.1l0,1.6C297.4,325,297.3,324.9,297.3,324.9></path><path fill=#DFDFE0 d=M297.4,325l0-1.6c0,0,0,0,0,0L297.4,325C297.5,325,297.4,325,297.4,325></path></g></g><g><defs><path id=SVGID_25_ d="M315.3,243.2l0,0.8c0,0.5-0.3,1-0.9,1.3l0-0.8 C315,244.2,315.3,243.7,315.3,243.2z"></path></defs><clipPath id=SVGID_26_><use href=#SVGID_25_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_26_)><path fill=#494A4A d=M315.3,243.2l0,0.8c0,0,0,0,0,0L315.3,243.2C315.3,243.2,315.3,243.2,315.3,243.2></path><path fill=#4A4B4B d=M315.3,243.3l0,0.8c0,0.1,0,0.1,0,0.2l0-0.8C315.3,243.4,315.3,243.3,315.3,243.3></path><path fill=#4B4C4C d=M315.3,243.4l0,0.8c0,0.1,0,0.1-0.1,0.2l0-0.8C315.2,243.6,315.2,243.5,315.3,243.4></path><path fill=#4C4D4D d=M315.2,243.6l0,0.8c0,0.1-0.1,0.1-0.1,0.2l0-0.8C315.2,243.8,315.2,243.7,315.2,243.6></path><path fill=#4D4E4E d=M315.1,243.8l0,0.8c0,0.1-0.1,0.1-0.1,0.2l0-0.8C315,243.9,315.1,243.9,315.1,243.8></path><path fill=#4E4F4F d=M315,244l0,0.8c-0.1,0.1-0.1,0.1-0.2,0.2l0-0.8C314.9,244.2,314.9,244.1,315,244></path><path fill=#505050 d=M314.8,244.2l0,0.8c-0.1,0.1-0.3,0.2-0.4,0.3l0-0.8C314.5,244.4,314.7,244.3,314.8,244.2></path><path fill=#515152 d=M314.4,244.5l0,0.8c0,0,0,0,0,0L314.4,244.5C314.3,244.5,314.4,244.5,314.4,244.5></path></g></g><g><defs><path id=SVGID_27_ d="M61.7,310.8l0-0.8c0,0.5,0.3,1,1,1.3l0,0.8 C62,311.8,61.7,311.3,61.7,310.8z"></path></defs><clipPath id=SVGID_28_><use href=#SVGID_27_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_28_)><path fill=#464747 d=M62.7,311.3l0,0.8c-0.6-0.4-1-0.9-1-1.3l0-0.8C61.7,310.5,62,311,62.7,311.3></path></g></g><polygon fill=#545454 points="314.3,244.6 314.3,245.4 133.6,350.4 133.6,349.6"></polygon><polygon fill=#464848 points="129,349.6 129,350.4 62.6,312.1 62.7,311.3"></polygon><path fill=#595959 d="M314.3,241.9c1.3,0.7,1.3,1.9,0,2.7L133.6,349.6c-1.3,0.7-3.3,0.7-4.6,0l-66.3-38.3 c-1.3-0.7-1.3-1.9,0-2.7l180.8-105.1c1.3-0.7,3.3-0.7,4.6,0L314.3,241.9z"></path><g><defs><path id=SVGID_29_ d="M133.6,349.6l0,0.8c-1.3,0.7-3.3,0.7-4.6,0l0-0.8 C130.2,350.3,132.3,350.3,133.6,349.6z"></path></defs><clipPath id=SVGID_30_><use href=#SVGID_29_ overflow=visible></use></clipPath><g clip-path=url(#SVGID_30_)><path fill=#515152 d=M133.6,349.6l0,0.8c-0.2,0.1-0.5,0.2-0.7,0.3l0-0.8C133.1,349.8,133.3,349.7,133.6,349.6></path><path fill=#505050 d=M132.8,349.9l0,0.8c-0.2,0.1-0.4,0.1-0.6,0.2l0-0.8C132.4,350,132.7,350,132.8,349.9></path><path fill=#4E4F4F d=M132.2,350.1l0,0.8c-0.1,0-0.3,0-0.4,0.1l0-0.8C132,350.1,132.1,350.1,132.2,350.1></path><path fill=#4D4E4E d=M131.8,350.1l0,0.8c-0.1,0-0.2,0-0.4,0l0-0.8C131.6,350.2,131.7,350.1,131.8,350.1></path><path fill=#4C4D4D d=M131.5,350.2l0,0.8c-0.1,0-0.2,0-0.3,0l0-0.8C131.2,350.2,131.3,350.2,131.5,350.2></path><path fill=#4B4C4C d=M131.1,350.2l0,0.8c-0.1,0-0.2,0-0.3,0l0-0.8C130.9,350.2,131,350.2,131.1,350.2></path><path fill=#4A4B4B d=M130.8,350.1l0,0.8c-0.1,0-0.2,0-0.3,0l0-0.8C130.6,350.1,130.7,350.1,130.8,350.1></path><path fill=#494A4A d=M130.5,350.1l0,0.8c-0.1,0-0.2,0-0.3-0.1l0-0.8C130.3,350.1,130.4,350.1,130.5,350.1></path><path fill=#484949 d=M130.2,350.1l0,0.8c-0.1,0-0.2-0.1-0.3-0.1l0-0.8C129.9,350,130,350,130.2,350.1></path><path fill=#474848 d=M129.8,350l0,0.8c-0.1,0-0.3-0.1-0.4-0.1l0-0.8C129.6,349.9,129.7,349.9,129.8,350></path><path fill=#464747 d=M129.4,349.8l0,0.8c-0.2-0.1-0.3-0.1-0.5-0.2l0-0.8C129.1,349.7,129.3,349.8,129.4,349.8>');function ac({width:t=450,height:e=550}){return Y(n=ic(),"width",t),Y(n,"height",e),n;var n}var rc=X("<div><img src=../static/img/portfolio/me.jpg alt=Me><div><p>Hello, I'm Tsotne Darjania.</p><p>A software engineer with expertise in full-stack development</p><p>This is my Portfolio Website"),oc=X("<p data-aos=fade-up>I specialize in dynamic web applications and games, with a strong focus on JavaScript and web technologies. Alongside, I dive deep into data analysis with Python, combining technical expertise with a passion for uncovering insights. Whether it's crafting cutting-edge apps or creating engaging, interactive games, my goal is to make an impact while enjoying the process. Outside of coding, you'll find me on the football field, gaming, or hanging out with my 🐕‍🦺dogs.<br>"),sc=X("<div data-aos=flip-up>");function lc(){let t,e,n;const[i,a]=_(!1),[r,o]=_(window.innerWidth);return S((()=>{const t=()=>o(window.innerWidth);window.addEventListener("resize",t),E((()=>{window.removeEventListener("resize",t)}))})),l=rc(),d=l.firstChild,c=d.nextSibling,u=c.firstChild,h=u.nextSibling,p=h.nextSibling,"function"==typeof e?K(e,l):e=l,"function"==typeof t?K(t,d):t=d,J(l,(s=b((()=>!!i())),()=>{return s()&&[(n=oc(),y((()=>Z(n,nc.heroText+" custom-font-3"))),n),(e=sc(),J(e,(t=b((()=>r()>800)),()=>t()?W(ac,{height:550,width:450}):W(ac,{height:300,width:250}))),y((()=>Z(e,nc.computerAnimation))),e)];var t,e,n}),c),"function"==typeof n?K(n,c):n=c,p.addEventListener("animationend",(()=>{setTimeout((()=>{t.classList.add(nc.goLeft),n.classList.add(nc.goRight),e.classList.remove(nc.fixedHero),a(!0)}),1e3)})),y((t=>{var e=nc.hero+" "+nc.fixedHero,n=nc.myImage,i=nc.textContainer+" custom-font-3",a=nc.title,r=nc.subHeading,o=nc.text;return e!==t.e&&Z(l,t.e=e),n!==t.t&&Z(d,t.t=n),i!==t.a&&Z(c,t.a=i),a!==t.o&&Z(u,t.o=a),r!==t.i&&Z(h,t.i=r),o!==t.n&&Z(p,t.n=o),t}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0}),l;var s,l,d,c,u,h,p}var dc=n(729),cc={};cc.styleTagTransform=mt(),cc.setAttributes=ut(),cc.insert=dt().bind(null,"head"),cc.domAPI=st(),cc.insertStyleElement=pt(),rt()(dc.A,cc);const uc=dc.A&&dc.A.locals?dc.A.locals:void 0;var hc=X("<nav><div><div></div><div></div><div></div></div><ul><button><a href=#skills>Skills</a></button><button><a href=#projects>Projects</a></button><button><a href=#experience> Experience</a></button><button><a href=#contact>Contact");function pc(){let t,e,n,i,a;const r=()=>{window.scrollY>50?t.classList.add(uc.scrolled):t.classList.remove(uc.scrolled)};return S((()=>{window.addEventListener("scroll",r),E((()=>{window.removeEventListener("scroll",r)}))})),o=hc(),s=o.firstChild,l=s.firstChild,d=l.nextSibling,c=d.nextSibling,u=s.nextSibling,h=u.firstChild,p=h.nextSibling,f=p.nextSibling,m=f.nextSibling,"function"==typeof t?K(t,o):t=o,s.$$click=()=>{e.classList.toggle(uc.line1Active),n.classList.toggle(uc.line2Active),i.classList.toggle(uc.line3Active),a.classList.toggle(uc.ulActive)},"function"==typeof e?K(e,l):e=l,"function"==typeof n?K(n,d):n=d,"function"==typeof i?K(i,c):i=c,"function"==typeof a?K(a,u):a=u,h.$$click=()=>{a.classList.remove(uc.ulActive)},p.$$click=()=>{a.classList.remove(uc.ulActive)},f.$$click=()=>{a.classList.remove(uc.ulActive)},m.$$click=()=>{a.classList.remove(uc.ulActive)},y((t=>{var e=uc.nav,n=uc.hamburgerMenu,i=uc.line1,a=uc.line2,r=uc.line3,g=uc.ul,v=uc.menuButton+" custom-font-3",_=uc.menuButton+" custom-font-3",y=uc.menuButton+" custom-font-3",x=uc.menuButton+" custom-font-3";return e!==t.e&&Z(o,t.e=e),n!==t.t&&Z(s,t.t=n),i!==t.a&&Z(l,t.a=i),a!==t.o&&Z(d,t.o=a),r!==t.i&&Z(c,t.i=r),g!==t.n&&Z(u,t.n=g),v!==t.s&&Z(h,t.s=v),_!==t.h&&Z(p,t.h=_),y!==t.r&&Z(f,t.r=y),x!==t.d&&Z(m,t.d=x),t}),{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0,r:void 0,d:void 0}),o;var o,s,l,d,c,u,h,p,f,m}q(["click"]);var fc=X("<div><div>");function mc(){return S((()=>{setTimeout((()=>{window.scrollTo(0,0)}),100)})),t=fc(),e=t.firstChild,J(t,W(pc,{}),e),J(t,W(lc,{}),e),J(e,W(Kd,{}),null),J(e,W(Ot,{}),null),J(e,W(wt,{}),null),J(e,W(xt,{}),null),J(e,W(Dt,{}),null),y((n=>{var i=$d.homePage,a=$d.menuContent;return i!==n.e&&Z(t,n.e=i),a!==n.t&&Z(e,n.t=a),n}),{e:void 0,t:void 0}),t;var t,e}var gc=n(48),vc={};vc.styleTagTransform=mt(),vc.setAttributes=ut(),vc.insert=dt().bind(null,"head"),vc.domAPI=st(),vc.insertStyleElement=pt(),rt()(gc.A,vc),gc.A&&gc.A.locals&&gc.A.locals;var _c=n(42),yc=n.n(_c),xc=n(441),bc={};bc.styleTagTransform=mt(),bc.setAttributes=ut(),bc.insert=dt().bind(null,"head"),bc.domAPI=st(),bc.insertStyleElement=pt(),rt()(xc.A,bc),xc.A&&xc.A.locals&&xc.A.locals;var Mc=X("<div>");!function(t,e,n,i={}){let a;(function(t,e){const n=f,i=c,a=0===t.length,r=void 0===e?i:e,o=a?d:{owned:null,cleanups:null,context:r?r.context:null,owner:r},s=a?t:()=>t((()=>M((()=>z(o)))));c=o,f=null;try{return U(s,!0)}finally{f=n,c=i}})((i=>{a=i,e===document?t():J(e,t(),e.firstChild?null:void 0,n)}),i.owner)}((()=>{return S((()=>{window.scrollTo(0,0),yc().init({duration:400,once:!0})})),J(t=Mc(),W(mc,{})),t;var t}),document.getElementById("root"))})()})();